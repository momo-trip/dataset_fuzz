[
  {
    "arguments": [
      "/usr/lib/llvm-13/bin/clang",
      "-Wno-unused-command-line-argument",
      "-fno-experimental-new-pass-manager",
      "-Xclang",
      "-load",
      "-Xclang",
      "/usr/bin/../lib/afl//SanitizerCoveragePCGUARD.so",
      "-DHAVE_CONFIG_H",
      "-I.",
      "-I../src",
      "-D_U_=__attribute__((unused))",
      "-fsanitize=address",
      "-g",
      "-O1",
      "-Wno-variadic-macros",
      "-Wfatal-errors",
      "-I/usr/include",
      "-c",
      "-g",
      "-funroll-loops",
      "-D__AFL_HAVE_MANUAL_CONTROL=1",
      "-D__AFL_COMPILER=1",
      "-DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION=1",
      "-D__AFL_FUZZ_INIT()=int __afl_sharedmem_fuzzing = 1;extern unsigned int *__afl_fuzz_len;extern unsigned char *__afl_fuzz_ptr;unsigned char __afl_fuzz_alt[1048576];unsigned char *__afl_fuzz_alt_ptr = __afl_fuzz_alt;",
      "-D__AFL_COVERAGE()=int __afl_selective_coverage = 1;void __afl_coverage_discard();void __afl_coverage_skip();void __afl_coverage_on();void __afl_coverage_off();",
      "-D__AFL_COVERAGE_START_OFF()=int __afl_selective_coverage_start_off = 1;",
      "-D__AFL_COVERAGE_ON()=__afl_coverage_on()",
      "-D__AFL_COVERAGE_OFF()=__afl_coverage_off()",
      "-D__AFL_COVERAGE_DISCARD()=__afl_coverage_discard()",
      "-D__AFL_COVERAGE_SKIP()=__afl_coverage_skip()",
      "-D__AFL_FUZZ_TESTCASE_BUF=(__afl_fuzz_ptr ? __afl_fuzz_ptr : __afl_fuzz_alt_ptr)",
      "-D__AFL_FUZZ_TESTCASE_LEN=(__afl_fuzz_ptr ? *__afl_fuzz_len : (*__afl_fuzz_len = read(0, __afl_fuzz_alt_ptr, 1048576)) == 0xffffffff ? 0 : *__afl_fuzz_len)",
      "-D__AFL_LOOP(_A)=({ static volatile char *_B __attribute__((used));  _B = (char*)\"##SIG_AFL_PERSISTENT##\"; __attribute__((visibility(\"default\"))) int _L(unsigned int) __asm__(\"__afl_persistent_loop\"); _L(_A); })",
      "-D__AFL_INIT()=do { static volatile char *_A __attribute__((used));  _A = (char*)\"##SIG_AFL_DEFER_FORKSRV##\"; __attribute__((visibility(\"default\"))) void _I(void) __asm__(\"__afl_manual_init\"); _I(); } while (0)",
      "-Wno-unused-command-line-argument",
      "-o",
      "strlcat.o",
      "strlcat.c"
    ],
    "directory": "/root/dataset_fuzz/tcpreplay-4.5.1/lib",
    "file": "/root/dataset_fuzz/tcpreplay-4.5.1/lib/strlcat.c",
    "output": "/root/dataset_fuzz/tcpreplay-4.5.1/lib/strlcat.o"
  },
  {
    "arguments": [
      "/usr/lib/llvm-13/bin/clang",
      "-Wno-unused-command-line-argument",
      "-fno-experimental-new-pass-manager",
      "-Xclang",
      "-load",
      "-Xclang",
      "/usr/bin/../lib/afl//SanitizerCoveragePCGUARD.so",
      "-DHAVE_CONFIG_H",
      "-I.",
      "-I../src",
      "-D_U_=__attribute__((unused))",
      "-fsanitize=address",
      "-g",
      "-O1",
      "-Wno-variadic-macros",
      "-Wfatal-errors",
      "-I/usr/include",
      "-c",
      "-g",
      "-funroll-loops",
      "-D__AFL_HAVE_MANUAL_CONTROL=1",
      "-D__AFL_COMPILER=1",
      "-DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION=1",
      "-D__AFL_FUZZ_INIT()=int __afl_sharedmem_fuzzing = 1;extern unsigned int *__afl_fuzz_len;extern unsigned char *__afl_fuzz_ptr;unsigned char __afl_fuzz_alt[1048576];unsigned char *__afl_fuzz_alt_ptr = __afl_fuzz_alt;",
      "-D__AFL_COVERAGE()=int __afl_selective_coverage = 1;void __afl_coverage_discard();void __afl_coverage_skip();void __afl_coverage_on();void __afl_coverage_off();",
      "-D__AFL_COVERAGE_START_OFF()=int __afl_selective_coverage_start_off = 1;",
      "-D__AFL_COVERAGE_ON()=__afl_coverage_on()",
      "-D__AFL_COVERAGE_OFF()=__afl_coverage_off()",
      "-D__AFL_COVERAGE_DISCARD()=__afl_coverage_discard()",
      "-D__AFL_COVERAGE_SKIP()=__afl_coverage_skip()",
      "-D__AFL_FUZZ_TESTCASE_BUF=(__afl_fuzz_ptr ? __afl_fuzz_ptr : __afl_fuzz_alt_ptr)",
      "-D__AFL_FUZZ_TESTCASE_LEN=(__afl_fuzz_ptr ? *__afl_fuzz_len : (*__afl_fuzz_len = read(0, __afl_fuzz_alt_ptr, 1048576)) == 0xffffffff ? 0 : *__afl_fuzz_len)",
      "-D__AFL_LOOP(_A)=({ static volatile char *_B __attribute__((used));  _B = (char*)\"##SIG_AFL_PERSISTENT##\"; __attribute__((visibility(\"default\"))) int _L(unsigned int) __asm__(\"__afl_persistent_loop\"); _L(_A); })",
      "-D__AFL_INIT()=do { static volatile char *_A __attribute__((used));  _A = (char*)\"##SIG_AFL_DEFER_FORKSRV##\"; __attribute__((visibility(\"default\"))) void _I(void) __asm__(\"__afl_manual_init\"); _I(); } while (0)",
      "-Wno-unused-command-line-argument",
      "-o",
      "strlcpy.o",
      "strlcpy.c"
    ],
    "directory": "/root/dataset_fuzz/tcpreplay-4.5.1/lib",
    "file": "/root/dataset_fuzz/tcpreplay-4.5.1/lib/strlcpy.c",
    "output": "/root/dataset_fuzz/tcpreplay-4.5.1/lib/strlcpy.o"
  },
  {
    "arguments": [
      "/usr/lib/llvm-13/bin/clang",
      "-Wno-unused-command-line-argument",
      "-fno-experimental-new-pass-manager",
      "-Xclang",
      "-load",
      "-Xclang",
      "/usr/bin/../lib/afl//SanitizerCoveragePCGUARD.so",
      "-DHAVE_CONFIG_H",
      "-I.",
      "-I../src",
      "-I.",
      "-D_U_=__attribute__((unused))",
      "-fsanitize=address",
      "-g",
      "-O1",
      "-Wno-variadic-macros",
      "-Wfatal-errors",
      "-I/usr/include",
      "-c",
      "-fPIC",
      "-DPIC",
      "-g",
      "-funroll-loops",
      "-D__AFL_HAVE_MANUAL_CONTROL=1",
      "-D__AFL_COMPILER=1",
      "-DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION=1",
      "-D__AFL_FUZZ_INIT()=int __afl_sharedmem_fuzzing = 1;extern unsigned int *__afl_fuzz_len;extern unsigned char *__afl_fuzz_ptr;unsigned char __afl_fuzz_alt[1048576];unsigned char *__afl_fuzz_alt_ptr = __afl_fuzz_alt;",
      "-D__AFL_COVERAGE()=int __afl_selective_coverage = 1;void __afl_coverage_discard();void __afl_coverage_skip();void __afl_coverage_on();void __afl_coverage_off();",
      "-D__AFL_COVERAGE_START_OFF()=int __afl_selective_coverage_start_off = 1;",
      "-D__AFL_COVERAGE_ON()=__afl_coverage_on()",
      "-D__AFL_COVERAGE_OFF()=__afl_coverage_off()",
      "-D__AFL_COVERAGE_DISCARD()=__afl_coverage_discard()",
      "-D__AFL_COVERAGE_SKIP()=__afl_coverage_skip()",
      "-D__AFL_FUZZ_TESTCASE_BUF=(__afl_fuzz_ptr ? __afl_fuzz_ptr : __afl_fuzz_alt_ptr)",
      "-D__AFL_FUZZ_TESTCASE_LEN=(__afl_fuzz_ptr ? *__afl_fuzz_len : (*__afl_fuzz_len = read(0, __afl_fuzz_alt_ptr, 1048576)) == 0xffffffff ? 0 : *__afl_fuzz_len)",
      "-D__AFL_LOOP(_A)=({ static volatile char *_B __attribute__((used));  _B = (char*)\"##SIG_AFL_PERSISTENT##\"; __attribute__((visibility(\"default\"))) int _L(unsigned int) __asm__(\"__afl_persistent_loop\"); _L(_A); })",
      "-D__AFL_INIT()=do { static volatile char *_A __attribute__((used));  _A = (char*)\"##SIG_AFL_DEFER_FORKSRV##\"; __attribute__((visibility(\"default\"))) void _I(void) __asm__(\"__afl_manual_init\"); _I(); } while (0)",
      "-Wno-unused-command-line-argument",
      "-o",
      ".libs/libopts_la-libopts.o",
      "libopts.c"
    ],
    "directory": "/root/dataset_fuzz/tcpreplay-4.5.1/libopts",
    "file": "/root/dataset_fuzz/tcpreplay-4.5.1/libopts/libopts.c",
    "output": "/root/dataset_fuzz/tcpreplay-4.5.1/libopts/.libs/libopts_la-libopts.o"
  },
  {
    "arguments": [
      "/usr/lib/llvm-13/bin/clang",
      "-Wno-unused-command-line-argument",
      "-fno-experimental-new-pass-manager",
      "-Xclang",
      "-load",
      "-Xclang",
      "/usr/bin/../lib/afl//SanitizerCoveragePCGUARD.so",
      "-DHAVE_CONFIG_H",
      "-I.",
      "-I../src",
      "-I.",
      "-D_U_=__attribute__((unused))",
      "-fsanitize=address",
      "-g",
      "-O1",
      "-Wno-variadic-macros",
      "-Wfatal-errors",
      "-I/usr/include",
      "-c",
      "-g",
      "-funroll-loops",
      "-D__AFL_HAVE_MANUAL_CONTROL=1",
      "-D__AFL_COMPILER=1",
      "-DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION=1",
      "-D__AFL_FUZZ_INIT()=int __afl_sharedmem_fuzzing = 1;extern unsigned int *__afl_fuzz_len;extern unsigned char *__afl_fuzz_ptr;unsigned char __afl_fuzz_alt[1048576];unsigned char *__afl_fuzz_alt_ptr = __afl_fuzz_alt;",
      "-D__AFL_COVERAGE()=int __afl_selective_coverage = 1;void __afl_coverage_discard();void __afl_coverage_skip();void __afl_coverage_on();void __afl_coverage_off();",
      "-D__AFL_COVERAGE_START_OFF()=int __afl_selective_coverage_start_off = 1;",
      "-D__AFL_COVERAGE_ON()=__afl_coverage_on()",
      "-D__AFL_COVERAGE_OFF()=__afl_coverage_off()",
      "-D__AFL_COVERAGE_DISCARD()=__afl_coverage_discard()",
      "-D__AFL_COVERAGE_SKIP()=__afl_coverage_skip()",
      "-D__AFL_FUZZ_TESTCASE_BUF=(__afl_fuzz_ptr ? __afl_fuzz_ptr : __afl_fuzz_alt_ptr)",
      "-D__AFL_FUZZ_TESTCASE_LEN=(__afl_fuzz_ptr ? *__afl_fuzz_len : (*__afl_fuzz_len = read(0, __afl_fuzz_alt_ptr, 1048576)) == 0xffffffff ? 0 : *__afl_fuzz_len)",
      "-D__AFL_LOOP(_A)=({ static volatile char *_B __attribute__((used));  _B = (char*)\"##SIG_AFL_PERSISTENT##\"; __attribute__((visibility(\"default\"))) int _L(unsigned int) __asm__(\"__afl_persistent_loop\"); _L(_A); })",
      "-D__AFL_INIT()=do { static volatile char *_A __attribute__((used));  _A = (char*)\"##SIG_AFL_DEFER_FORKSRV##\"; __attribute__((visibility(\"default\"))) void _I(void) __asm__(\"__afl_manual_init\"); _I(); } while (0)",
      "-Wno-unused-command-line-argument",
      "-o",
      "libopts_la-libopts.o",
      "libopts.c"
    ],
    "directory": "/root/dataset_fuzz/tcpreplay-4.5.1/libopts",
    "file": "/root/dataset_fuzz/tcpreplay-4.5.1/libopts/libopts.c",
    "output": "/root/dataset_fuzz/tcpreplay-4.5.1/libopts/libopts_la-libopts.o"
  },
  {
    "arguments": [
      "/usr/lib/llvm-13/bin/clang",
      "-Wno-unused-command-line-argument",
      "-fno-experimental-new-pass-manager",
      "-Xclang",
      "-load",
      "-Xclang",
      "/usr/bin/../lib/afl//SanitizerCoveragePCGUARD.so",
      "-DHAVE_CONFIG_H",
      "-I.",
      "-I../../src",
      "-I./..",
      "-I./../..",
      "-D_U_=__attribute__((unused))",
      "-fsanitize=address",
      "-g",
      "-O1",
      "-Wno-variadic-macros",
      "-Wfatal-errors",
      "-I/usr/include",
      "-c",
      "-g",
      "-funroll-loops",
      "-D__AFL_HAVE_MANUAL_CONTROL=1",
      "-D__AFL_COMPILER=1",
      "-DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION=1",
      "-D__AFL_FUZZ_INIT()=int __afl_sharedmem_fuzzing = 1;extern unsigned int *__afl_fuzz_len;extern unsigned char *__afl_fuzz_ptr;unsigned char __afl_fuzz_alt[1048576];unsigned char *__afl_fuzz_alt_ptr = __afl_fuzz_alt;",
      "-D__AFL_COVERAGE()=int __afl_selective_coverage = 1;void __afl_coverage_discard();void __afl_coverage_skip();void __afl_coverage_on();void __afl_coverage_off();",
      "-D__AFL_COVERAGE_START_OFF()=int __afl_selective_coverage_start_off = 1;",
      "-D__AFL_COVERAGE_ON()=__afl_coverage_on()",
      "-D__AFL_COVERAGE_OFF()=__afl_coverage_off()",
      "-D__AFL_COVERAGE_DISCARD()=__afl_coverage_discard()",
      "-D__AFL_COVERAGE_SKIP()=__afl_coverage_skip()",
      "-D__AFL_FUZZ_TESTCASE_BUF=(__afl_fuzz_ptr ? __afl_fuzz_ptr : __afl_fuzz_alt_ptr)",
      "-D__AFL_FUZZ_TESTCASE_LEN=(__afl_fuzz_ptr ? *__afl_fuzz_len : (*__afl_fuzz_len = read(0, __afl_fuzz_alt_ptr, 1048576)) == 0xffffffff ? 0 : *__afl_fuzz_len)",
      "-D__AFL_LOOP(_A)=({ static volatile char *_B __attribute__((used));  _B = (char*)\"##SIG_AFL_PERSISTENT##\"; __attribute__((visibility(\"default\"))) int _L(unsigned int) __asm__(\"__afl_persistent_loop\"); _L(_A); })",
      "-D__AFL_INIT()=do { static volatile char *_A __attribute__((used));  _A = (char*)\"##SIG_AFL_DEFER_FORKSRV##\"; __attribute__((visibility(\"default\"))) void _I(void) __asm__(\"__afl_manual_init\"); _I(); } while (0)",
      "-Wno-unused-command-line-argument",
      "-o",
      "cidr.o",
      "cidr.c"
    ],
    "directory": "/root/dataset_fuzz/tcpreplay-4.5.1/src/common",
    "file": "/root/dataset_fuzz/tcpreplay-4.5.1/src/common/cidr.c",
    "output": "/root/dataset_fuzz/tcpreplay-4.5.1/src/common/cidr.o"
  },
  {
    "arguments": [
      "/usr/lib/llvm-13/bin/clang",
      "-Wno-unused-command-line-argument",
      "-fno-experimental-new-pass-manager",
      "-Xclang",
      "-load",
      "-Xclang",
      "/usr/bin/../lib/afl//SanitizerCoveragePCGUARD.so",
      "-DHAVE_CONFIG_H",
      "-I.",
      "-I../../src",
      "-I./..",
      "-I./../..",
      "-D_U_=__attribute__((unused))",
      "-fsanitize=address",
      "-g",
      "-O1",
      "-Wno-variadic-macros",
      "-Wfatal-errors",
      "-I/usr/include",
      "-c",
      "-g",
      "-funroll-loops",
      "-D__AFL_HAVE_MANUAL_CONTROL=1",
      "-D__AFL_COMPILER=1",
      "-DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION=1",
      "-D__AFL_FUZZ_INIT()=int __afl_sharedmem_fuzzing = 1;extern unsigned int *__afl_fuzz_len;extern unsigned char *__afl_fuzz_ptr;unsigned char __afl_fuzz_alt[1048576];unsigned char *__afl_fuzz_alt_ptr = __afl_fuzz_alt;",
      "-D__AFL_COVERAGE()=int __afl_selective_coverage = 1;void __afl_coverage_discard();void __afl_coverage_skip();void __afl_coverage_on();void __afl_coverage_off();",
      "-D__AFL_COVERAGE_START_OFF()=int __afl_selective_coverage_start_off = 1;",
      "-D__AFL_COVERAGE_ON()=__afl_coverage_on()",
      "-D__AFL_COVERAGE_OFF()=__afl_coverage_off()",
      "-D__AFL_COVERAGE_DISCARD()=__afl_coverage_discard()",
      "-D__AFL_COVERAGE_SKIP()=__afl_coverage_skip()",
      "-D__AFL_FUZZ_TESTCASE_BUF=(__afl_fuzz_ptr ? __afl_fuzz_ptr : __afl_fuzz_alt_ptr)",
      "-D__AFL_FUZZ_TESTCASE_LEN=(__afl_fuzz_ptr ? *__afl_fuzz_len : (*__afl_fuzz_len = read(0, __afl_fuzz_alt_ptr, 1048576)) == 0xffffffff ? 0 : *__afl_fuzz_len)",
      "-D__AFL_LOOP(_A)=({ static volatile char *_B __attribute__((used));  _B = (char*)\"##SIG_AFL_PERSISTENT##\"; __attribute__((visibility(\"default\"))) int _L(unsigned int) __asm__(\"__afl_persistent_loop\"); _L(_A); })",
      "-D__AFL_INIT()=do { static volatile char *_A __attribute__((used));  _A = (char*)\"##SIG_AFL_DEFER_FORKSRV##\"; __attribute__((visibility(\"default\"))) void _I(void) __asm__(\"__afl_manual_init\"); _I(); } while (0)",
      "-Wno-unused-command-line-argument",
      "-o",
      "err.o",
      "err.c"
    ],
    "directory": "/root/dataset_fuzz/tcpreplay-4.5.1/src/common",
    "file": "/root/dataset_fuzz/tcpreplay-4.5.1/src/common/err.c",
    "output": "/root/dataset_fuzz/tcpreplay-4.5.1/src/common/err.o"
  },
  {
    "arguments": [
      "/usr/lib/llvm-13/bin/clang",
      "-Wno-unused-command-line-argument",
      "-fno-experimental-new-pass-manager",
      "-Xclang",
      "-load",
      "-Xclang",
      "/usr/bin/../lib/afl//SanitizerCoveragePCGUARD.so",
      "-DHAVE_CONFIG_H",
      "-I.",
      "-I../../src",
      "-I./..",
      "-I./../..",
      "-D_U_=__attribute__((unused))",
      "-fsanitize=address",
      "-g",
      "-O1",
      "-Wno-variadic-macros",
      "-Wfatal-errors",
      "-I/usr/include",
      "-c",
      "-g",
      "-funroll-loops",
      "-D__AFL_HAVE_MANUAL_CONTROL=1",
      "-D__AFL_COMPILER=1",
      "-DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION=1",
      "-D__AFL_FUZZ_INIT()=int __afl_sharedmem_fuzzing = 1;extern unsigned int *__afl_fuzz_len;extern unsigned char *__afl_fuzz_ptr;unsigned char __afl_fuzz_alt[1048576];unsigned char *__afl_fuzz_alt_ptr = __afl_fuzz_alt;",
      "-D__AFL_COVERAGE()=int __afl_selective_coverage = 1;void __afl_coverage_discard();void __afl_coverage_skip();void __afl_coverage_on();void __afl_coverage_off();",
      "-D__AFL_COVERAGE_START_OFF()=int __afl_selective_coverage_start_off = 1;",
      "-D__AFL_COVERAGE_ON()=__afl_coverage_on()",
      "-D__AFL_COVERAGE_OFF()=__afl_coverage_off()",
      "-D__AFL_COVERAGE_DISCARD()=__afl_coverage_discard()",
      "-D__AFL_COVERAGE_SKIP()=__afl_coverage_skip()",
      "-D__AFL_FUZZ_TESTCASE_BUF=(__afl_fuzz_ptr ? __afl_fuzz_ptr : __afl_fuzz_alt_ptr)",
      "-D__AFL_FUZZ_TESTCASE_LEN=(__afl_fuzz_ptr ? *__afl_fuzz_len : (*__afl_fuzz_len = read(0, __afl_fuzz_alt_ptr, 1048576)) == 0xffffffff ? 0 : *__afl_fuzz_len)",
      "-D__AFL_LOOP(_A)=({ static volatile char *_B __attribute__((used));  _B = (char*)\"##SIG_AFL_PERSISTENT##\"; __attribute__((visibility(\"default\"))) int _L(unsigned int) __asm__(\"__afl_persistent_loop\"); _L(_A); })",
      "-D__AFL_INIT()=do { static volatile char *_A __attribute__((used));  _A = (char*)\"##SIG_AFL_DEFER_FORKSRV##\"; __attribute__((visibility(\"default\"))) void _I(void) __asm__(\"__afl_manual_init\"); _I(); } while (0)",
      "-Wno-unused-command-line-argument",
      "-o",
      "list.o",
      "list.c"
    ],
    "directory": "/root/dataset_fuzz/tcpreplay-4.5.1/src/common",
    "file": "/root/dataset_fuzz/tcpreplay-4.5.1/src/common/list.c",
    "output": "/root/dataset_fuzz/tcpreplay-4.5.1/src/common/list.o"
  },
  {
    "arguments": [
      "/usr/lib/llvm-13/bin/clang",
      "-Wno-unused-command-line-argument",
      "-fno-experimental-new-pass-manager",
      "-Xclang",
      "-load",
      "-Xclang",
      "/usr/bin/../lib/afl//SanitizerCoveragePCGUARD.so",
      "-DHAVE_CONFIG_H",
      "-I.",
      "-I../../src",
      "-I./..",
      "-I./../..",
      "-D_U_=__attribute__((unused))",
      "-fsanitize=address",
      "-g",
      "-O1",
      "-Wno-variadic-macros",
      "-Wfatal-errors",
      "-I/usr/include",
      "-c",
      "-g",
      "-funroll-loops",
      "-D__AFL_HAVE_MANUAL_CONTROL=1",
      "-D__AFL_COMPILER=1",
      "-DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION=1",
      "-D__AFL_FUZZ_INIT()=int __afl_sharedmem_fuzzing = 1;extern unsigned int *__afl_fuzz_len;extern unsigned char *__afl_fuzz_ptr;unsigned char __afl_fuzz_alt[1048576];unsigned char *__afl_fuzz_alt_ptr = __afl_fuzz_alt;",
      "-D__AFL_COVERAGE()=int __afl_selective_coverage = 1;void __afl_coverage_discard();void __afl_coverage_skip();void __afl_coverage_on();void __afl_coverage_off();",
      "-D__AFL_COVERAGE_START_OFF()=int __afl_selective_coverage_start_off = 1;",
      "-D__AFL_COVERAGE_ON()=__afl_coverage_on()",
      "-D__AFL_COVERAGE_OFF()=__afl_coverage_off()",
      "-D__AFL_COVERAGE_DISCARD()=__afl_coverage_discard()",
      "-D__AFL_COVERAGE_SKIP()=__afl_coverage_skip()",
      "-D__AFL_FUZZ_TESTCASE_BUF=(__afl_fuzz_ptr ? __afl_fuzz_ptr : __afl_fuzz_alt_ptr)",
      "-D__AFL_FUZZ_TESTCASE_LEN=(__afl_fuzz_ptr ? *__afl_fuzz_len : (*__afl_fuzz_len = read(0, __afl_fuzz_alt_ptr, 1048576)) == 0xffffffff ? 0 : *__afl_fuzz_len)",
      "-D__AFL_LOOP(_A)=({ static volatile char *_B __attribute__((used));  _B = (char*)\"##SIG_AFL_PERSISTENT##\"; __attribute__((visibility(\"default\"))) int _L(unsigned int) __asm__(\"__afl_persistent_loop\"); _L(_A); })",
      "-D__AFL_INIT()=do { static volatile char *_A __attribute__((used));  _A = (char*)\"##SIG_AFL_DEFER_FORKSRV##\"; __attribute__((visibility(\"default\"))) void _I(void) __asm__(\"__afl_manual_init\"); _I(); } while (0)",
      "-Wno-unused-command-line-argument",
      "-o",
      "cache.o",
      "cache.c"
    ],
    "directory": "/root/dataset_fuzz/tcpreplay-4.5.1/src/common",
    "file": "/root/dataset_fuzz/tcpreplay-4.5.1/src/common/cache.c",
    "output": "/root/dataset_fuzz/tcpreplay-4.5.1/src/common/cache.o"
  },
  {
    "arguments": [
      "/usr/lib/llvm-13/bin/clang",
      "-Wno-unused-command-line-argument",
      "-fno-experimental-new-pass-manager",
      "-Xclang",
      "-load",
      "-Xclang",
      "/usr/bin/../lib/afl//SanitizerCoveragePCGUARD.so",
      "-DHAVE_CONFIG_H",
      "-I.",
      "-I../../src",
      "-I./..",
      "-I./../..",
      "-D_U_=__attribute__((unused))",
      "-fsanitize=address",
      "-g",
      "-O1",
      "-Wno-variadic-macros",
      "-Wfatal-errors",
      "-I/usr/include",
      "-c",
      "-g",
      "-funroll-loops",
      "-D__AFL_HAVE_MANUAL_CONTROL=1",
      "-D__AFL_COMPILER=1",
      "-DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION=1",
      "-D__AFL_FUZZ_INIT()=int __afl_sharedmem_fuzzing = 1;extern unsigned int *__afl_fuzz_len;extern unsigned char *__afl_fuzz_ptr;unsigned char __afl_fuzz_alt[1048576];unsigned char *__afl_fuzz_alt_ptr = __afl_fuzz_alt;",
      "-D__AFL_COVERAGE()=int __afl_selective_coverage = 1;void __afl_coverage_discard();void __afl_coverage_skip();void __afl_coverage_on();void __afl_coverage_off();",
      "-D__AFL_COVERAGE_START_OFF()=int __afl_selective_coverage_start_off = 1;",
      "-D__AFL_COVERAGE_ON()=__afl_coverage_on()",
      "-D__AFL_COVERAGE_OFF()=__afl_coverage_off()",
      "-D__AFL_COVERAGE_DISCARD()=__afl_coverage_discard()",
      "-D__AFL_COVERAGE_SKIP()=__afl_coverage_skip()",
      "-D__AFL_FUZZ_TESTCASE_BUF=(__afl_fuzz_ptr ? __afl_fuzz_ptr : __afl_fuzz_alt_ptr)",
      "-D__AFL_FUZZ_TESTCASE_LEN=(__afl_fuzz_ptr ? *__afl_fuzz_len : (*__afl_fuzz_len = read(0, __afl_fuzz_alt_ptr, 1048576)) == 0xffffffff ? 0 : *__afl_fuzz_len)",
      "-D__AFL_LOOP(_A)=({ static volatile char *_B __attribute__((used));  _B = (char*)\"##SIG_AFL_PERSISTENT##\"; __attribute__((visibility(\"default\"))) int _L(unsigned int) __asm__(\"__afl_persistent_loop\"); _L(_A); })",
      "-D__AFL_INIT()=do { static volatile char *_A __attribute__((used));  _A = (char*)\"##SIG_AFL_DEFER_FORKSRV##\"; __attribute__((visibility(\"default\"))) void _I(void) __asm__(\"__afl_manual_init\"); _I(); } while (0)",
      "-Wno-unused-command-line-argument",
      "-o",
      "services.o",
      "services.c"
    ],
    "directory": "/root/dataset_fuzz/tcpreplay-4.5.1/src/common",
    "file": "/root/dataset_fuzz/tcpreplay-4.5.1/src/common/services.c",
    "output": "/root/dataset_fuzz/tcpreplay-4.5.1/src/common/services.o"
  },
  {
    "arguments": [
      "/usr/lib/llvm-13/bin/clang",
      "-Wno-unused-command-line-argument",
      "-fno-experimental-new-pass-manager",
      "-Xclang",
      "-load",
      "-Xclang",
      "/usr/bin/../lib/afl//SanitizerCoveragePCGUARD.so",
      "-DHAVE_CONFIG_H",
      "-I.",
      "-I../../src",
      "-I./..",
      "-I./../..",
      "-D_U_=__attribute__((unused))",
      "-fsanitize=address",
      "-g",
      "-O1",
      "-Wno-variadic-macros",
      "-Wfatal-errors",
      "-I/usr/include",
      "-c",
      "-g",
      "-funroll-loops",
      "-D__AFL_HAVE_MANUAL_CONTROL=1",
      "-D__AFL_COMPILER=1",
      "-DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION=1",
      "-D__AFL_FUZZ_INIT()=int __afl_sharedmem_fuzzing = 1;extern unsigned int *__afl_fuzz_len;extern unsigned char *__afl_fuzz_ptr;unsigned char __afl_fuzz_alt[1048576];unsigned char *__afl_fuzz_alt_ptr = __afl_fuzz_alt;",
      "-D__AFL_COVERAGE()=int __afl_selective_coverage = 1;void __afl_coverage_discard();void __afl_coverage_skip();void __afl_coverage_on();void __afl_coverage_off();",
      "-D__AFL_COVERAGE_START_OFF()=int __afl_selective_coverage_start_off = 1;",
      "-D__AFL_COVERAGE_ON()=__afl_coverage_on()",
      "-D__AFL_COVERAGE_OFF()=__afl_coverage_off()",
      "-D__AFL_COVERAGE_DISCARD()=__afl_coverage_discard()",
      "-D__AFL_COVERAGE_SKIP()=__afl_coverage_skip()",
      "-D__AFL_FUZZ_TESTCASE_BUF=(__afl_fuzz_ptr ? __afl_fuzz_ptr : __afl_fuzz_alt_ptr)",
      "-D__AFL_FUZZ_TESTCASE_LEN=(__afl_fuzz_ptr ? *__afl_fuzz_len : (*__afl_fuzz_len = read(0, __afl_fuzz_alt_ptr, 1048576)) == 0xffffffff ? 0 : *__afl_fuzz_len)",
      "-D__AFL_LOOP(_A)=({ static volatile char *_B __attribute__((used));  _B = (char*)\"##SIG_AFL_PERSISTENT##\"; __attribute__((visibility(\"default\"))) int _L(unsigned int) __asm__(\"__afl_persistent_loop\"); _L(_A); })",
      "-D__AFL_INIT()=do { static volatile char *_A __attribute__((used));  _A = (char*)\"##SIG_AFL_DEFER_FORKSRV##\"; __attribute__((visibility(\"default\"))) void _I(void) __asm__(\"__afl_manual_init\"); _I(); } while (0)",
      "-Wno-unused-command-line-argument",
      "-o",
      "get.o",
      "get.c"
    ],
    "directory": "/root/dataset_fuzz/tcpreplay-4.5.1/src/common",
    "file": "/root/dataset_fuzz/tcpreplay-4.5.1/src/common/get.c",
    "output": "/root/dataset_fuzz/tcpreplay-4.5.1/src/common/get.o"
  },
  {
    "arguments": [
      "/usr/lib/llvm-13/bin/clang",
      "-Wno-unused-command-line-argument",
      "-fno-experimental-new-pass-manager",
      "-Xclang",
      "-load",
      "-Xclang",
      "/usr/bin/../lib/afl//SanitizerCoveragePCGUARD.so",
      "-DHAVE_CONFIG_H",
      "-I.",
      "-I../../src",
      "-I./..",
      "-I./../..",
      "-D_U_=__attribute__((unused))",
      "-fsanitize=address",
      "-g",
      "-O1",
      "-Wno-variadic-macros",
      "-Wfatal-errors",
      "-I/usr/include",
      "-c",
      "-g",
      "-funroll-loops",
      "-D__AFL_HAVE_MANUAL_CONTROL=1",
      "-D__AFL_COMPILER=1",
      "-DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION=1",
      "-D__AFL_FUZZ_INIT()=int __afl_sharedmem_fuzzing = 1;extern unsigned int *__afl_fuzz_len;extern unsigned char *__afl_fuzz_ptr;unsigned char __afl_fuzz_alt[1048576];unsigned char *__afl_fuzz_alt_ptr = __afl_fuzz_alt;",
      "-D__AFL_COVERAGE()=int __afl_selective_coverage = 1;void __afl_coverage_discard();void __afl_coverage_skip();void __afl_coverage_on();void __afl_coverage_off();",
      "-D__AFL_COVERAGE_START_OFF()=int __afl_selective_coverage_start_off = 1;",
      "-D__AFL_COVERAGE_ON()=__afl_coverage_on()",
      "-D__AFL_COVERAGE_OFF()=__afl_coverage_off()",
      "-D__AFL_COVERAGE_DISCARD()=__afl_coverage_discard()",
      "-D__AFL_COVERAGE_SKIP()=__afl_coverage_skip()",
      "-D__AFL_FUZZ_TESTCASE_BUF=(__afl_fuzz_ptr ? __afl_fuzz_ptr : __afl_fuzz_alt_ptr)",
      "-D__AFL_FUZZ_TESTCASE_LEN=(__afl_fuzz_ptr ? *__afl_fuzz_len : (*__afl_fuzz_len = read(0, __afl_fuzz_alt_ptr, 1048576)) == 0xffffffff ? 0 : *__afl_fuzz_len)",
      "-D__AFL_LOOP(_A)=({ static volatile char *_B __attribute__((used));  _B = (char*)\"##SIG_AFL_PERSISTENT##\"; __attribute__((visibility(\"default\"))) int _L(unsigned int) __asm__(\"__afl_persistent_loop\"); _L(_A); })",
      "-D__AFL_INIT()=do { static volatile char *_A __attribute__((used));  _A = (char*)\"##SIG_AFL_DEFER_FORKSRV##\"; __attribute__((visibility(\"default\"))) void _I(void) __asm__(\"__afl_manual_init\"); _I(); } while (0)",
      "-Wno-unused-command-line-argument",
      "-o",
      "fakepcap.o",
      "fakepcap.c"
    ],
    "directory": "/root/dataset_fuzz/tcpreplay-4.5.1/src/common",
    "file": "/root/dataset_fuzz/tcpreplay-4.5.1/src/common/fakepcap.c",
    "output": "/root/dataset_fuzz/tcpreplay-4.5.1/src/common/fakepcap.o"
  },
  {
    "arguments": [
      "/usr/lib/llvm-13/bin/clang",
      "-Wno-unused-command-line-argument",
      "-fno-experimental-new-pass-manager",
      "-Xclang",
      "-load",
      "-Xclang",
      "/usr/bin/../lib/afl//SanitizerCoveragePCGUARD.so",
      "-DHAVE_CONFIG_H",
      "-I.",
      "-I../../src",
      "-I./..",
      "-I./../..",
      "-D_U_=__attribute__((unused))",
      "-fsanitize=address",
      "-g",
      "-O1",
      "-Wno-variadic-macros",
      "-Wfatal-errors",
      "-I/usr/include",
      "-c",
      "-g",
      "-funroll-loops",
      "-D__AFL_HAVE_MANUAL_CONTROL=1",
      "-D__AFL_COMPILER=1",
      "-DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION=1",
      "-D__AFL_FUZZ_INIT()=int __afl_sharedmem_fuzzing = 1;extern unsigned int *__afl_fuzz_len;extern unsigned char *__afl_fuzz_ptr;unsigned char __afl_fuzz_alt[1048576];unsigned char *__afl_fuzz_alt_ptr = __afl_fuzz_alt;",
      "-D__AFL_COVERAGE()=int __afl_selective_coverage = 1;void __afl_coverage_discard();void __afl_coverage_skip();void __afl_coverage_on();void __afl_coverage_off();",
      "-D__AFL_COVERAGE_START_OFF()=int __afl_selective_coverage_start_off = 1;",
      "-D__AFL_COVERAGE_ON()=__afl_coverage_on()",
      "-D__AFL_COVERAGE_OFF()=__afl_coverage_off()",
      "-D__AFL_COVERAGE_DISCARD()=__afl_coverage_discard()",
      "-D__AFL_COVERAGE_SKIP()=__afl_coverage_skip()",
      "-D__AFL_FUZZ_TESTCASE_BUF=(__afl_fuzz_ptr ? __afl_fuzz_ptr : __afl_fuzz_alt_ptr)",
      "-D__AFL_FUZZ_TESTCASE_LEN=(__afl_fuzz_ptr ? *__afl_fuzz_len : (*__afl_fuzz_len = read(0, __afl_fuzz_alt_ptr, 1048576)) == 0xffffffff ? 0 : *__afl_fuzz_len)",
      "-D__AFL_LOOP(_A)=({ static volatile char *_B __attribute__((used));  _B = (char*)\"##SIG_AFL_PERSISTENT##\"; __attribute__((visibility(\"default\"))) int _L(unsigned int) __asm__(\"__afl_persistent_loop\"); _L(_A); })",
      "-D__AFL_INIT()=do { static volatile char *_A __attribute__((used));  _A = (char*)\"##SIG_AFL_DEFER_FORKSRV##\"; __attribute__((visibility(\"default\"))) void _I(void) __asm__(\"__afl_manual_init\"); _I(); } while (0)",
      "-Wno-unused-command-line-argument",
      "-o",
      "fakepcapnav.o",
      "fakepcapnav.c"
    ],
    "directory": "/root/dataset_fuzz/tcpreplay-4.5.1/src/common",
    "file": "/root/dataset_fuzz/tcpreplay-4.5.1/src/common/fakepcapnav.c",
    "output": "/root/dataset_fuzz/tcpreplay-4.5.1/src/common/fakepcapnav.o"
  },
  {
    "arguments": [
      "/usr/lib/llvm-13/bin/clang",
      "-Wno-unused-command-line-argument",
      "-fno-experimental-new-pass-manager",
      "-Xclang",
      "-load",
      "-Xclang",
      "/usr/bin/../lib/afl//SanitizerCoveragePCGUARD.so",
      "-DHAVE_CONFIG_H",
      "-I.",
      "-I../../src",
      "-I./..",
      "-I./../..",
      "-D_U_=__attribute__((unused))",
      "-fsanitize=address",
      "-g",
      "-O1",
      "-Wno-variadic-macros",
      "-Wfatal-errors",
      "-I/usr/include",
      "-c",
      "-g",
      "-funroll-loops",
      "-D__AFL_HAVE_MANUAL_CONTROL=1",
      "-D__AFL_COMPILER=1",
      "-DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION=1",
      "-D__AFL_FUZZ_INIT()=int __afl_sharedmem_fuzzing = 1;extern unsigned int *__afl_fuzz_len;extern unsigned char *__afl_fuzz_ptr;unsigned char __afl_fuzz_alt[1048576];unsigned char *__afl_fuzz_alt_ptr = __afl_fuzz_alt;",
      "-D__AFL_COVERAGE()=int __afl_selective_coverage = 1;void __afl_coverage_discard();void __afl_coverage_skip();void __afl_coverage_on();void __afl_coverage_off();",
      "-D__AFL_COVERAGE_START_OFF()=int __afl_selective_coverage_start_off = 1;",
      "-D__AFL_COVERAGE_ON()=__afl_coverage_on()",
      "-D__AFL_COVERAGE_OFF()=__afl_coverage_off()",
      "-D__AFL_COVERAGE_DISCARD()=__afl_coverage_discard()",
      "-D__AFL_COVERAGE_SKIP()=__afl_coverage_skip()",
      "-D__AFL_FUZZ_TESTCASE_BUF=(__afl_fuzz_ptr ? __afl_fuzz_ptr : __afl_fuzz_alt_ptr)",
      "-D__AFL_FUZZ_TESTCASE_LEN=(__afl_fuzz_ptr ? *__afl_fuzz_len : (*__afl_fuzz_len = read(0, __afl_fuzz_alt_ptr, 1048576)) == 0xffffffff ? 0 : *__afl_fuzz_len)",
      "-D__AFL_LOOP(_A)=({ static volatile char *_B __attribute__((used));  _B = (char*)\"##SIG_AFL_PERSISTENT##\"; __attribute__((visibility(\"default\"))) int _L(unsigned int) __asm__(\"__afl_persistent_loop\"); _L(_A); })",
      "-D__AFL_INIT()=do { static volatile char *_A __attribute__((used));  _A = (char*)\"##SIG_AFL_DEFER_FORKSRV##\"; __attribute__((visibility(\"default\"))) void _I(void) __asm__(\"__afl_manual_init\"); _I(); } while (0)",
      "-Wno-unused-command-line-argument",
      "-o",
      "fakepoll.o",
      "fakepoll.c"
    ],
    "directory": "/root/dataset_fuzz/tcpreplay-4.5.1/src/common",
    "file": "/root/dataset_fuzz/tcpreplay-4.5.1/src/common/fakepoll.c",
    "output": "/root/dataset_fuzz/tcpreplay-4.5.1/src/common/fakepoll.o"
  },
  {
    "arguments": [
      "/usr/lib/llvm-13/bin/clang",
      "-Wno-unused-command-line-argument",
      "-fno-experimental-new-pass-manager",
      "-Xclang",
      "-load",
      "-Xclang",
      "/usr/bin/../lib/afl//SanitizerCoveragePCGUARD.so",
      "-DHAVE_CONFIG_H",
      "-I.",
      "-I../../src",
      "-I./..",
      "-I./../..",
      "-D_U_=__attribute__((unused))",
      "-fsanitize=address",
      "-g",
      "-O1",
      "-Wno-variadic-macros",
      "-Wfatal-errors",
      "-I/usr/include",
      "-c",
      "-g",
      "-funroll-loops",
      "-D__AFL_HAVE_MANUAL_CONTROL=1",
      "-D__AFL_COMPILER=1",
      "-DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION=1",
      "-D__AFL_FUZZ_INIT()=int __afl_sharedmem_fuzzing = 1;extern unsigned int *__afl_fuzz_len;extern unsigned char *__afl_fuzz_ptr;unsigned char __afl_fuzz_alt[1048576];unsigned char *__afl_fuzz_alt_ptr = __afl_fuzz_alt;",
      "-D__AFL_COVERAGE()=int __afl_selective_coverage = 1;void __afl_coverage_discard();void __afl_coverage_skip();void __afl_coverage_on();void __afl_coverage_off();",
      "-D__AFL_COVERAGE_START_OFF()=int __afl_selective_coverage_start_off = 1;",
      "-D__AFL_COVERAGE_ON()=__afl_coverage_on()",
      "-D__AFL_COVERAGE_OFF()=__afl_coverage_off()",
      "-D__AFL_COVERAGE_DISCARD()=__afl_coverage_discard()",
      "-D__AFL_COVERAGE_SKIP()=__afl_coverage_skip()",
      "-D__AFL_FUZZ_TESTCASE_BUF=(__afl_fuzz_ptr ? __afl_fuzz_ptr : __afl_fuzz_alt_ptr)",
      "-D__AFL_FUZZ_TESTCASE_LEN=(__afl_fuzz_ptr ? *__afl_fuzz_len : (*__afl_fuzz_len = read(0, __afl_fuzz_alt_ptr, 1048576)) == 0xffffffff ? 0 : *__afl_fuzz_len)",
      "-D__AFL_LOOP(_A)=({ static volatile char *_B __attribute__((used));  _B = (char*)\"##SIG_AFL_PERSISTENT##\"; __attribute__((visibility(\"default\"))) int _L(unsigned int) __asm__(\"__afl_persistent_loop\"); _L(_A); })",
      "-D__AFL_INIT()=do { static volatile char *_A __attribute__((used));  _A = (char*)\"##SIG_AFL_DEFER_FORKSRV##\"; __attribute__((visibility(\"default\"))) void _I(void) __asm__(\"__afl_manual_init\"); _I(); } while (0)",
      "-Wno-unused-command-line-argument",
      "-o",
      "xX.o",
      "xX.c"
    ],
    "directory": "/root/dataset_fuzz/tcpreplay-4.5.1/src/common",
    "file": "/root/dataset_fuzz/tcpreplay-4.5.1/src/common/xX.c",
    "output": "/root/dataset_fuzz/tcpreplay-4.5.1/src/common/xX.o"
  },
  {
    "arguments": [
      "/usr/lib/llvm-13/bin/clang",
      "-Wno-unused-command-line-argument",
      "-fno-experimental-new-pass-manager",
      "-Xclang",
      "-load",
      "-Xclang",
      "/usr/bin/../lib/afl//SanitizerCoveragePCGUARD.so",
      "-DHAVE_CONFIG_H",
      "-I.",
      "-I../../src",
      "-I./..",
      "-I./../..",
      "-D_U_=__attribute__((unused))",
      "-fsanitize=address",
      "-g",
      "-O1",
      "-Wno-variadic-macros",
      "-Wfatal-errors",
      "-I/usr/include",
      "-c",
      "-g",
      "-funroll-loops",
      "-D__AFL_HAVE_MANUAL_CONTROL=1",
      "-D__AFL_COMPILER=1",
      "-DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION=1",
      "-D__AFL_FUZZ_INIT()=int __afl_sharedmem_fuzzing = 1;extern unsigned int *__afl_fuzz_len;extern unsigned char *__afl_fuzz_ptr;unsigned char __afl_fuzz_alt[1048576];unsigned char *__afl_fuzz_alt_ptr = __afl_fuzz_alt;",
      "-D__AFL_COVERAGE()=int __afl_selective_coverage = 1;void __afl_coverage_discard();void __afl_coverage_skip();void __afl_coverage_on();void __afl_coverage_off();",
      "-D__AFL_COVERAGE_START_OFF()=int __afl_selective_coverage_start_off = 1;",
      "-D__AFL_COVERAGE_ON()=__afl_coverage_on()",
      "-D__AFL_COVERAGE_OFF()=__afl_coverage_off()",
      "-D__AFL_COVERAGE_DISCARD()=__afl_coverage_discard()",
      "-D__AFL_COVERAGE_SKIP()=__afl_coverage_skip()",
      "-D__AFL_FUZZ_TESTCASE_BUF=(__afl_fuzz_ptr ? __afl_fuzz_ptr : __afl_fuzz_alt_ptr)",
      "-D__AFL_FUZZ_TESTCASE_LEN=(__afl_fuzz_ptr ? *__afl_fuzz_len : (*__afl_fuzz_len = read(0, __afl_fuzz_alt_ptr, 1048576)) == 0xffffffff ? 0 : *__afl_fuzz_len)",
      "-D__AFL_LOOP(_A)=({ static volatile char *_B __attribute__((used));  _B = (char*)\"##SIG_AFL_PERSISTENT##\"; __attribute__((visibility(\"default\"))) int _L(unsigned int) __asm__(\"__afl_persistent_loop\"); _L(_A); })",
      "-D__AFL_INIT()=do { static volatile char *_A __attribute__((used));  _A = (char*)\"##SIG_AFL_DEFER_FORKSRV##\"; __attribute__((visibility(\"default\"))) void _I(void) __asm__(\"__afl_manual_init\"); _I(); } while (0)",
      "-Wno-unused-command-line-argument",
      "-o",
      "utils.o",
      "utils.c"
    ],
    "directory": "/root/dataset_fuzz/tcpreplay-4.5.1/src/common",
    "file": "/root/dataset_fuzz/tcpreplay-4.5.1/src/common/utils.c",
    "output": "/root/dataset_fuzz/tcpreplay-4.5.1/src/common/utils.o"
  },
  {
    "arguments": [
      "/usr/lib/llvm-13/bin/clang",
      "-Wno-unused-command-line-argument",
      "-fno-experimental-new-pass-manager",
      "-Xclang",
      "-load",
      "-Xclang",
      "/usr/bin/../lib/afl//SanitizerCoveragePCGUARD.so",
      "-DHAVE_CONFIG_H",
      "-I.",
      "-I../../src",
      "-I./..",
      "-I./../..",
      "-D_U_=__attribute__((unused))",
      "-fsanitize=address",
      "-g",
      "-O1",
      "-Wno-variadic-macros",
      "-Wfatal-errors",
      "-I/usr/include",
      "-c",
      "-g",
      "-funroll-loops",
      "-D__AFL_HAVE_MANUAL_CONTROL=1",
      "-D__AFL_COMPILER=1",
      "-DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION=1",
      "-D__AFL_FUZZ_INIT()=int __afl_sharedmem_fuzzing = 1;extern unsigned int *__afl_fuzz_len;extern unsigned char *__afl_fuzz_ptr;unsigned char __afl_fuzz_alt[1048576];unsigned char *__afl_fuzz_alt_ptr = __afl_fuzz_alt;",
      "-D__AFL_COVERAGE()=int __afl_selective_coverage = 1;void __afl_coverage_discard();void __afl_coverage_skip();void __afl_coverage_on();void __afl_coverage_off();",
      "-D__AFL_COVERAGE_START_OFF()=int __afl_selective_coverage_start_off = 1;",
      "-D__AFL_COVERAGE_ON()=__afl_coverage_on()",
      "-D__AFL_COVERAGE_OFF()=__afl_coverage_off()",
      "-D__AFL_COVERAGE_DISCARD()=__afl_coverage_discard()",
      "-D__AFL_COVERAGE_SKIP()=__afl_coverage_skip()",
      "-D__AFL_FUZZ_TESTCASE_BUF=(__afl_fuzz_ptr ? __afl_fuzz_ptr : __afl_fuzz_alt_ptr)",
      "-D__AFL_FUZZ_TESTCASE_LEN=(__afl_fuzz_ptr ? *__afl_fuzz_len : (*__afl_fuzz_len = read(0, __afl_fuzz_alt_ptr, 1048576)) == 0xffffffff ? 0 : *__afl_fuzz_len)",
      "-D__AFL_LOOP(_A)=({ static volatile char *_B __attribute__((used));  _B = (char*)\"##SIG_AFL_PERSISTENT##\"; __attribute__((visibility(\"default\"))) int _L(unsigned int) __asm__(\"__afl_persistent_loop\"); _L(_A); })",
      "-D__AFL_INIT()=do { static volatile char *_A __attribute__((used));  _A = (char*)\"##SIG_AFL_DEFER_FORKSRV##\"; __attribute__((visibility(\"default\"))) void _I(void) __asm__(\"__afl_manual_init\"); _I(); } while (0)",
      "-Wno-unused-command-line-argument",
      "-o",
      "timer.o",
      "timer.c"
    ],
    "directory": "/root/dataset_fuzz/tcpreplay-4.5.1/src/common",
    "file": "/root/dataset_fuzz/tcpreplay-4.5.1/src/common/timer.c",
    "output": "/root/dataset_fuzz/tcpreplay-4.5.1/src/common/timer.o"
  },
  {
    "arguments": [
      "/usr/lib/llvm-13/bin/clang",
      "-Wno-unused-command-line-argument",
      "-fno-experimental-new-pass-manager",
      "-Xclang",
      "-load",
      "-Xclang",
      "/usr/bin/../lib/afl//SanitizerCoveragePCGUARD.so",
      "-DHAVE_CONFIG_H",
      "-I.",
      "-I../../src",
      "-I./..",
      "-I./../..",
      "-D_U_=__attribute__((unused))",
      "-fsanitize=address",
      "-g",
      "-O1",
      "-Wno-variadic-macros",
      "-Wfatal-errors",
      "-I/usr/include",
      "-c",
      "-g",
      "-funroll-loops",
      "-D__AFL_HAVE_MANUAL_CONTROL=1",
      "-D__AFL_COMPILER=1",
      "-DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION=1",
      "-D__AFL_FUZZ_INIT()=int __afl_sharedmem_fuzzing = 1;extern unsigned int *__afl_fuzz_len;extern unsigned char *__afl_fuzz_ptr;unsigned char __afl_fuzz_alt[1048576];unsigned char *__afl_fuzz_alt_ptr = __afl_fuzz_alt;",
      "-D__AFL_COVERAGE()=int __afl_selective_coverage = 1;void __afl_coverage_discard();void __afl_coverage_skip();void __afl_coverage_on();void __afl_coverage_off();",
      "-D__AFL_COVERAGE_START_OFF()=int __afl_selective_coverage_start_off = 1;",
      "-D__AFL_COVERAGE_ON()=__afl_coverage_on()",
      "-D__AFL_COVERAGE_OFF()=__afl_coverage_off()",
      "-D__AFL_COVERAGE_DISCARD()=__afl_coverage_discard()",
      "-D__AFL_COVERAGE_SKIP()=__afl_coverage_skip()",
      "-D__AFL_FUZZ_TESTCASE_BUF=(__afl_fuzz_ptr ? __afl_fuzz_ptr : __afl_fuzz_alt_ptr)",
      "-D__AFL_FUZZ_TESTCASE_LEN=(__afl_fuzz_ptr ? *__afl_fuzz_len : (*__afl_fuzz_len = read(0, __afl_fuzz_alt_ptr, 1048576)) == 0xffffffff ? 0 : *__afl_fuzz_len)",
      "-D__AFL_LOOP(_A)=({ static volatile char *_B __attribute__((used));  _B = (char*)\"##SIG_AFL_PERSISTENT##\"; __attribute__((visibility(\"default\"))) int _L(unsigned int) __asm__(\"__afl_persistent_loop\"); _L(_A); })",
      "-D__AFL_INIT()=do { static volatile char *_A __attribute__((used));  _A = (char*)\"##SIG_AFL_DEFER_FORKSRV##\"; __attribute__((visibility(\"default\"))) void _I(void) __asm__(\"__afl_manual_init\"); _I(); } while (0)",
      "-Wno-unused-command-line-argument",
      "-o",
      "git_version.o",
      "git_version.c"
    ],
    "directory": "/root/dataset_fuzz/tcpreplay-4.5.1/src/common",
    "file": "/root/dataset_fuzz/tcpreplay-4.5.1/src/common/git_version.c",
    "output": "/root/dataset_fuzz/tcpreplay-4.5.1/src/common/git_version.o"
  },
  {
    "arguments": [
      "/usr/lib/llvm-13/bin/clang",
      "-Wno-unused-command-line-argument",
      "-fno-experimental-new-pass-manager",
      "-Xclang",
      "-load",
      "-Xclang",
      "/usr/bin/../lib/afl//SanitizerCoveragePCGUARD.so",
      "-DHAVE_CONFIG_H",
      "-I.",
      "-I../../src",
      "-I./..",
      "-I./../..",
      "-D_U_=__attribute__((unused))",
      "-fsanitize=address",
      "-g",
      "-O1",
      "-Wno-variadic-macros",
      "-Wfatal-errors",
      "-I/usr/include",
      "-c",
      "-g",
      "-funroll-loops",
      "-D__AFL_HAVE_MANUAL_CONTROL=1",
      "-D__AFL_COMPILER=1",
      "-DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION=1",
      "-D__AFL_FUZZ_INIT()=int __afl_sharedmem_fuzzing = 1;extern unsigned int *__afl_fuzz_len;extern unsigned char *__afl_fuzz_ptr;unsigned char __afl_fuzz_alt[1048576];unsigned char *__afl_fuzz_alt_ptr = __afl_fuzz_alt;",
      "-D__AFL_COVERAGE()=int __afl_selective_coverage = 1;void __afl_coverage_discard();void __afl_coverage_skip();void __afl_coverage_on();void __afl_coverage_off();",
      "-D__AFL_COVERAGE_START_OFF()=int __afl_selective_coverage_start_off = 1;",
      "-D__AFL_COVERAGE_ON()=__afl_coverage_on()",
      "-D__AFL_COVERAGE_OFF()=__afl_coverage_off()",
      "-D__AFL_COVERAGE_DISCARD()=__afl_coverage_discard()",
      "-D__AFL_COVERAGE_SKIP()=__afl_coverage_skip()",
      "-D__AFL_FUZZ_TESTCASE_BUF=(__afl_fuzz_ptr ? __afl_fuzz_ptr : __afl_fuzz_alt_ptr)",
      "-D__AFL_FUZZ_TESTCASE_LEN=(__afl_fuzz_ptr ? *__afl_fuzz_len : (*__afl_fuzz_len = read(0, __afl_fuzz_alt_ptr, 1048576)) == 0xffffffff ? 0 : *__afl_fuzz_len)",
      "-D__AFL_LOOP(_A)=({ static volatile char *_B __attribute__((used));  _B = (char*)\"##SIG_AFL_PERSISTENT##\"; __attribute__((visibility(\"default\"))) int _L(unsigned int) __asm__(\"__afl_persistent_loop\"); _L(_A); })",
      "-D__AFL_INIT()=do { static volatile char *_A __attribute__((used));  _A = (char*)\"##SIG_AFL_DEFER_FORKSRV##\"; __attribute__((visibility(\"default\"))) void _I(void) __asm__(\"__afl_manual_init\"); _I(); } while (0)",
      "-Wno-unused-command-line-argument",
      "-o",
      "sendpacket.o",
      "sendpacket.c"
    ],
    "directory": "/root/dataset_fuzz/tcpreplay-4.5.1/src/common",
    "file": "/root/dataset_fuzz/tcpreplay-4.5.1/src/common/sendpacket.c",
    "output": "/root/dataset_fuzz/tcpreplay-4.5.1/src/common/sendpacket.o"
  },
  {
    "arguments": [
      "/usr/lib/llvm-13/bin/clang",
      "-Wno-unused-command-line-argument",
      "-fno-experimental-new-pass-manager",
      "-Xclang",
      "-load",
      "-Xclang",
      "/usr/bin/../lib/afl//SanitizerCoveragePCGUARD.so",
      "-DHAVE_CONFIG_H",
      "-I.",
      "-I../../src",
      "-I./..",
      "-I./../..",
      "-D_U_=__attribute__((unused))",
      "-fsanitize=address",
      "-g",
      "-O1",
      "-Wno-variadic-macros",
      "-Wfatal-errors",
      "-I/usr/include",
      "-c",
      "-g",
      "-funroll-loops",
      "-D__AFL_HAVE_MANUAL_CONTROL=1",
      "-D__AFL_COMPILER=1",
      "-DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION=1",
      "-D__AFL_FUZZ_INIT()=int __afl_sharedmem_fuzzing = 1;extern unsigned int *__afl_fuzz_len;extern unsigned char *__afl_fuzz_ptr;unsigned char __afl_fuzz_alt[1048576];unsigned char *__afl_fuzz_alt_ptr = __afl_fuzz_alt;",
      "-D__AFL_COVERAGE()=int __afl_selective_coverage = 1;void __afl_coverage_discard();void __afl_coverage_skip();void __afl_coverage_on();void __afl_coverage_off();",
      "-D__AFL_COVERAGE_START_OFF()=int __afl_selective_coverage_start_off = 1;",
      "-D__AFL_COVERAGE_ON()=__afl_coverage_on()",
      "-D__AFL_COVERAGE_OFF()=__afl_coverage_off()",
      "-D__AFL_COVERAGE_DISCARD()=__afl_coverage_discard()",
      "-D__AFL_COVERAGE_SKIP()=__afl_coverage_skip()",
      "-D__AFL_FUZZ_TESTCASE_BUF=(__afl_fuzz_ptr ? __afl_fuzz_ptr : __afl_fuzz_alt_ptr)",
      "-D__AFL_FUZZ_TESTCASE_LEN=(__afl_fuzz_ptr ? *__afl_fuzz_len : (*__afl_fuzz_len = read(0, __afl_fuzz_alt_ptr, 1048576)) == 0xffffffff ? 0 : *__afl_fuzz_len)",
      "-D__AFL_LOOP(_A)=({ static volatile char *_B __attribute__((used));  _B = (char*)\"##SIG_AFL_PERSISTENT##\"; __attribute__((visibility(\"default\"))) int _L(unsigned int) __asm__(\"__afl_persistent_loop\"); _L(_A); })",
      "-D__AFL_INIT()=do { static volatile char *_A __attribute__((used));  _A = (char*)\"##SIG_AFL_DEFER_FORKSRV##\"; __attribute__((visibility(\"default\"))) void _I(void) __asm__(\"__afl_manual_init\"); _I(); } while (0)",
      "-Wno-unused-command-line-argument",
      "-o",
      "dlt_names.o",
      "dlt_names.c"
    ],
    "directory": "/root/dataset_fuzz/tcpreplay-4.5.1/src/common",
    "file": "/root/dataset_fuzz/tcpreplay-4.5.1/src/common/dlt_names.c",
    "output": "/root/dataset_fuzz/tcpreplay-4.5.1/src/common/dlt_names.o"
  },
  {
    "arguments": [
      "/usr/lib/llvm-13/bin/clang",
      "-Wno-unused-command-line-argument",
      "-fno-experimental-new-pass-manager",
      "-Xclang",
      "-load",
      "-Xclang",
      "/usr/bin/../lib/afl//SanitizerCoveragePCGUARD.so",
      "-DHAVE_CONFIG_H",
      "-I.",
      "-I../../src",
      "-I./..",
      "-I./../..",
      "-D_U_=__attribute__((unused))",
      "-fsanitize=address",
      "-g",
      "-O1",
      "-Wno-variadic-macros",
      "-Wfatal-errors",
      "-I/usr/include",
      "-c",
      "-g",
      "-funroll-loops",
      "-D__AFL_HAVE_MANUAL_CONTROL=1",
      "-D__AFL_COMPILER=1",
      "-DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION=1",
      "-D__AFL_FUZZ_INIT()=int __afl_sharedmem_fuzzing = 1;extern unsigned int *__afl_fuzz_len;extern unsigned char *__afl_fuzz_ptr;unsigned char __afl_fuzz_alt[1048576];unsigned char *__afl_fuzz_alt_ptr = __afl_fuzz_alt;",
      "-D__AFL_COVERAGE()=int __afl_selective_coverage = 1;void __afl_coverage_discard();void __afl_coverage_skip();void __afl_coverage_on();void __afl_coverage_off();",
      "-D__AFL_COVERAGE_START_OFF()=int __afl_selective_coverage_start_off = 1;",
      "-D__AFL_COVERAGE_ON()=__afl_coverage_on()",
      "-D__AFL_COVERAGE_OFF()=__afl_coverage_off()",
      "-D__AFL_COVERAGE_DISCARD()=__afl_coverage_discard()",
      "-D__AFL_COVERAGE_SKIP()=__afl_coverage_skip()",
      "-D__AFL_FUZZ_TESTCASE_BUF=(__afl_fuzz_ptr ? __afl_fuzz_ptr : __afl_fuzz_alt_ptr)",
      "-D__AFL_FUZZ_TESTCASE_LEN=(__afl_fuzz_ptr ? *__afl_fuzz_len : (*__afl_fuzz_len = read(0, __afl_fuzz_alt_ptr, 1048576)) == 0xffffffff ? 0 : *__afl_fuzz_len)",
      "-D__AFL_LOOP(_A)=({ static volatile char *_B __attribute__((used));  _B = (char*)\"##SIG_AFL_PERSISTENT##\"; __attribute__((visibility(\"default\"))) int _L(unsigned int) __asm__(\"__afl_persistent_loop\"); _L(_A); })",
      "-D__AFL_INIT()=do { static volatile char *_A __attribute__((used));  _A = (char*)\"##SIG_AFL_DEFER_FORKSRV##\"; __attribute__((visibility(\"default\"))) void _I(void) __asm__(\"__afl_manual_init\"); _I(); } while (0)",
      "-Wno-unused-command-line-argument",
      "-o",
      "mac.o",
      "mac.c"
    ],
    "directory": "/root/dataset_fuzz/tcpreplay-4.5.1/src/common",
    "file": "/root/dataset_fuzz/tcpreplay-4.5.1/src/common/mac.c",
    "output": "/root/dataset_fuzz/tcpreplay-4.5.1/src/common/mac.o"
  },
  {
    "arguments": [
      "/usr/lib/llvm-13/bin/clang",
      "-Wno-unused-command-line-argument",
      "-fno-experimental-new-pass-manager",
      "-Xclang",
      "-load",
      "-Xclang",
      "/usr/bin/../lib/afl//SanitizerCoveragePCGUARD.so",
      "-DHAVE_CONFIG_H",
      "-I.",
      "-I../../src",
      "-I./..",
      "-I./../..",
      "-D_U_=__attribute__((unused))",
      "-fsanitize=address",
      "-g",
      "-O1",
      "-Wno-variadic-macros",
      "-Wfatal-errors",
      "-I/usr/include",
      "-c",
      "-g",
      "-funroll-loops",
      "-D__AFL_HAVE_MANUAL_CONTROL=1",
      "-D__AFL_COMPILER=1",
      "-DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION=1",
      "-D__AFL_FUZZ_INIT()=int __afl_sharedmem_fuzzing = 1;extern unsigned int *__afl_fuzz_len;extern unsigned char *__afl_fuzz_ptr;unsigned char __afl_fuzz_alt[1048576];unsigned char *__afl_fuzz_alt_ptr = __afl_fuzz_alt;",
      "-D__AFL_COVERAGE()=int __afl_selective_coverage = 1;void __afl_coverage_discard();void __afl_coverage_skip();void __afl_coverage_on();void __afl_coverage_off();",
      "-D__AFL_COVERAGE_START_OFF()=int __afl_selective_coverage_start_off = 1;",
      "-D__AFL_COVERAGE_ON()=__afl_coverage_on()",
      "-D__AFL_COVERAGE_OFF()=__afl_coverage_off()",
      "-D__AFL_COVERAGE_DISCARD()=__afl_coverage_discard()",
      "-D__AFL_COVERAGE_SKIP()=__afl_coverage_skip()",
      "-D__AFL_FUZZ_TESTCASE_BUF=(__afl_fuzz_ptr ? __afl_fuzz_ptr : __afl_fuzz_alt_ptr)",
      "-D__AFL_FUZZ_TESTCASE_LEN=(__afl_fuzz_ptr ? *__afl_fuzz_len : (*__afl_fuzz_len = read(0, __afl_fuzz_alt_ptr, 1048576)) == 0xffffffff ? 0 : *__afl_fuzz_len)",
      "-D__AFL_LOOP(_A)=({ static volatile char *_B __attribute__((used));  _B = (char*)\"##SIG_AFL_PERSISTENT##\"; __attribute__((visibility(\"default\"))) int _L(unsigned int) __asm__(\"__afl_persistent_loop\"); _L(_A); })",
      "-D__AFL_INIT()=do { static volatile char *_A __attribute__((used));  _A = (char*)\"##SIG_AFL_DEFER_FORKSRV##\"; __attribute__((visibility(\"default\"))) void _I(void) __asm__(\"__afl_manual_init\"); _I(); } while (0)",
      "-Wno-unused-command-line-argument",
      "-o",
      "interface.o",
      "interface.c"
    ],
    "directory": "/root/dataset_fuzz/tcpreplay-4.5.1/src/common",
    "file": "/root/dataset_fuzz/tcpreplay-4.5.1/src/common/interface.c",
    "output": "/root/dataset_fuzz/tcpreplay-4.5.1/src/common/interface.o"
  },
  {
    "arguments": [
      "/usr/lib/llvm-13/bin/clang",
      "-Wno-unused-command-line-argument",
      "-fno-experimental-new-pass-manager",
      "-Xclang",
      "-load",
      "-Xclang",
      "/usr/bin/../lib/afl//SanitizerCoveragePCGUARD.so",
      "-DHAVE_CONFIG_H",
      "-I.",
      "-I../../src",
      "-I./..",
      "-I./../..",
      "-D_U_=__attribute__((unused))",
      "-fsanitize=address",
      "-g",
      "-O1",
      "-Wno-variadic-macros",
      "-Wfatal-errors",
      "-I/usr/include",
      "-c",
      "-g",
      "-funroll-loops",
      "-D__AFL_HAVE_MANUAL_CONTROL=1",
      "-D__AFL_COMPILER=1",
      "-DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION=1",
      "-D__AFL_FUZZ_INIT()=int __afl_sharedmem_fuzzing = 1;extern unsigned int *__afl_fuzz_len;extern unsigned char *__afl_fuzz_ptr;unsigned char __afl_fuzz_alt[1048576];unsigned char *__afl_fuzz_alt_ptr = __afl_fuzz_alt;",
      "-D__AFL_COVERAGE()=int __afl_selective_coverage = 1;void __afl_coverage_discard();void __afl_coverage_skip();void __afl_coverage_on();void __afl_coverage_off();",
      "-D__AFL_COVERAGE_START_OFF()=int __afl_selective_coverage_start_off = 1;",
      "-D__AFL_COVERAGE_ON()=__afl_coverage_on()",
      "-D__AFL_COVERAGE_OFF()=__afl_coverage_off()",
      "-D__AFL_COVERAGE_DISCARD()=__afl_coverage_discard()",
      "-D__AFL_COVERAGE_SKIP()=__afl_coverage_skip()",
      "-D__AFL_FUZZ_TESTCASE_BUF=(__afl_fuzz_ptr ? __afl_fuzz_ptr : __afl_fuzz_alt_ptr)",
      "-D__AFL_FUZZ_TESTCASE_LEN=(__afl_fuzz_ptr ? *__afl_fuzz_len : (*__afl_fuzz_len = read(0, __afl_fuzz_alt_ptr, 1048576)) == 0xffffffff ? 0 : *__afl_fuzz_len)",
      "-D__AFL_LOOP(_A)=({ static volatile char *_B __attribute__((used));  _B = (char*)\"##SIG_AFL_PERSISTENT##\"; __attribute__((visibility(\"default\"))) int _L(unsigned int) __asm__(\"__afl_persistent_loop\"); _L(_A); })",
      "-D__AFL_INIT()=do { static volatile char *_A __attribute__((used));  _A = (char*)\"##SIG_AFL_DEFER_FORKSRV##\"; __attribute__((visibility(\"default\"))) void _I(void) __asm__(\"__afl_manual_init\"); _I(); } while (0)",
      "-Wno-unused-command-line-argument",
      "-o",
      "flows.o",
      "flows.c"
    ],
    "directory": "/root/dataset_fuzz/tcpreplay-4.5.1/src/common",
    "file": "/root/dataset_fuzz/tcpreplay-4.5.1/src/common/flows.c",
    "output": "/root/dataset_fuzz/tcpreplay-4.5.1/src/common/flows.o"
  },
  {
    "arguments": [
      "/usr/lib/llvm-13/bin/clang",
      "-Wno-unused-command-line-argument",
      "-fno-experimental-new-pass-manager",
      "-Xclang",
      "-load",
      "-Xclang",
      "/usr/bin/../lib/afl//SanitizerCoveragePCGUARD.so",
      "-DHAVE_CONFIG_H",
      "-I.",
      "-I../../src",
      "-I./..",
      "-I./../..",
      "-D_U_=__attribute__((unused))",
      "-fsanitize=address",
      "-g",
      "-O1",
      "-Wno-variadic-macros",
      "-Wfatal-errors",
      "-I/usr/include",
      "-c",
      "-g",
      "-funroll-loops",
      "-D__AFL_HAVE_MANUAL_CONTROL=1",
      "-D__AFL_COMPILER=1",
      "-DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION=1",
      "-D__AFL_FUZZ_INIT()=int __afl_sharedmem_fuzzing = 1;extern unsigned int *__afl_fuzz_len;extern unsigned char *__afl_fuzz_ptr;unsigned char __afl_fuzz_alt[1048576];unsigned char *__afl_fuzz_alt_ptr = __afl_fuzz_alt;",
      "-D__AFL_COVERAGE()=int __afl_selective_coverage = 1;void __afl_coverage_discard();void __afl_coverage_skip();void __afl_coverage_on();void __afl_coverage_off();",
      "-D__AFL_COVERAGE_START_OFF()=int __afl_selective_coverage_start_off = 1;",
      "-D__AFL_COVERAGE_ON()=__afl_coverage_on()",
      "-D__AFL_COVERAGE_OFF()=__afl_coverage_off()",
      "-D__AFL_COVERAGE_DISCARD()=__afl_coverage_discard()",
      "-D__AFL_COVERAGE_SKIP()=__afl_coverage_skip()",
      "-D__AFL_FUZZ_TESTCASE_BUF=(__afl_fuzz_ptr ? __afl_fuzz_ptr : __afl_fuzz_alt_ptr)",
      "-D__AFL_FUZZ_TESTCASE_LEN=(__afl_fuzz_ptr ? *__afl_fuzz_len : (*__afl_fuzz_len = read(0, __afl_fuzz_alt_ptr, 1048576)) == 0xffffffff ? 0 : *__afl_fuzz_len)",
      "-D__AFL_LOOP(_A)=({ static volatile char *_B __attribute__((used));  _B = (char*)\"##SIG_AFL_PERSISTENT##\"; __attribute__((visibility(\"default\"))) int _L(unsigned int) __asm__(\"__afl_persistent_loop\"); _L(_A); })",
      "-D__AFL_INIT()=do { static volatile char *_A __attribute__((used));  _A = (char*)\"##SIG_AFL_DEFER_FORKSRV##\"; __attribute__((visibility(\"default\"))) void _I(void) __asm__(\"__afl_manual_init\"); _I(); } while (0)",
      "-Wno-unused-command-line-argument",
      "-o",
      "txring.o",
      "txring.c"
    ],
    "directory": "/root/dataset_fuzz/tcpreplay-4.5.1/src/common",
    "file": "/root/dataset_fuzz/tcpreplay-4.5.1/src/common/txring.c",
    "output": "/root/dataset_fuzz/tcpreplay-4.5.1/src/common/txring.o"
  },
  {
    "arguments": [
      "/usr/lib/llvm-13/bin/clang",
      "-Wno-unused-command-line-argument",
      "-fno-experimental-new-pass-manager",
      "-Xclang",
      "-load",
      "-Xclang",
      "/usr/bin/../lib/afl//SanitizerCoveragePCGUARD.so",
      "-DHAVE_CONFIG_H",
      "-I.",
      "-I../../src",
      "-I..",
      "-I./..",
      "-I./../common",
      "-I./../..",
      "-I../../libopts",
      "-I./plugins",
      "-I../../libopts",
      "-D_U_=__attribute__((unused))",
      "-fsanitize=address",
      "-g",
      "-O1",
      "-Wno-variadic-macros",
      "-Wfatal-errors",
      "-I/usr/include",
      "-c",
      "-g",
      "-funroll-loops",
      "-D__AFL_HAVE_MANUAL_CONTROL=1",
      "-D__AFL_COMPILER=1",
      "-DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION=1",
      "-D__AFL_FUZZ_INIT()=int __afl_sharedmem_fuzzing = 1;extern unsigned int *__afl_fuzz_len;extern unsigned char *__afl_fuzz_ptr;unsigned char __afl_fuzz_alt[1048576];unsigned char *__afl_fuzz_alt_ptr = __afl_fuzz_alt;",
      "-D__AFL_COVERAGE()=int __afl_selective_coverage = 1;void __afl_coverage_discard();void __afl_coverage_skip();void __afl_coverage_on();void __afl_coverage_off();",
      "-D__AFL_COVERAGE_START_OFF()=int __afl_selective_coverage_start_off = 1;",
      "-D__AFL_COVERAGE_ON()=__afl_coverage_on()",
      "-D__AFL_COVERAGE_OFF()=__afl_coverage_off()",
      "-D__AFL_COVERAGE_DISCARD()=__afl_coverage_discard()",
      "-D__AFL_COVERAGE_SKIP()=__afl_coverage_skip()",
      "-D__AFL_FUZZ_TESTCASE_BUF=(__afl_fuzz_ptr ? __afl_fuzz_ptr : __afl_fuzz_alt_ptr)",
      "-D__AFL_FUZZ_TESTCASE_LEN=(__afl_fuzz_ptr ? *__afl_fuzz_len : (*__afl_fuzz_len = read(0, __afl_fuzz_alt_ptr, 1048576)) == 0xffffffff ? 0 : *__afl_fuzz_len)",
      "-D__AFL_LOOP(_A)=({ static volatile char *_B __attribute__((used));  _B = (char*)\"##SIG_AFL_PERSISTENT##\"; __attribute__((visibility(\"default\"))) int _L(unsigned int) __asm__(\"__afl_persistent_loop\"); _L(_A); })",
      "-D__AFL_INIT()=do { static volatile char *_A __attribute__((used));  _A = (char*)\"##SIG_AFL_DEFER_FORKSRV##\"; __attribute__((visibility(\"default\"))) void _I(void) __asm__(\"__afl_manual_init\"); _I(); } while (0)",
      "-Wno-unused-command-line-argument",
      "-o",
      "tcpedit.o",
      "tcpedit.c"
    ],
    "directory": "/root/dataset_fuzz/tcpreplay-4.5.1/src/tcpedit",
    "file": "/root/dataset_fuzz/tcpreplay-4.5.1/src/tcpedit/tcpedit.c",
    "output": "/root/dataset_fuzz/tcpreplay-4.5.1/src/tcpedit/tcpedit.o"
  },
  {
    "arguments": [
      "/usr/lib/llvm-13/bin/clang",
      "-Wno-unused-command-line-argument",
      "-fno-experimental-new-pass-manager",
      "-Xclang",
      "-load",
      "-Xclang",
      "/usr/bin/../lib/afl//SanitizerCoveragePCGUARD.so",
      "-DHAVE_CONFIG_H",
      "-I.",
      "-I../../src",
      "-I..",
      "-I./..",
      "-I./../common",
      "-I./../..",
      "-I../../libopts",
      "-I./plugins",
      "-I../../libopts",
      "-D_U_=__attribute__((unused))",
      "-fsanitize=address",
      "-g",
      "-O1",
      "-Wno-variadic-macros",
      "-Wfatal-errors",
      "-I/usr/include",
      "-c",
      "-g",
      "-funroll-loops",
      "-D__AFL_HAVE_MANUAL_CONTROL=1",
      "-D__AFL_COMPILER=1",
      "-DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION=1",
      "-D__AFL_FUZZ_INIT()=int __afl_sharedmem_fuzzing = 1;extern unsigned int *__afl_fuzz_len;extern unsigned char *__afl_fuzz_ptr;unsigned char __afl_fuzz_alt[1048576];unsigned char *__afl_fuzz_alt_ptr = __afl_fuzz_alt;",
      "-D__AFL_COVERAGE()=int __afl_selective_coverage = 1;void __afl_coverage_discard();void __afl_coverage_skip();void __afl_coverage_on();void __afl_coverage_off();",
      "-D__AFL_COVERAGE_START_OFF()=int __afl_selective_coverage_start_off = 1;",
      "-D__AFL_COVERAGE_ON()=__afl_coverage_on()",
      "-D__AFL_COVERAGE_OFF()=__afl_coverage_off()",
      "-D__AFL_COVERAGE_DISCARD()=__afl_coverage_discard()",
      "-D__AFL_COVERAGE_SKIP()=__afl_coverage_skip()",
      "-D__AFL_FUZZ_TESTCASE_BUF=(__afl_fuzz_ptr ? __afl_fuzz_ptr : __afl_fuzz_alt_ptr)",
      "-D__AFL_FUZZ_TESTCASE_LEN=(__afl_fuzz_ptr ? *__afl_fuzz_len : (*__afl_fuzz_len = read(0, __afl_fuzz_alt_ptr, 1048576)) == 0xffffffff ? 0 : *__afl_fuzz_len)",
      "-D__AFL_LOOP(_A)=({ static volatile char *_B __attribute__((used));  _B = (char*)\"##SIG_AFL_PERSISTENT##\"; __attribute__((visibility(\"default\"))) int _L(unsigned int) __asm__(\"__afl_persistent_loop\"); _L(_A); })",
      "-D__AFL_INIT()=do { static volatile char *_A __attribute__((used));  _A = (char*)\"##SIG_AFL_DEFER_FORKSRV##\"; __attribute__((visibility(\"default\"))) void _I(void) __asm__(\"__afl_manual_init\"); _I(); } while (0)",
      "-Wno-unused-command-line-argument",
      "-o",
      "parse_args.o",
      "parse_args.c"
    ],
    "directory": "/root/dataset_fuzz/tcpreplay-4.5.1/src/tcpedit",
    "file": "/root/dataset_fuzz/tcpreplay-4.5.1/src/tcpedit/parse_args.c",
    "output": "/root/dataset_fuzz/tcpreplay-4.5.1/src/tcpedit/parse_args.o"
  },
  {
    "arguments": [
      "/usr/lib/llvm-13/bin/clang",
      "-Wno-unused-command-line-argument",
      "-fno-experimental-new-pass-manager",
      "-Xclang",
      "-load",
      "-Xclang",
      "/usr/bin/../lib/afl//SanitizerCoveragePCGUARD.so",
      "-DHAVE_CONFIG_H",
      "-I.",
      "-I../../src",
      "-I..",
      "-I./..",
      "-I./../common",
      "-I./../..",
      "-I../../libopts",
      "-I./plugins",
      "-I../../libopts",
      "-D_U_=__attribute__((unused))",
      "-fsanitize=address",
      "-g",
      "-O1",
      "-Wno-variadic-macros",
      "-Wfatal-errors",
      "-I/usr/include",
      "-c",
      "-g",
      "-funroll-loops",
      "-D__AFL_HAVE_MANUAL_CONTROL=1",
      "-D__AFL_COMPILER=1",
      "-DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION=1",
      "-D__AFL_FUZZ_INIT()=int __afl_sharedmem_fuzzing = 1;extern unsigned int *__afl_fuzz_len;extern unsigned char *__afl_fuzz_ptr;unsigned char __afl_fuzz_alt[1048576];unsigned char *__afl_fuzz_alt_ptr = __afl_fuzz_alt;",
      "-D__AFL_COVERAGE()=int __afl_selective_coverage = 1;void __afl_coverage_discard();void __afl_coverage_skip();void __afl_coverage_on();void __afl_coverage_off();",
      "-D__AFL_COVERAGE_START_OFF()=int __afl_selective_coverage_start_off = 1;",
      "-D__AFL_COVERAGE_ON()=__afl_coverage_on()",
      "-D__AFL_COVERAGE_OFF()=__afl_coverage_off()",
      "-D__AFL_COVERAGE_DISCARD()=__afl_coverage_discard()",
      "-D__AFL_COVERAGE_SKIP()=__afl_coverage_skip()",
      "-D__AFL_FUZZ_TESTCASE_BUF=(__afl_fuzz_ptr ? __afl_fuzz_ptr : __afl_fuzz_alt_ptr)",
      "-D__AFL_FUZZ_TESTCASE_LEN=(__afl_fuzz_ptr ? *__afl_fuzz_len : (*__afl_fuzz_len = read(0, __afl_fuzz_alt_ptr, 1048576)) == 0xffffffff ? 0 : *__afl_fuzz_len)",
      "-D__AFL_LOOP(_A)=({ static volatile char *_B __attribute__((used));  _B = (char*)\"##SIG_AFL_PERSISTENT##\"; __attribute__((visibility(\"default\"))) int _L(unsigned int) __asm__(\"__afl_persistent_loop\"); _L(_A); })",
      "-D__AFL_INIT()=do { static volatile char *_A __attribute__((used));  _A = (char*)\"##SIG_AFL_DEFER_FORKSRV##\"; __attribute__((visibility(\"default\"))) void _I(void) __asm__(\"__afl_manual_init\"); _I(); } while (0)",
      "-Wno-unused-command-line-argument",
      "-o",
      "edit_packet.o",
      "edit_packet.c"
    ],
    "directory": "/root/dataset_fuzz/tcpreplay-4.5.1/src/tcpedit",
    "file": "/root/dataset_fuzz/tcpreplay-4.5.1/src/tcpedit/edit_packet.c",
    "output": "/root/dataset_fuzz/tcpreplay-4.5.1/src/tcpedit/edit_packet.o"
  },
  {
    "arguments": [
      "/usr/lib/llvm-13/bin/clang",
      "-Wno-unused-command-line-argument",
      "-fno-experimental-new-pass-manager",
      "-Xclang",
      "-load",
      "-Xclang",
      "/usr/bin/../lib/afl//SanitizerCoveragePCGUARD.so",
      "-DHAVE_CONFIG_H",
      "-I.",
      "-I../../src",
      "-I..",
      "-I./..",
      "-I./../common",
      "-I./../..",
      "-I../../libopts",
      "-I./plugins",
      "-I../../libopts",
      "-D_U_=__attribute__((unused))",
      "-fsanitize=address",
      "-g",
      "-O1",
      "-Wno-variadic-macros",
      "-Wfatal-errors",
      "-I/usr/include",
      "-c",
      "-g",
      "-funroll-loops",
      "-D__AFL_HAVE_MANUAL_CONTROL=1",
      "-D__AFL_COMPILER=1",
      "-DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION=1",
      "-D__AFL_FUZZ_INIT()=int __afl_sharedmem_fuzzing = 1;extern unsigned int *__afl_fuzz_len;extern unsigned char *__afl_fuzz_ptr;unsigned char __afl_fuzz_alt[1048576];unsigned char *__afl_fuzz_alt_ptr = __afl_fuzz_alt;",
      "-D__AFL_COVERAGE()=int __afl_selective_coverage = 1;void __afl_coverage_discard();void __afl_coverage_skip();void __afl_coverage_on();void __afl_coverage_off();",
      "-D__AFL_COVERAGE_START_OFF()=int __afl_selective_coverage_start_off = 1;",
      "-D__AFL_COVERAGE_ON()=__afl_coverage_on()",
      "-D__AFL_COVERAGE_OFF()=__afl_coverage_off()",
      "-D__AFL_COVERAGE_DISCARD()=__afl_coverage_discard()",
      "-D__AFL_COVERAGE_SKIP()=__afl_coverage_skip()",
      "-D__AFL_FUZZ_TESTCASE_BUF=(__afl_fuzz_ptr ? __afl_fuzz_ptr : __afl_fuzz_alt_ptr)",
      "-D__AFL_FUZZ_TESTCASE_LEN=(__afl_fuzz_ptr ? *__afl_fuzz_len : (*__afl_fuzz_len = read(0, __afl_fuzz_alt_ptr, 1048576)) == 0xffffffff ? 0 : *__afl_fuzz_len)",
      "-D__AFL_LOOP(_A)=({ static volatile char *_B __attribute__((used));  _B = (char*)\"##SIG_AFL_PERSISTENT##\"; __attribute__((visibility(\"default\"))) int _L(unsigned int) __asm__(\"__afl_persistent_loop\"); _L(_A); })",
      "-D__AFL_INIT()=do { static volatile char *_A __attribute__((used));  _A = (char*)\"##SIG_AFL_DEFER_FORKSRV##\"; __attribute__((visibility(\"default\"))) void _I(void) __asm__(\"__afl_manual_init\"); _I(); } while (0)",
      "-Wno-unused-command-line-argument",
      "-o",
      "portmap.o",
      "portmap.c"
    ],
    "directory": "/root/dataset_fuzz/tcpreplay-4.5.1/src/tcpedit",
    "file": "/root/dataset_fuzz/tcpreplay-4.5.1/src/tcpedit/portmap.c",
    "output": "/root/dataset_fuzz/tcpreplay-4.5.1/src/tcpedit/portmap.o"
  },
  {
    "arguments": [
      "/usr/lib/llvm-13/bin/clang",
      "-Wno-unused-command-line-argument",
      "-fno-experimental-new-pass-manager",
      "-Xclang",
      "-load",
      "-Xclang",
      "/usr/bin/../lib/afl//SanitizerCoveragePCGUARD.so",
      "-DHAVE_CONFIG_H",
      "-I.",
      "-I../../src",
      "-I..",
      "-I./..",
      "-I./../common",
      "-I./../..",
      "-I../../libopts",
      "-I./plugins",
      "-I../../libopts",
      "-D_U_=__attribute__((unused))",
      "-fsanitize=address",
      "-g",
      "-O1",
      "-Wno-variadic-macros",
      "-Wfatal-errors",
      "-I/usr/include",
      "-c",
      "-g",
      "-funroll-loops",
      "-D__AFL_HAVE_MANUAL_CONTROL=1",
      "-D__AFL_COMPILER=1",
      "-DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION=1",
      "-D__AFL_FUZZ_INIT()=int __afl_sharedmem_fuzzing = 1;extern unsigned int *__afl_fuzz_len;extern unsigned char *__afl_fuzz_ptr;unsigned char __afl_fuzz_alt[1048576];unsigned char *__afl_fuzz_alt_ptr = __afl_fuzz_alt;",
      "-D__AFL_COVERAGE()=int __afl_selective_coverage = 1;void __afl_coverage_discard();void __afl_coverage_skip();void __afl_coverage_on();void __afl_coverage_off();",
      "-D__AFL_COVERAGE_START_OFF()=int __afl_selective_coverage_start_off = 1;",
      "-D__AFL_COVERAGE_ON()=__afl_coverage_on()",
      "-D__AFL_COVERAGE_OFF()=__afl_coverage_off()",
      "-D__AFL_COVERAGE_DISCARD()=__afl_coverage_discard()",
      "-D__AFL_COVERAGE_SKIP()=__afl_coverage_skip()",
      "-D__AFL_FUZZ_TESTCASE_BUF=(__afl_fuzz_ptr ? __afl_fuzz_ptr : __afl_fuzz_alt_ptr)",
      "-D__AFL_FUZZ_TESTCASE_LEN=(__afl_fuzz_ptr ? *__afl_fuzz_len : (*__afl_fuzz_len = read(0, __afl_fuzz_alt_ptr, 1048576)) == 0xffffffff ? 0 : *__afl_fuzz_len)",
      "-D__AFL_LOOP(_A)=({ static volatile char *_B __attribute__((used));  _B = (char*)\"##SIG_AFL_PERSISTENT##\"; __attribute__((visibility(\"default\"))) int _L(unsigned int) __asm__(\"__afl_persistent_loop\"); _L(_A); })",
      "-D__AFL_INIT()=do { static volatile char *_A __attribute__((used));  _A = (char*)\"##SIG_AFL_DEFER_FORKSRV##\"; __attribute__((visibility(\"default\"))) void _I(void) __asm__(\"__afl_manual_init\"); _I(); } while (0)",
      "-Wno-unused-command-line-argument",
      "-o",
      "dlt.o",
      "dlt.c"
    ],
    "directory": "/root/dataset_fuzz/tcpreplay-4.5.1/src/tcpedit",
    "file": "/root/dataset_fuzz/tcpreplay-4.5.1/src/tcpedit/dlt.c",
    "output": "/root/dataset_fuzz/tcpreplay-4.5.1/src/tcpedit/dlt.o"
  },
  {
    "arguments": [
      "/usr/lib/llvm-13/bin/clang",
      "-Wno-unused-command-line-argument",
      "-fno-experimental-new-pass-manager",
      "-Xclang",
      "-load",
      "-Xclang",
      "/usr/bin/../lib/afl//SanitizerCoveragePCGUARD.so",
      "-DHAVE_CONFIG_H",
      "-I.",
      "-I../../src",
      "-I..",
      "-I./..",
      "-I./../common",
      "-I./../..",
      "-I../../libopts",
      "-I./plugins",
      "-I../../libopts",
      "-D_U_=__attribute__((unused))",
      "-fsanitize=address",
      "-g",
      "-O1",
      "-Wno-variadic-macros",
      "-Wfatal-errors",
      "-I/usr/include",
      "-c",
      "-g",
      "-funroll-loops",
      "-D__AFL_HAVE_MANUAL_CONTROL=1",
      "-D__AFL_COMPILER=1",
      "-DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION=1",
      "-D__AFL_FUZZ_INIT()=int __afl_sharedmem_fuzzing = 1;extern unsigned int *__afl_fuzz_len;extern unsigned char *__afl_fuzz_ptr;unsigned char __afl_fuzz_alt[1048576];unsigned char *__afl_fuzz_alt_ptr = __afl_fuzz_alt;",
      "-D__AFL_COVERAGE()=int __afl_selective_coverage = 1;void __afl_coverage_discard();void __afl_coverage_skip();void __afl_coverage_on();void __afl_coverage_off();",
      "-D__AFL_COVERAGE_START_OFF()=int __afl_selective_coverage_start_off = 1;",
      "-D__AFL_COVERAGE_ON()=__afl_coverage_on()",
      "-D__AFL_COVERAGE_OFF()=__afl_coverage_off()",
      "-D__AFL_COVERAGE_DISCARD()=__afl_coverage_discard()",
      "-D__AFL_COVERAGE_SKIP()=__afl_coverage_skip()",
      "-D__AFL_FUZZ_TESTCASE_BUF=(__afl_fuzz_ptr ? __afl_fuzz_ptr : __afl_fuzz_alt_ptr)",
      "-D__AFL_FUZZ_TESTCASE_LEN=(__afl_fuzz_ptr ? *__afl_fuzz_len : (*__afl_fuzz_len = read(0, __afl_fuzz_alt_ptr, 1048576)) == 0xffffffff ? 0 : *__afl_fuzz_len)",
      "-D__AFL_LOOP(_A)=({ static volatile char *_B __attribute__((used));  _B = (char*)\"##SIG_AFL_PERSISTENT##\"; __attribute__((visibility(\"default\"))) int _L(unsigned int) __asm__(\"__afl_persistent_loop\"); _L(_A); })",
      "-D__AFL_INIT()=do { static volatile char *_A __attribute__((used));  _A = (char*)\"##SIG_AFL_DEFER_FORKSRV##\"; __attribute__((visibility(\"default\"))) void _I(void) __asm__(\"__afl_manual_init\"); _I(); } while (0)",
      "-Wno-unused-command-line-argument",
      "-o",
      "checksum.o",
      "checksum.c"
    ],
    "directory": "/root/dataset_fuzz/tcpreplay-4.5.1/src/tcpedit",
    "file": "/root/dataset_fuzz/tcpreplay-4.5.1/src/tcpedit/checksum.c",
    "output": "/root/dataset_fuzz/tcpreplay-4.5.1/src/tcpedit/checksum.o"
  },
  {
    "arguments": [
      "/usr/lib/llvm-13/bin/clang",
      "-Wno-unused-command-line-argument",
      "-fno-experimental-new-pass-manager",
      "-Xclang",
      "-load",
      "-Xclang",
      "/usr/bin/../lib/afl//SanitizerCoveragePCGUARD.so",
      "-DHAVE_CONFIG_H",
      "-I.",
      "-I../../src",
      "-I..",
      "-I./..",
      "-I./../common",
      "-I./../..",
      "-I../../libopts",
      "-I./plugins",
      "-I../../libopts",
      "-D_U_=__attribute__((unused))",
      "-fsanitize=address",
      "-g",
      "-O1",
      "-Wno-variadic-macros",
      "-Wfatal-errors",
      "-I/usr/include",
      "-c",
      "-g",
      "-funroll-loops",
      "-D__AFL_HAVE_MANUAL_CONTROL=1",
      "-D__AFL_COMPILER=1",
      "-DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION=1",
      "-D__AFL_FUZZ_INIT()=int __afl_sharedmem_fuzzing = 1;extern unsigned int *__afl_fuzz_len;extern unsigned char *__afl_fuzz_ptr;unsigned char __afl_fuzz_alt[1048576];unsigned char *__afl_fuzz_alt_ptr = __afl_fuzz_alt;",
      "-D__AFL_COVERAGE()=int __afl_selective_coverage = 1;void __afl_coverage_discard();void __afl_coverage_skip();void __afl_coverage_on();void __afl_coverage_off();",
      "-D__AFL_COVERAGE_START_OFF()=int __afl_selective_coverage_start_off = 1;",
      "-D__AFL_COVERAGE_ON()=__afl_coverage_on()",
      "-D__AFL_COVERAGE_OFF()=__afl_coverage_off()",
      "-D__AFL_COVERAGE_DISCARD()=__afl_coverage_discard()",
      "-D__AFL_COVERAGE_SKIP()=__afl_coverage_skip()",
      "-D__AFL_FUZZ_TESTCASE_BUF=(__afl_fuzz_ptr ? __afl_fuzz_ptr : __afl_fuzz_alt_ptr)",
      "-D__AFL_FUZZ_TESTCASE_LEN=(__afl_fuzz_ptr ? *__afl_fuzz_len : (*__afl_fuzz_len = read(0, __afl_fuzz_alt_ptr, 1048576)) == 0xffffffff ? 0 : *__afl_fuzz_len)",
      "-D__AFL_LOOP(_A)=({ static volatile char *_B __attribute__((used));  _B = (char*)\"##SIG_AFL_PERSISTENT##\"; __attribute__((visibility(\"default\"))) int _L(unsigned int) __asm__(\"__afl_persistent_loop\"); _L(_A); })",
      "-D__AFL_INIT()=do { static volatile char *_A __attribute__((used));  _A = (char*)\"##SIG_AFL_DEFER_FORKSRV##\"; __attribute__((visibility(\"default\"))) void _I(void) __asm__(\"__afl_manual_init\"); _I(); } while (0)",
      "-Wno-unused-command-line-argument",
      "-o",
      "incremental_checksum.o",
      "incremental_checksum.c"
    ],
    "directory": "/root/dataset_fuzz/tcpreplay-4.5.1/src/tcpedit",
    "file": "/root/dataset_fuzz/tcpreplay-4.5.1/src/tcpedit/incremental_checksum.c",
    "output": "/root/dataset_fuzz/tcpreplay-4.5.1/src/tcpedit/incremental_checksum.o"
  },
  {
    "arguments": [
      "/usr/lib/llvm-13/bin/clang",
      "-Wno-unused-command-line-argument",
      "-fno-experimental-new-pass-manager",
      "-Xclang",
      "-load",
      "-Xclang",
      "/usr/bin/../lib/afl//SanitizerCoveragePCGUARD.so",
      "-DHAVE_CONFIG_H",
      "-I.",
      "-I../../src",
      "-I..",
      "-I./..",
      "-I./../common",
      "-I./../..",
      "-I../../libopts",
      "-I./plugins",
      "-I../../libopts",
      "-D_U_=__attribute__((unused))",
      "-fsanitize=address",
      "-g",
      "-O1",
      "-Wno-variadic-macros",
      "-Wfatal-errors",
      "-I/usr/include",
      "-c",
      "-g",
      "-funroll-loops",
      "-D__AFL_HAVE_MANUAL_CONTROL=1",
      "-D__AFL_COMPILER=1",
      "-DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION=1",
      "-D__AFL_FUZZ_INIT()=int __afl_sharedmem_fuzzing = 1;extern unsigned int *__afl_fuzz_len;extern unsigned char *__afl_fuzz_ptr;unsigned char __afl_fuzz_alt[1048576];unsigned char *__afl_fuzz_alt_ptr = __afl_fuzz_alt;",
      "-D__AFL_COVERAGE()=int __afl_selective_coverage = 1;void __afl_coverage_discard();void __afl_coverage_skip();void __afl_coverage_on();void __afl_coverage_off();",
      "-D__AFL_COVERAGE_START_OFF()=int __afl_selective_coverage_start_off = 1;",
      "-D__AFL_COVERAGE_ON()=__afl_coverage_on()",
      "-D__AFL_COVERAGE_OFF()=__afl_coverage_off()",
      "-D__AFL_COVERAGE_DISCARD()=__afl_coverage_discard()",
      "-D__AFL_COVERAGE_SKIP()=__afl_coverage_skip()",
      "-D__AFL_FUZZ_TESTCASE_BUF=(__afl_fuzz_ptr ? __afl_fuzz_ptr : __afl_fuzz_alt_ptr)",
      "-D__AFL_FUZZ_TESTCASE_LEN=(__afl_fuzz_ptr ? *__afl_fuzz_len : (*__afl_fuzz_len = read(0, __afl_fuzz_alt_ptr, 1048576)) == 0xffffffff ? 0 : *__afl_fuzz_len)",
      "-D__AFL_LOOP(_A)=({ static volatile char *_B __attribute__((used));  _B = (char*)\"##SIG_AFL_PERSISTENT##\"; __attribute__((visibility(\"default\"))) int _L(unsigned int) __asm__(\"__afl_persistent_loop\"); _L(_A); })",
      "-D__AFL_INIT()=do { static volatile char *_A __attribute__((used));  _A = (char*)\"##SIG_AFL_DEFER_FORKSRV##\"; __attribute__((visibility(\"default\"))) void _I(void) __asm__(\"__afl_manual_init\"); _I(); } while (0)",
      "-Wno-unused-command-line-argument",
      "-o",
      "tcpedit_api.o",
      "tcpedit_api.c"
    ],
    "directory": "/root/dataset_fuzz/tcpreplay-4.5.1/src/tcpedit",
    "file": "/root/dataset_fuzz/tcpreplay-4.5.1/src/tcpedit/tcpedit_api.c",
    "output": "/root/dataset_fuzz/tcpreplay-4.5.1/src/tcpedit/tcpedit_api.o"
  },
  {
    "arguments": [
      "/usr/lib/llvm-13/bin/clang",
      "-Wno-unused-command-line-argument",
      "-fno-experimental-new-pass-manager",
      "-Xclang",
      "-load",
      "-Xclang",
      "/usr/bin/../lib/afl//SanitizerCoveragePCGUARD.so",
      "-DHAVE_CONFIG_H",
      "-I.",
      "-I../../src",
      "-I..",
      "-I./..",
      "-I./../common",
      "-I./../..",
      "-I../../libopts",
      "-I./plugins",
      "-I../../libopts",
      "-D_U_=__attribute__((unused))",
      "-fsanitize=address",
      "-g",
      "-O1",
      "-Wno-variadic-macros",
      "-Wfatal-errors",
      "-I/usr/include",
      "-c",
      "-g",
      "-funroll-loops",
      "-D__AFL_HAVE_MANUAL_CONTROL=1",
      "-D__AFL_COMPILER=1",
      "-DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION=1",
      "-D__AFL_FUZZ_INIT()=int __afl_sharedmem_fuzzing = 1;extern unsigned int *__afl_fuzz_len;extern unsigned char *__afl_fuzz_ptr;unsigned char __afl_fuzz_alt[1048576];unsigned char *__afl_fuzz_alt_ptr = __afl_fuzz_alt;",
      "-D__AFL_COVERAGE()=int __afl_selective_coverage = 1;void __afl_coverage_discard();void __afl_coverage_skip();void __afl_coverage_on();void __afl_coverage_off();",
      "-D__AFL_COVERAGE_START_OFF()=int __afl_selective_coverage_start_off = 1;",
      "-D__AFL_COVERAGE_ON()=__afl_coverage_on()",
      "-D__AFL_COVERAGE_OFF()=__afl_coverage_off()",
      "-D__AFL_COVERAGE_DISCARD()=__afl_coverage_discard()",
      "-D__AFL_COVERAGE_SKIP()=__afl_coverage_skip()",
      "-D__AFL_FUZZ_TESTCASE_BUF=(__afl_fuzz_ptr ? __afl_fuzz_ptr : __afl_fuzz_alt_ptr)",
      "-D__AFL_FUZZ_TESTCASE_LEN=(__afl_fuzz_ptr ? *__afl_fuzz_len : (*__afl_fuzz_len = read(0, __afl_fuzz_alt_ptr, 1048576)) == 0xffffffff ? 0 : *__afl_fuzz_len)",
      "-D__AFL_LOOP(_A)=({ static volatile char *_B __attribute__((used));  _B = (char*)\"##SIG_AFL_PERSISTENT##\"; __attribute__((visibility(\"default\"))) int _L(unsigned int) __asm__(\"__afl_persistent_loop\"); _L(_A); })",
      "-D__AFL_INIT()=do { static volatile char *_A __attribute__((used));  _A = (char*)\"##SIG_AFL_DEFER_FORKSRV##\"; __attribute__((visibility(\"default\"))) void _I(void) __asm__(\"__afl_manual_init\"); _I(); } while (0)",
      "-Wno-unused-command-line-argument",
      "-o",
      "fuzzing.o",
      "fuzzing.c"
    ],
    "directory": "/root/dataset_fuzz/tcpreplay-4.5.1/src/tcpedit",
    "file": "/root/dataset_fuzz/tcpreplay-4.5.1/src/tcpedit/fuzzing.c",
    "output": "/root/dataset_fuzz/tcpreplay-4.5.1/src/tcpedit/fuzzing.o"
  },
  {
    "arguments": [
      "/usr/lib/llvm-13/bin/clang",
      "-Wno-unused-command-line-argument",
      "-fno-experimental-new-pass-manager",
      "-Xclang",
      "-load",
      "-Xclang",
      "/usr/bin/../lib/afl//SanitizerCoveragePCGUARD.so",
      "-DHAVE_CONFIG_H",
      "-I.",
      "-I../../src",
      "-I..",
      "-I./..",
      "-I./../common",
      "-I./../..",
      "-I../../libopts",
      "-I./plugins",
      "-I../../libopts",
      "-D_U_=__attribute__((unused))",
      "-fsanitize=address",
      "-g",
      "-O1",
      "-Wno-variadic-macros",
      "-Wfatal-errors",
      "-I/usr/include",
      "-c",
      "-g",
      "-funroll-loops",
      "-D__AFL_HAVE_MANUAL_CONTROL=1",
      "-D__AFL_COMPILER=1",
      "-DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION=1",
      "-D__AFL_FUZZ_INIT()=int __afl_sharedmem_fuzzing = 1;extern unsigned int *__afl_fuzz_len;extern unsigned char *__afl_fuzz_ptr;unsigned char __afl_fuzz_alt[1048576];unsigned char *__afl_fuzz_alt_ptr = __afl_fuzz_alt;",
      "-D__AFL_COVERAGE()=int __afl_selective_coverage = 1;void __afl_coverage_discard();void __afl_coverage_skip();void __afl_coverage_on();void __afl_coverage_off();",
      "-D__AFL_COVERAGE_START_OFF()=int __afl_selective_coverage_start_off = 1;",
      "-D__AFL_COVERAGE_ON()=__afl_coverage_on()",
      "-D__AFL_COVERAGE_OFF()=__afl_coverage_off()",
      "-D__AFL_COVERAGE_DISCARD()=__afl_coverage_discard()",
      "-D__AFL_COVERAGE_SKIP()=__afl_coverage_skip()",
      "-D__AFL_FUZZ_TESTCASE_BUF=(__afl_fuzz_ptr ? __afl_fuzz_ptr : __afl_fuzz_alt_ptr)",
      "-D__AFL_FUZZ_TESTCASE_LEN=(__afl_fuzz_ptr ? *__afl_fuzz_len : (*__afl_fuzz_len = read(0, __afl_fuzz_alt_ptr, 1048576)) == 0xffffffff ? 0 : *__afl_fuzz_len)",
      "-D__AFL_LOOP(_A)=({ static volatile char *_B __attribute__((used));  _B = (char*)\"##SIG_AFL_PERSISTENT##\"; __attribute__((visibility(\"default\"))) int _L(unsigned int) __asm__(\"__afl_persistent_loop\"); _L(_A); })",
      "-D__AFL_INIT()=do { static volatile char *_A __attribute__((used));  _A = (char*)\"##SIG_AFL_DEFER_FORKSRV##\"; __attribute__((visibility(\"default\"))) void _I(void) __asm__(\"__afl_manual_init\"); _I(); } while (0)",
      "-Wno-unused-command-line-argument",
      "-o",
      "rewrite_sequence.o",
      "rewrite_sequence.c"
    ],
    "directory": "/root/dataset_fuzz/tcpreplay-4.5.1/src/tcpedit",
    "file": "/root/dataset_fuzz/tcpreplay-4.5.1/src/tcpedit/rewrite_sequence.c",
    "output": "/root/dataset_fuzz/tcpreplay-4.5.1/src/tcpedit/rewrite_sequence.o"
  },
  {
    "arguments": [
      "/usr/lib/llvm-13/bin/clang",
      "-Wno-unused-command-line-argument",
      "-fno-experimental-new-pass-manager",
      "-Xclang",
      "-load",
      "-Xclang",
      "/usr/bin/../lib/afl//SanitizerCoveragePCGUARD.so",
      "-DHAVE_CONFIG_H",
      "-I.",
      "-I../../src",
      "-I..",
      "-I./..",
      "-I./../common",
      "-I./../..",
      "-I../../libopts",
      "-I./plugins",
      "-I../../libopts",
      "-D_U_=__attribute__((unused))",
      "-fsanitize=address",
      "-g",
      "-O1",
      "-Wno-variadic-macros",
      "-Wfatal-errors",
      "-I/usr/include",
      "-c",
      "-g",
      "-funroll-loops",
      "-D__AFL_HAVE_MANUAL_CONTROL=1",
      "-D__AFL_COMPILER=1",
      "-DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION=1",
      "-D__AFL_FUZZ_INIT()=int __afl_sharedmem_fuzzing = 1;extern unsigned int *__afl_fuzz_len;extern unsigned char *__afl_fuzz_ptr;unsigned char __afl_fuzz_alt[1048576];unsigned char *__afl_fuzz_alt_ptr = __afl_fuzz_alt;",
      "-D__AFL_COVERAGE()=int __afl_selective_coverage = 1;void __afl_coverage_discard();void __afl_coverage_skip();void __afl_coverage_on();void __afl_coverage_off();",
      "-D__AFL_COVERAGE_START_OFF()=int __afl_selective_coverage_start_off = 1;",
      "-D__AFL_COVERAGE_ON()=__afl_coverage_on()",
      "-D__AFL_COVERAGE_OFF()=__afl_coverage_off()",
      "-D__AFL_COVERAGE_DISCARD()=__afl_coverage_discard()",
      "-D__AFL_COVERAGE_SKIP()=__afl_coverage_skip()",
      "-D__AFL_FUZZ_TESTCASE_BUF=(__afl_fuzz_ptr ? __afl_fuzz_ptr : __afl_fuzz_alt_ptr)",
      "-D__AFL_FUZZ_TESTCASE_LEN=(__afl_fuzz_ptr ? *__afl_fuzz_len : (*__afl_fuzz_len = read(0, __afl_fuzz_alt_ptr, 1048576)) == 0xffffffff ? 0 : *__afl_fuzz_len)",
      "-D__AFL_LOOP(_A)=({ static volatile char *_B __attribute__((used));  _B = (char*)\"##SIG_AFL_PERSISTENT##\"; __attribute__((visibility(\"default\"))) int _L(unsigned int) __asm__(\"__afl_persistent_loop\"); _L(_A); })",
      "-D__AFL_INIT()=do { static volatile char *_A __attribute__((used));  _A = (char*)\"##SIG_AFL_DEFER_FORKSRV##\"; __attribute__((visibility(\"default\"))) void _I(void) __asm__(\"__afl_manual_init\"); _I(); } while (0)",
      "-Wno-unused-command-line-argument",
      "-o",
      "plugins/dlt_plugins.o",
      "plugins/dlt_plugins.c"
    ],
    "directory": "/root/dataset_fuzz/tcpreplay-4.5.1/src/tcpedit",
    "file": "/root/dataset_fuzz/tcpreplay-4.5.1/src/tcpedit/plugins/dlt_plugins.c",
    "output": "/root/dataset_fuzz/tcpreplay-4.5.1/src/tcpedit/plugins/dlt_plugins.o"
  },
  {
    "arguments": [
      "/usr/lib/llvm-13/bin/clang",
      "-Wno-unused-command-line-argument",
      "-fno-experimental-new-pass-manager",
      "-Xclang",
      "-load",
      "-Xclang",
      "/usr/bin/../lib/afl//SanitizerCoveragePCGUARD.so",
      "-DHAVE_CONFIG_H",
      "-I.",
      "-I../../src",
      "-I..",
      "-I./..",
      "-I./../common",
      "-I./../..",
      "-I../../libopts",
      "-I./plugins",
      "-I../../libopts",
      "-D_U_=__attribute__((unused))",
      "-fsanitize=address",
      "-g",
      "-O1",
      "-Wno-variadic-macros",
      "-Wfatal-errors",
      "-I/usr/include",
      "-c",
      "-g",
      "-funroll-loops",
      "-D__AFL_HAVE_MANUAL_CONTROL=1",
      "-D__AFL_COMPILER=1",
      "-DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION=1",
      "-D__AFL_FUZZ_INIT()=int __afl_sharedmem_fuzzing = 1;extern unsigned int *__afl_fuzz_len;extern unsigned char *__afl_fuzz_ptr;unsigned char __afl_fuzz_alt[1048576];unsigned char *__afl_fuzz_alt_ptr = __afl_fuzz_alt;",
      "-D__AFL_COVERAGE()=int __afl_selective_coverage = 1;void __afl_coverage_discard();void __afl_coverage_skip();void __afl_coverage_on();void __afl_coverage_off();",
      "-D__AFL_COVERAGE_START_OFF()=int __afl_selective_coverage_start_off = 1;",
      "-D__AFL_COVERAGE_ON()=__afl_coverage_on()",
      "-D__AFL_COVERAGE_OFF()=__afl_coverage_off()",
      "-D__AFL_COVERAGE_DISCARD()=__afl_coverage_discard()",
      "-D__AFL_COVERAGE_SKIP()=__afl_coverage_skip()",
      "-D__AFL_FUZZ_TESTCASE_BUF=(__afl_fuzz_ptr ? __afl_fuzz_ptr : __afl_fuzz_alt_ptr)",
      "-D__AFL_FUZZ_TESTCASE_LEN=(__afl_fuzz_ptr ? *__afl_fuzz_len : (*__afl_fuzz_len = read(0, __afl_fuzz_alt_ptr, 1048576)) == 0xffffffff ? 0 : *__afl_fuzz_len)",
      "-D__AFL_LOOP(_A)=({ static volatile char *_B __attribute__((used));  _B = (char*)\"##SIG_AFL_PERSISTENT##\"; __attribute__((visibility(\"default\"))) int _L(unsigned int) __asm__(\"__afl_persistent_loop\"); _L(_A); })",
      "-D__AFL_INIT()=do { static volatile char *_A __attribute__((used));  _A = (char*)\"##SIG_AFL_DEFER_FORKSRV##\"; __attribute__((visibility(\"default\"))) void _I(void) __asm__(\"__afl_manual_init\"); _I(); } while (0)",
      "-Wno-unused-command-line-argument",
      "-o",
      "plugins/ethernet.o",
      "plugins/ethernet.c"
    ],
    "directory": "/root/dataset_fuzz/tcpreplay-4.5.1/src/tcpedit",
    "file": "/root/dataset_fuzz/tcpreplay-4.5.1/src/tcpedit/plugins/ethernet.c",
    "output": "/root/dataset_fuzz/tcpreplay-4.5.1/src/tcpedit/plugins/ethernet.o"
  },
  {
    "arguments": [
      "/usr/lib/llvm-13/bin/clang",
      "-Wno-unused-command-line-argument",
      "-fno-experimental-new-pass-manager",
      "-Xclang",
      "-load",
      "-Xclang",
      "/usr/bin/../lib/afl//SanitizerCoveragePCGUARD.so",
      "-DHAVE_CONFIG_H",
      "-I.",
      "-I../../src",
      "-I..",
      "-I./..",
      "-I./../common",
      "-I./../..",
      "-I../../libopts",
      "-I./plugins",
      "-I../../libopts",
      "-D_U_=__attribute__((unused))",
      "-fsanitize=address",
      "-g",
      "-O1",
      "-Wno-variadic-macros",
      "-Wfatal-errors",
      "-I/usr/include",
      "-c",
      "-g",
      "-funroll-loops",
      "-D__AFL_HAVE_MANUAL_CONTROL=1",
      "-D__AFL_COMPILER=1",
      "-DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION=1",
      "-D__AFL_FUZZ_INIT()=int __afl_sharedmem_fuzzing = 1;extern unsigned int *__afl_fuzz_len;extern unsigned char *__afl_fuzz_ptr;unsigned char __afl_fuzz_alt[1048576];unsigned char *__afl_fuzz_alt_ptr = __afl_fuzz_alt;",
      "-D__AFL_COVERAGE()=int __afl_selective_coverage = 1;void __afl_coverage_discard();void __afl_coverage_skip();void __afl_coverage_on();void __afl_coverage_off();",
      "-D__AFL_COVERAGE_START_OFF()=int __afl_selective_coverage_start_off = 1;",
      "-D__AFL_COVERAGE_ON()=__afl_coverage_on()",
      "-D__AFL_COVERAGE_OFF()=__afl_coverage_off()",
      "-D__AFL_COVERAGE_DISCARD()=__afl_coverage_discard()",
      "-D__AFL_COVERAGE_SKIP()=__afl_coverage_skip()",
      "-D__AFL_FUZZ_TESTCASE_BUF=(__afl_fuzz_ptr ? __afl_fuzz_ptr : __afl_fuzz_alt_ptr)",
      "-D__AFL_FUZZ_TESTCASE_LEN=(__afl_fuzz_ptr ? *__afl_fuzz_len : (*__afl_fuzz_len = read(0, __afl_fuzz_alt_ptr, 1048576)) == 0xffffffff ? 0 : *__afl_fuzz_len)",
      "-D__AFL_LOOP(_A)=({ static volatile char *_B __attribute__((used));  _B = (char*)\"##SIG_AFL_PERSISTENT##\"; __attribute__((visibility(\"default\"))) int _L(unsigned int) __asm__(\"__afl_persistent_loop\"); _L(_A); })",
      "-D__AFL_INIT()=do { static volatile char *_A __attribute__((used));  _A = (char*)\"##SIG_AFL_DEFER_FORKSRV##\"; __attribute__((visibility(\"default\"))) void _I(void) __asm__(\"__afl_manual_init\"); _I(); } while (0)",
      "-Wno-unused-command-line-argument",
      "-o",
      "plugins/dlt_utils.o",
      "plugins/dlt_utils.c"
    ],
    "directory": "/root/dataset_fuzz/tcpreplay-4.5.1/src/tcpedit",
    "file": "/root/dataset_fuzz/tcpreplay-4.5.1/src/tcpedit/plugins/dlt_utils.c",
    "output": "/root/dataset_fuzz/tcpreplay-4.5.1/src/tcpedit/plugins/dlt_utils.o"
  },
  {
    "arguments": [
      "/usr/lib/llvm-13/bin/clang",
      "-Wno-unused-command-line-argument",
      "-fno-experimental-new-pass-manager",
      "-Xclang",
      "-load",
      "-Xclang",
      "/usr/bin/../lib/afl//SanitizerCoveragePCGUARD.so",
      "-DHAVE_CONFIG_H",
      "-I.",
      "-I../../src",
      "-I..",
      "-I./..",
      "-I./../common",
      "-I./../..",
      "-I../../libopts",
      "-I./plugins",
      "-I../../libopts",
      "-D_U_=__attribute__((unused))",
      "-fsanitize=address",
      "-g",
      "-O1",
      "-Wno-variadic-macros",
      "-Wfatal-errors",
      "-I/usr/include",
      "-c",
      "-g",
      "-funroll-loops",
      "-D__AFL_HAVE_MANUAL_CONTROL=1",
      "-D__AFL_COMPILER=1",
      "-DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION=1",
      "-D__AFL_FUZZ_INIT()=int __afl_sharedmem_fuzzing = 1;extern unsigned int *__afl_fuzz_len;extern unsigned char *__afl_fuzz_ptr;unsigned char __afl_fuzz_alt[1048576];unsigned char *__afl_fuzz_alt_ptr = __afl_fuzz_alt;",
      "-D__AFL_COVERAGE()=int __afl_selective_coverage = 1;void __afl_coverage_discard();void __afl_coverage_skip();void __afl_coverage_on();void __afl_coverage_off();",
      "-D__AFL_COVERAGE_START_OFF()=int __afl_selective_coverage_start_off = 1;",
      "-D__AFL_COVERAGE_ON()=__afl_coverage_on()",
      "-D__AFL_COVERAGE_OFF()=__afl_coverage_off()",
      "-D__AFL_COVERAGE_DISCARD()=__afl_coverage_discard()",
      "-D__AFL_COVERAGE_SKIP()=__afl_coverage_skip()",
      "-D__AFL_FUZZ_TESTCASE_BUF=(__afl_fuzz_ptr ? __afl_fuzz_ptr : __afl_fuzz_alt_ptr)",
      "-D__AFL_FUZZ_TESTCASE_LEN=(__afl_fuzz_ptr ? *__afl_fuzz_len : (*__afl_fuzz_len = read(0, __afl_fuzz_alt_ptr, 1048576)) == 0xffffffff ? 0 : *__afl_fuzz_len)",
      "-D__AFL_LOOP(_A)=({ static volatile char *_B __attribute__((used));  _B = (char*)\"##SIG_AFL_PERSISTENT##\"; __attribute__((visibility(\"default\"))) int _L(unsigned int) __asm__(\"__afl_persistent_loop\"); _L(_A); })",
      "-D__AFL_INIT()=do { static volatile char *_A __attribute__((used));  _A = (char*)\"##SIG_AFL_DEFER_FORKSRV##\"; __attribute__((visibility(\"default\"))) void _I(void) __asm__(\"__afl_manual_init\"); _I(); } while (0)",
      "-Wno-unused-command-line-argument",
      "-o",
      "plugins/dlt_en10mb/en10mb.o",
      "plugins/dlt_en10mb/en10mb.c"
    ],
    "directory": "/root/dataset_fuzz/tcpreplay-4.5.1/src/tcpedit",
    "file": "/root/dataset_fuzz/tcpreplay-4.5.1/src/tcpedit/plugins/dlt_en10mb/en10mb.c",
    "output": "/root/dataset_fuzz/tcpreplay-4.5.1/src/tcpedit/plugins/dlt_en10mb/en10mb.o"
  },
  {
    "arguments": [
      "/usr/lib/llvm-13/bin/clang",
      "-Wno-unused-command-line-argument",
      "-fno-experimental-new-pass-manager",
      "-Xclang",
      "-load",
      "-Xclang",
      "/usr/bin/../lib/afl//SanitizerCoveragePCGUARD.so",
      "-DHAVE_CONFIG_H",
      "-I.",
      "-I../../src",
      "-I..",
      "-I./..",
      "-I./../common",
      "-I./../..",
      "-I../../libopts",
      "-I./plugins",
      "-I../../libopts",
      "-D_U_=__attribute__((unused))",
      "-fsanitize=address",
      "-g",
      "-O1",
      "-Wno-variadic-macros",
      "-Wfatal-errors",
      "-I/usr/include",
      "-c",
      "-g",
      "-funroll-loops",
      "-D__AFL_HAVE_MANUAL_CONTROL=1",
      "-D__AFL_COMPILER=1",
      "-DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION=1",
      "-D__AFL_FUZZ_INIT()=int __afl_sharedmem_fuzzing = 1;extern unsigned int *__afl_fuzz_len;extern unsigned char *__afl_fuzz_ptr;unsigned char __afl_fuzz_alt[1048576];unsigned char *__afl_fuzz_alt_ptr = __afl_fuzz_alt;",
      "-D__AFL_COVERAGE()=int __afl_selective_coverage = 1;void __afl_coverage_discard();void __afl_coverage_skip();void __afl_coverage_on();void __afl_coverage_off();",
      "-D__AFL_COVERAGE_START_OFF()=int __afl_selective_coverage_start_off = 1;",
      "-D__AFL_COVERAGE_ON()=__afl_coverage_on()",
      "-D__AFL_COVERAGE_OFF()=__afl_coverage_off()",
      "-D__AFL_COVERAGE_DISCARD()=__afl_coverage_discard()",
      "-D__AFL_COVERAGE_SKIP()=__afl_coverage_skip()",
      "-D__AFL_FUZZ_TESTCASE_BUF=(__afl_fuzz_ptr ? __afl_fuzz_ptr : __afl_fuzz_alt_ptr)",
      "-D__AFL_FUZZ_TESTCASE_LEN=(__afl_fuzz_ptr ? *__afl_fuzz_len : (*__afl_fuzz_len = read(0, __afl_fuzz_alt_ptr, 1048576)) == 0xffffffff ? 0 : *__afl_fuzz_len)",
      "-D__AFL_LOOP(_A)=({ static volatile char *_B __attribute__((used));  _B = (char*)\"##SIG_AFL_PERSISTENT##\"; __attribute__((visibility(\"default\"))) int _L(unsigned int) __asm__(\"__afl_persistent_loop\"); _L(_A); })",
      "-D__AFL_INIT()=do { static volatile char *_A __attribute__((used));  _A = (char*)\"##SIG_AFL_DEFER_FORKSRV##\"; __attribute__((visibility(\"default\"))) void _I(void) __asm__(\"__afl_manual_init\"); _I(); } while (0)",
      "-Wno-unused-command-line-argument",
      "-o",
      "plugins/dlt_en10mb/en10mb_api.o",
      "plugins/dlt_en10mb/en10mb_api.c"
    ],
    "directory": "/root/dataset_fuzz/tcpreplay-4.5.1/src/tcpedit",
    "file": "/root/dataset_fuzz/tcpreplay-4.5.1/src/tcpedit/plugins/dlt_en10mb/en10mb_api.c",
    "output": "/root/dataset_fuzz/tcpreplay-4.5.1/src/tcpedit/plugins/dlt_en10mb/en10mb_api.o"
  },
  {
    "arguments": [
      "/usr/lib/llvm-13/bin/clang",
      "-Wno-unused-command-line-argument",
      "-fno-experimental-new-pass-manager",
      "-Xclang",
      "-load",
      "-Xclang",
      "/usr/bin/../lib/afl//SanitizerCoveragePCGUARD.so",
      "-DHAVE_CONFIG_H",
      "-I.",
      "-I../../src",
      "-I..",
      "-I./..",
      "-I./../common",
      "-I./../..",
      "-I../../libopts",
      "-I./plugins",
      "-I../../libopts",
      "-D_U_=__attribute__((unused))",
      "-fsanitize=address",
      "-g",
      "-O1",
      "-Wno-variadic-macros",
      "-Wfatal-errors",
      "-I/usr/include",
      "-c",
      "-g",
      "-funroll-loops",
      "-D__AFL_HAVE_MANUAL_CONTROL=1",
      "-D__AFL_COMPILER=1",
      "-DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION=1",
      "-D__AFL_FUZZ_INIT()=int __afl_sharedmem_fuzzing = 1;extern unsigned int *__afl_fuzz_len;extern unsigned char *__afl_fuzz_ptr;unsigned char __afl_fuzz_alt[1048576];unsigned char *__afl_fuzz_alt_ptr = __afl_fuzz_alt;",
      "-D__AFL_COVERAGE()=int __afl_selective_coverage = 1;void __afl_coverage_discard();void __afl_coverage_skip();void __afl_coverage_on();void __afl_coverage_off();",
      "-D__AFL_COVERAGE_START_OFF()=int __afl_selective_coverage_start_off = 1;",
      "-D__AFL_COVERAGE_ON()=__afl_coverage_on()",
      "-D__AFL_COVERAGE_OFF()=__afl_coverage_off()",
      "-D__AFL_COVERAGE_DISCARD()=__afl_coverage_discard()",
      "-D__AFL_COVERAGE_SKIP()=__afl_coverage_skip()",
      "-D__AFL_FUZZ_TESTCASE_BUF=(__afl_fuzz_ptr ? __afl_fuzz_ptr : __afl_fuzz_alt_ptr)",
      "-D__AFL_FUZZ_TESTCASE_LEN=(__afl_fuzz_ptr ? *__afl_fuzz_len : (*__afl_fuzz_len = read(0, __afl_fuzz_alt_ptr, 1048576)) == 0xffffffff ? 0 : *__afl_fuzz_len)",
      "-D__AFL_LOOP(_A)=({ static volatile char *_B __attribute__((used));  _B = (char*)\"##SIG_AFL_PERSISTENT##\"; __attribute__((visibility(\"default\"))) int _L(unsigned int) __asm__(\"__afl_persistent_loop\"); _L(_A); })",
      "-D__AFL_INIT()=do { static volatile char *_A __attribute__((used));  _A = (char*)\"##SIG_AFL_DEFER_FORKSRV##\"; __attribute__((visibility(\"default\"))) void _I(void) __asm__(\"__afl_manual_init\"); _I(); } while (0)",
      "-Wno-unused-command-line-argument",
      "-o",
      "plugins/dlt_hdlc/hdlc.o",
      "plugins/dlt_hdlc/hdlc.c"
    ],
    "directory": "/root/dataset_fuzz/tcpreplay-4.5.1/src/tcpedit",
    "file": "/root/dataset_fuzz/tcpreplay-4.5.1/src/tcpedit/plugins/dlt_hdlc/hdlc.c",
    "output": "/root/dataset_fuzz/tcpreplay-4.5.1/src/tcpedit/plugins/dlt_hdlc/hdlc.o"
  },
  {
    "arguments": [
      "/usr/lib/llvm-13/bin/clang",
      "-Wno-unused-command-line-argument",
      "-fno-experimental-new-pass-manager",
      "-Xclang",
      "-load",
      "-Xclang",
      "/usr/bin/../lib/afl//SanitizerCoveragePCGUARD.so",
      "-DHAVE_CONFIG_H",
      "-I.",
      "-I../../src",
      "-I..",
      "-I./..",
      "-I./../common",
      "-I./../..",
      "-I../../libopts",
      "-I./plugins",
      "-I../../libopts",
      "-D_U_=__attribute__((unused))",
      "-fsanitize=address",
      "-g",
      "-O1",
      "-Wno-variadic-macros",
      "-Wfatal-errors",
      "-I/usr/include",
      "-c",
      "-g",
      "-funroll-loops",
      "-D__AFL_HAVE_MANUAL_CONTROL=1",
      "-D__AFL_COMPILER=1",
      "-DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION=1",
      "-D__AFL_FUZZ_INIT()=int __afl_sharedmem_fuzzing = 1;extern unsigned int *__afl_fuzz_len;extern unsigned char *__afl_fuzz_ptr;unsigned char __afl_fuzz_alt[1048576];unsigned char *__afl_fuzz_alt_ptr = __afl_fuzz_alt;",
      "-D__AFL_COVERAGE()=int __afl_selective_coverage = 1;void __afl_coverage_discard();void __afl_coverage_skip();void __afl_coverage_on();void __afl_coverage_off();",
      "-D__AFL_COVERAGE_START_OFF()=int __afl_selective_coverage_start_off = 1;",
      "-D__AFL_COVERAGE_ON()=__afl_coverage_on()",
      "-D__AFL_COVERAGE_OFF()=__afl_coverage_off()",
      "-D__AFL_COVERAGE_DISCARD()=__afl_coverage_discard()",
      "-D__AFL_COVERAGE_SKIP()=__afl_coverage_skip()",
      "-D__AFL_FUZZ_TESTCASE_BUF=(__afl_fuzz_ptr ? __afl_fuzz_ptr : __afl_fuzz_alt_ptr)",
      "-D__AFL_FUZZ_TESTCASE_LEN=(__afl_fuzz_ptr ? *__afl_fuzz_len : (*__afl_fuzz_len = read(0, __afl_fuzz_alt_ptr, 1048576)) == 0xffffffff ? 0 : *__afl_fuzz_len)",
      "-D__AFL_LOOP(_A)=({ static volatile char *_B __attribute__((used));  _B = (char*)\"##SIG_AFL_PERSISTENT##\"; __attribute__((visibility(\"default\"))) int _L(unsigned int) __asm__(\"__afl_persistent_loop\"); _L(_A); })",
      "-D__AFL_INIT()=do { static volatile char *_A __attribute__((used));  _A = (char*)\"##SIG_AFL_DEFER_FORKSRV##\"; __attribute__((visibility(\"default\"))) void _I(void) __asm__(\"__afl_manual_init\"); _I(); } while (0)",
      "-Wno-unused-command-line-argument",
      "-o",
      "plugins/dlt_hdlc/hdlc_api.o",
      "plugins/dlt_hdlc/hdlc_api.c"
    ],
    "directory": "/root/dataset_fuzz/tcpreplay-4.5.1/src/tcpedit",
    "file": "/root/dataset_fuzz/tcpreplay-4.5.1/src/tcpedit/plugins/dlt_hdlc/hdlc_api.c",
    "output": "/root/dataset_fuzz/tcpreplay-4.5.1/src/tcpedit/plugins/dlt_hdlc/hdlc_api.o"
  },
  {
    "arguments": [
      "/usr/lib/llvm-13/bin/clang",
      "-Wno-unused-command-line-argument",
      "-fno-experimental-new-pass-manager",
      "-Xclang",
      "-load",
      "-Xclang",
      "/usr/bin/../lib/afl//SanitizerCoveragePCGUARD.so",
      "-DHAVE_CONFIG_H",
      "-I.",
      "-I../../src",
      "-I..",
      "-I./..",
      "-I./../common",
      "-I./../..",
      "-I../../libopts",
      "-I./plugins",
      "-I../../libopts",
      "-D_U_=__attribute__((unused))",
      "-fsanitize=address",
      "-g",
      "-O1",
      "-Wno-variadic-macros",
      "-Wfatal-errors",
      "-I/usr/include",
      "-c",
      "-g",
      "-funroll-loops",
      "-D__AFL_HAVE_MANUAL_CONTROL=1",
      "-D__AFL_COMPILER=1",
      "-DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION=1",
      "-D__AFL_FUZZ_INIT()=int __afl_sharedmem_fuzzing = 1;extern unsigned int *__afl_fuzz_len;extern unsigned char *__afl_fuzz_ptr;unsigned char __afl_fuzz_alt[1048576];unsigned char *__afl_fuzz_alt_ptr = __afl_fuzz_alt;",
      "-D__AFL_COVERAGE()=int __afl_selective_coverage = 1;void __afl_coverage_discard();void __afl_coverage_skip();void __afl_coverage_on();void __afl_coverage_off();",
      "-D__AFL_COVERAGE_START_OFF()=int __afl_selective_coverage_start_off = 1;",
      "-D__AFL_COVERAGE_ON()=__afl_coverage_on()",
      "-D__AFL_COVERAGE_OFF()=__afl_coverage_off()",
      "-D__AFL_COVERAGE_DISCARD()=__afl_coverage_discard()",
      "-D__AFL_COVERAGE_SKIP()=__afl_coverage_skip()",
      "-D__AFL_FUZZ_TESTCASE_BUF=(__afl_fuzz_ptr ? __afl_fuzz_ptr : __afl_fuzz_alt_ptr)",
      "-D__AFL_FUZZ_TESTCASE_LEN=(__afl_fuzz_ptr ? *__afl_fuzz_len : (*__afl_fuzz_len = read(0, __afl_fuzz_alt_ptr, 1048576)) == 0xffffffff ? 0 : *__afl_fuzz_len)",
      "-D__AFL_LOOP(_A)=({ static volatile char *_B __attribute__((used));  _B = (char*)\"##SIG_AFL_PERSISTENT##\"; __attribute__((visibility(\"default\"))) int _L(unsigned int) __asm__(\"__afl_persistent_loop\"); _L(_A); })",
      "-D__AFL_INIT()=do { static volatile char *_A __attribute__((used));  _A = (char*)\"##SIG_AFL_DEFER_FORKSRV##\"; __attribute__((visibility(\"default\"))) void _I(void) __asm__(\"__afl_manual_init\"); _I(); } while (0)",
      "-Wno-unused-command-line-argument",
      "-o",
      "plugins/dlt_user/user.o",
      "plugins/dlt_user/user.c"
    ],
    "directory": "/root/dataset_fuzz/tcpreplay-4.5.1/src/tcpedit",
    "file": "/root/dataset_fuzz/tcpreplay-4.5.1/src/tcpedit/plugins/dlt_user/user.c",
    "output": "/root/dataset_fuzz/tcpreplay-4.5.1/src/tcpedit/plugins/dlt_user/user.o"
  },
  {
    "arguments": [
      "/usr/lib/llvm-13/bin/clang",
      "-Wno-unused-command-line-argument",
      "-fno-experimental-new-pass-manager",
      "-Xclang",
      "-load",
      "-Xclang",
      "/usr/bin/../lib/afl//SanitizerCoveragePCGUARD.so",
      "-DHAVE_CONFIG_H",
      "-I.",
      "-I../../src",
      "-I..",
      "-I./..",
      "-I./../common",
      "-I./../..",
      "-I../../libopts",
      "-I./plugins",
      "-I../../libopts",
      "-D_U_=__attribute__((unused))",
      "-fsanitize=address",
      "-g",
      "-O1",
      "-Wno-variadic-macros",
      "-Wfatal-errors",
      "-I/usr/include",
      "-c",
      "-g",
      "-funroll-loops",
      "-D__AFL_HAVE_MANUAL_CONTROL=1",
      "-D__AFL_COMPILER=1",
      "-DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION=1",
      "-D__AFL_FUZZ_INIT()=int __afl_sharedmem_fuzzing = 1;extern unsigned int *__afl_fuzz_len;extern unsigned char *__afl_fuzz_ptr;unsigned char __afl_fuzz_alt[1048576];unsigned char *__afl_fuzz_alt_ptr = __afl_fuzz_alt;",
      "-D__AFL_COVERAGE()=int __afl_selective_coverage = 1;void __afl_coverage_discard();void __afl_coverage_skip();void __afl_coverage_on();void __afl_coverage_off();",
      "-D__AFL_COVERAGE_START_OFF()=int __afl_selective_coverage_start_off = 1;",
      "-D__AFL_COVERAGE_ON()=__afl_coverage_on()",
      "-D__AFL_COVERAGE_OFF()=__afl_coverage_off()",
      "-D__AFL_COVERAGE_DISCARD()=__afl_coverage_discard()",
      "-D__AFL_COVERAGE_SKIP()=__afl_coverage_skip()",
      "-D__AFL_FUZZ_TESTCASE_BUF=(__afl_fuzz_ptr ? __afl_fuzz_ptr : __afl_fuzz_alt_ptr)",
      "-D__AFL_FUZZ_TESTCASE_LEN=(__afl_fuzz_ptr ? *__afl_fuzz_len : (*__afl_fuzz_len = read(0, __afl_fuzz_alt_ptr, 1048576)) == 0xffffffff ? 0 : *__afl_fuzz_len)",
      "-D__AFL_LOOP(_A)=({ static volatile char *_B __attribute__((used));  _B = (char*)\"##SIG_AFL_PERSISTENT##\"; __attribute__((visibility(\"default\"))) int _L(unsigned int) __asm__(\"__afl_persistent_loop\"); _L(_A); })",
      "-D__AFL_INIT()=do { static volatile char *_A __attribute__((used));  _A = (char*)\"##SIG_AFL_DEFER_FORKSRV##\"; __attribute__((visibility(\"default\"))) void _I(void) __asm__(\"__afl_manual_init\"); _I(); } while (0)",
      "-Wno-unused-command-line-argument",
      "-o",
      "plugins/dlt_user/user_api.o",
      "plugins/dlt_user/user_api.c"
    ],
    "directory": "/root/dataset_fuzz/tcpreplay-4.5.1/src/tcpedit",
    "file": "/root/dataset_fuzz/tcpreplay-4.5.1/src/tcpedit/plugins/dlt_user/user_api.c",
    "output": "/root/dataset_fuzz/tcpreplay-4.5.1/src/tcpedit/plugins/dlt_user/user_api.o"
  },
  {
    "arguments": [
      "/usr/lib/llvm-13/bin/clang",
      "-Wno-unused-command-line-argument",
      "-fno-experimental-new-pass-manager",
      "-Xclang",
      "-load",
      "-Xclang",
      "/usr/bin/../lib/afl//SanitizerCoveragePCGUARD.so",
      "-DHAVE_CONFIG_H",
      "-I.",
      "-I../../src",
      "-I..",
      "-I./..",
      "-I./../common",
      "-I./../..",
      "-I../../libopts",
      "-I./plugins",
      "-I../../libopts",
      "-D_U_=__attribute__((unused))",
      "-fsanitize=address",
      "-g",
      "-O1",
      "-Wno-variadic-macros",
      "-Wfatal-errors",
      "-I/usr/include",
      "-c",
      "-g",
      "-funroll-loops",
      "-D__AFL_HAVE_MANUAL_CONTROL=1",
      "-D__AFL_COMPILER=1",
      "-DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION=1",
      "-D__AFL_FUZZ_INIT()=int __afl_sharedmem_fuzzing = 1;extern unsigned int *__afl_fuzz_len;extern unsigned char *__afl_fuzz_ptr;unsigned char __afl_fuzz_alt[1048576];unsigned char *__afl_fuzz_alt_ptr = __afl_fuzz_alt;",
      "-D__AFL_COVERAGE()=int __afl_selective_coverage = 1;void __afl_coverage_discard();void __afl_coverage_skip();void __afl_coverage_on();void __afl_coverage_off();",
      "-D__AFL_COVERAGE_START_OFF()=int __afl_selective_coverage_start_off = 1;",
      "-D__AFL_COVERAGE_ON()=__afl_coverage_on()",
      "-D__AFL_COVERAGE_OFF()=__afl_coverage_off()",
      "-D__AFL_COVERAGE_DISCARD()=__afl_coverage_discard()",
      "-D__AFL_COVERAGE_SKIP()=__afl_coverage_skip()",
      "-D__AFL_FUZZ_TESTCASE_BUF=(__afl_fuzz_ptr ? __afl_fuzz_ptr : __afl_fuzz_alt_ptr)",
      "-D__AFL_FUZZ_TESTCASE_LEN=(__afl_fuzz_ptr ? *__afl_fuzz_len : (*__afl_fuzz_len = read(0, __afl_fuzz_alt_ptr, 1048576)) == 0xffffffff ? 0 : *__afl_fuzz_len)",
      "-D__AFL_LOOP(_A)=({ static volatile char *_B __attribute__((used));  _B = (char*)\"##SIG_AFL_PERSISTENT##\"; __attribute__((visibility(\"default\"))) int _L(unsigned int) __asm__(\"__afl_persistent_loop\"); _L(_A); })",
      "-D__AFL_INIT()=do { static volatile char *_A __attribute__((used));  _A = (char*)\"##SIG_AFL_DEFER_FORKSRV##\"; __attribute__((visibility(\"default\"))) void _I(void) __asm__(\"__afl_manual_init\"); _I(); } while (0)",
      "-Wno-unused-command-line-argument",
      "-o",
      "plugins/dlt_raw/raw.o",
      "plugins/dlt_raw/raw.c"
    ],
    "directory": "/root/dataset_fuzz/tcpreplay-4.5.1/src/tcpedit",
    "file": "/root/dataset_fuzz/tcpreplay-4.5.1/src/tcpedit/plugins/dlt_raw/raw.c",
    "output": "/root/dataset_fuzz/tcpreplay-4.5.1/src/tcpedit/plugins/dlt_raw/raw.o"
  },
  {
    "arguments": [
      "/usr/lib/llvm-13/bin/clang",
      "-Wno-unused-command-line-argument",
      "-fno-experimental-new-pass-manager",
      "-Xclang",
      "-load",
      "-Xclang",
      "/usr/bin/../lib/afl//SanitizerCoveragePCGUARD.so",
      "-DHAVE_CONFIG_H",
      "-I.",
      "-I../../src",
      "-I..",
      "-I./..",
      "-I./../common",
      "-I./../..",
      "-I../../libopts",
      "-I./plugins",
      "-I../../libopts",
      "-D_U_=__attribute__((unused))",
      "-fsanitize=address",
      "-g",
      "-O1",
      "-Wno-variadic-macros",
      "-Wfatal-errors",
      "-I/usr/include",
      "-c",
      "-g",
      "-funroll-loops",
      "-D__AFL_HAVE_MANUAL_CONTROL=1",
      "-D__AFL_COMPILER=1",
      "-DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION=1",
      "-D__AFL_FUZZ_INIT()=int __afl_sharedmem_fuzzing = 1;extern unsigned int *__afl_fuzz_len;extern unsigned char *__afl_fuzz_ptr;unsigned char __afl_fuzz_alt[1048576];unsigned char *__afl_fuzz_alt_ptr = __afl_fuzz_alt;",
      "-D__AFL_COVERAGE()=int __afl_selective_coverage = 1;void __afl_coverage_discard();void __afl_coverage_skip();void __afl_coverage_on();void __afl_coverage_off();",
      "-D__AFL_COVERAGE_START_OFF()=int __afl_selective_coverage_start_off = 1;",
      "-D__AFL_COVERAGE_ON()=__afl_coverage_on()",
      "-D__AFL_COVERAGE_OFF()=__afl_coverage_off()",
      "-D__AFL_COVERAGE_DISCARD()=__afl_coverage_discard()",
      "-D__AFL_COVERAGE_SKIP()=__afl_coverage_skip()",
      "-D__AFL_FUZZ_TESTCASE_BUF=(__afl_fuzz_ptr ? __afl_fuzz_ptr : __afl_fuzz_alt_ptr)",
      "-D__AFL_FUZZ_TESTCASE_LEN=(__afl_fuzz_ptr ? *__afl_fuzz_len : (*__afl_fuzz_len = read(0, __afl_fuzz_alt_ptr, 1048576)) == 0xffffffff ? 0 : *__afl_fuzz_len)",
      "-D__AFL_LOOP(_A)=({ static volatile char *_B __attribute__((used));  _B = (char*)\"##SIG_AFL_PERSISTENT##\"; __attribute__((visibility(\"default\"))) int _L(unsigned int) __asm__(\"__afl_persistent_loop\"); _L(_A); })",
      "-D__AFL_INIT()=do { static volatile char *_A __attribute__((used));  _A = (char*)\"##SIG_AFL_DEFER_FORKSRV##\"; __attribute__((visibility(\"default\"))) void _I(void) __asm__(\"__afl_manual_init\"); _I(); } while (0)",
      "-Wno-unused-command-line-argument",
      "-o",
      "plugins/dlt_null/null.o",
      "plugins/dlt_null/null.c"
    ],
    "directory": "/root/dataset_fuzz/tcpreplay-4.5.1/src/tcpedit",
    "file": "/root/dataset_fuzz/tcpreplay-4.5.1/src/tcpedit/plugins/dlt_null/null.c",
    "output": "/root/dataset_fuzz/tcpreplay-4.5.1/src/tcpedit/plugins/dlt_null/null.o"
  },
  {
    "arguments": [
      "/usr/lib/llvm-13/bin/clang",
      "-Wno-unused-command-line-argument",
      "-fno-experimental-new-pass-manager",
      "-Xclang",
      "-load",
      "-Xclang",
      "/usr/bin/../lib/afl//SanitizerCoveragePCGUARD.so",
      "-DHAVE_CONFIG_H",
      "-I.",
      "-I../../src",
      "-I..",
      "-I./..",
      "-I./../common",
      "-I./../..",
      "-I../../libopts",
      "-I./plugins",
      "-I../../libopts",
      "-D_U_=__attribute__((unused))",
      "-fsanitize=address",
      "-g",
      "-O1",
      "-Wno-variadic-macros",
      "-Wfatal-errors",
      "-I/usr/include",
      "-c",
      "-g",
      "-funroll-loops",
      "-D__AFL_HAVE_MANUAL_CONTROL=1",
      "-D__AFL_COMPILER=1",
      "-DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION=1",
      "-D__AFL_FUZZ_INIT()=int __afl_sharedmem_fuzzing = 1;extern unsigned int *__afl_fuzz_len;extern unsigned char *__afl_fuzz_ptr;unsigned char __afl_fuzz_alt[1048576];unsigned char *__afl_fuzz_alt_ptr = __afl_fuzz_alt;",
      "-D__AFL_COVERAGE()=int __afl_selective_coverage = 1;void __afl_coverage_discard();void __afl_coverage_skip();void __afl_coverage_on();void __afl_coverage_off();",
      "-D__AFL_COVERAGE_START_OFF()=int __afl_selective_coverage_start_off = 1;",
      "-D__AFL_COVERAGE_ON()=__afl_coverage_on()",
      "-D__AFL_COVERAGE_OFF()=__afl_coverage_off()",
      "-D__AFL_COVERAGE_DISCARD()=__afl_coverage_discard()",
      "-D__AFL_COVERAGE_SKIP()=__afl_coverage_skip()",
      "-D__AFL_FUZZ_TESTCASE_BUF=(__afl_fuzz_ptr ? __afl_fuzz_ptr : __afl_fuzz_alt_ptr)",
      "-D__AFL_FUZZ_TESTCASE_LEN=(__afl_fuzz_ptr ? *__afl_fuzz_len : (*__afl_fuzz_len = read(0, __afl_fuzz_alt_ptr, 1048576)) == 0xffffffff ? 0 : *__afl_fuzz_len)",
      "-D__AFL_LOOP(_A)=({ static volatile char *_B __attribute__((used));  _B = (char*)\"##SIG_AFL_PERSISTENT##\"; __attribute__((visibility(\"default\"))) int _L(unsigned int) __asm__(\"__afl_persistent_loop\"); _L(_A); })",
      "-D__AFL_INIT()=do { static volatile char *_A __attribute__((used));  _A = (char*)\"##SIG_AFL_DEFER_FORKSRV##\"; __attribute__((visibility(\"default\"))) void _I(void) __asm__(\"__afl_manual_init\"); _I(); } while (0)",
      "-Wno-unused-command-line-argument",
      "-o",
      "plugins/dlt_loop/loop.o",
      "plugins/dlt_loop/loop.c"
    ],
    "directory": "/root/dataset_fuzz/tcpreplay-4.5.1/src/tcpedit",
    "file": "/root/dataset_fuzz/tcpreplay-4.5.1/src/tcpedit/plugins/dlt_loop/loop.c",
    "output": "/root/dataset_fuzz/tcpreplay-4.5.1/src/tcpedit/plugins/dlt_loop/loop.o"
  },
  {
    "arguments": [
      "/usr/lib/llvm-13/bin/clang",
      "-Wno-unused-command-line-argument",
      "-fno-experimental-new-pass-manager",
      "-Xclang",
      "-load",
      "-Xclang",
      "/usr/bin/../lib/afl//SanitizerCoveragePCGUARD.so",
      "-DHAVE_CONFIG_H",
      "-I.",
      "-I../../src",
      "-I..",
      "-I./..",
      "-I./../common",
      "-I./../..",
      "-I../../libopts",
      "-I./plugins",
      "-I../../libopts",
      "-D_U_=__attribute__((unused))",
      "-fsanitize=address",
      "-g",
      "-O1",
      "-Wno-variadic-macros",
      "-Wfatal-errors",
      "-I/usr/include",
      "-c",
      "-g",
      "-funroll-loops",
      "-D__AFL_HAVE_MANUAL_CONTROL=1",
      "-D__AFL_COMPILER=1",
      "-DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION=1",
      "-D__AFL_FUZZ_INIT()=int __afl_sharedmem_fuzzing = 1;extern unsigned int *__afl_fuzz_len;extern unsigned char *__afl_fuzz_ptr;unsigned char __afl_fuzz_alt[1048576];unsigned char *__afl_fuzz_alt_ptr = __afl_fuzz_alt;",
      "-D__AFL_COVERAGE()=int __afl_selective_coverage = 1;void __afl_coverage_discard();void __afl_coverage_skip();void __afl_coverage_on();void __afl_coverage_off();",
      "-D__AFL_COVERAGE_START_OFF()=int __afl_selective_coverage_start_off = 1;",
      "-D__AFL_COVERAGE_ON()=__afl_coverage_on()",
      "-D__AFL_COVERAGE_OFF()=__afl_coverage_off()",
      "-D__AFL_COVERAGE_DISCARD()=__afl_coverage_discard()",
      "-D__AFL_COVERAGE_SKIP()=__afl_coverage_skip()",
      "-D__AFL_FUZZ_TESTCASE_BUF=(__afl_fuzz_ptr ? __afl_fuzz_ptr : __afl_fuzz_alt_ptr)",
      "-D__AFL_FUZZ_TESTCASE_LEN=(__afl_fuzz_ptr ? *__afl_fuzz_len : (*__afl_fuzz_len = read(0, __afl_fuzz_alt_ptr, 1048576)) == 0xffffffff ? 0 : *__afl_fuzz_len)",
      "-D__AFL_LOOP(_A)=({ static volatile char *_B __attribute__((used));  _B = (char*)\"##SIG_AFL_PERSISTENT##\"; __attribute__((visibility(\"default\"))) int _L(unsigned int) __asm__(\"__afl_persistent_loop\"); _L(_A); })",
      "-D__AFL_INIT()=do { static volatile char *_A __attribute__((used));  _A = (char*)\"##SIG_AFL_DEFER_FORKSRV##\"; __attribute__((visibility(\"default\"))) void _I(void) __asm__(\"__afl_manual_init\"); _I(); } while (0)",
      "-Wno-unused-command-line-argument",
      "-o",
      "plugins/dlt_linuxsll/linuxsll.o",
      "plugins/dlt_linuxsll/linuxsll.c"
    ],
    "directory": "/root/dataset_fuzz/tcpreplay-4.5.1/src/tcpedit",
    "file": "/root/dataset_fuzz/tcpreplay-4.5.1/src/tcpedit/plugins/dlt_linuxsll/linuxsll.c",
    "output": "/root/dataset_fuzz/tcpreplay-4.5.1/src/tcpedit/plugins/dlt_linuxsll/linuxsll.o"
  },
  {
    "arguments": [
      "/usr/lib/llvm-13/bin/clang",
      "-Wno-unused-command-line-argument",
      "-fno-experimental-new-pass-manager",
      "-Xclang",
      "-load",
      "-Xclang",
      "/usr/bin/../lib/afl//SanitizerCoveragePCGUARD.so",
      "-DHAVE_CONFIG_H",
      "-I.",
      "-I../../src",
      "-I..",
      "-I./..",
      "-I./../common",
      "-I./../..",
      "-I../../libopts",
      "-I./plugins",
      "-I../../libopts",
      "-D_U_=__attribute__((unused))",
      "-fsanitize=address",
      "-g",
      "-O1",
      "-Wno-variadic-macros",
      "-Wfatal-errors",
      "-I/usr/include",
      "-c",
      "-g",
      "-funroll-loops",
      "-D__AFL_HAVE_MANUAL_CONTROL=1",
      "-D__AFL_COMPILER=1",
      "-DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION=1",
      "-D__AFL_FUZZ_INIT()=int __afl_sharedmem_fuzzing = 1;extern unsigned int *__afl_fuzz_len;extern unsigned char *__afl_fuzz_ptr;unsigned char __afl_fuzz_alt[1048576];unsigned char *__afl_fuzz_alt_ptr = __afl_fuzz_alt;",
      "-D__AFL_COVERAGE()=int __afl_selective_coverage = 1;void __afl_coverage_discard();void __afl_coverage_skip();void __afl_coverage_on();void __afl_coverage_off();",
      "-D__AFL_COVERAGE_START_OFF()=int __afl_selective_coverage_start_off = 1;",
      "-D__AFL_COVERAGE_ON()=__afl_coverage_on()",
      "-D__AFL_COVERAGE_OFF()=__afl_coverage_off()",
      "-D__AFL_COVERAGE_DISCARD()=__afl_coverage_discard()",
      "-D__AFL_COVERAGE_SKIP()=__afl_coverage_skip()",
      "-D__AFL_FUZZ_TESTCASE_BUF=(__afl_fuzz_ptr ? __afl_fuzz_ptr : __afl_fuzz_alt_ptr)",
      "-D__AFL_FUZZ_TESTCASE_LEN=(__afl_fuzz_ptr ? *__afl_fuzz_len : (*__afl_fuzz_len = read(0, __afl_fuzz_alt_ptr, 1048576)) == 0xffffffff ? 0 : *__afl_fuzz_len)",
      "-D__AFL_LOOP(_A)=({ static volatile char *_B __attribute__((used));  _B = (char*)\"##SIG_AFL_PERSISTENT##\"; __attribute__((visibility(\"default\"))) int _L(unsigned int) __asm__(\"__afl_persistent_loop\"); _L(_A); })",
      "-D__AFL_INIT()=do { static volatile char *_A __attribute__((used));  _A = (char*)\"##SIG_AFL_DEFER_FORKSRV##\"; __attribute__((visibility(\"default\"))) void _I(void) __asm__(\"__afl_manual_init\"); _I(); } while (0)",
      "-Wno-unused-command-line-argument",
      "-o",
      "plugins/dlt_linuxsll2/linuxsll2.o",
      "plugins/dlt_linuxsll2/linuxsll2.c"
    ],
    "directory": "/root/dataset_fuzz/tcpreplay-4.5.1/src/tcpedit",
    "file": "/root/dataset_fuzz/tcpreplay-4.5.1/src/tcpedit/plugins/dlt_linuxsll2/linuxsll2.c",
    "output": "/root/dataset_fuzz/tcpreplay-4.5.1/src/tcpedit/plugins/dlt_linuxsll2/linuxsll2.o"
  },
  {
    "arguments": [
      "/usr/lib/llvm-13/bin/clang",
      "-Wno-unused-command-line-argument",
      "-fno-experimental-new-pass-manager",
      "-Xclang",
      "-load",
      "-Xclang",
      "/usr/bin/../lib/afl//SanitizerCoveragePCGUARD.so",
      "-DHAVE_CONFIG_H",
      "-I.",
      "-I../../src",
      "-I..",
      "-I./..",
      "-I./../common",
      "-I./../..",
      "-I../../libopts",
      "-I./plugins",
      "-I../../libopts",
      "-D_U_=__attribute__((unused))",
      "-fsanitize=address",
      "-g",
      "-O1",
      "-Wno-variadic-macros",
      "-Wfatal-errors",
      "-I/usr/include",
      "-c",
      "-g",
      "-funroll-loops",
      "-D__AFL_HAVE_MANUAL_CONTROL=1",
      "-D__AFL_COMPILER=1",
      "-DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION=1",
      "-D__AFL_FUZZ_INIT()=int __afl_sharedmem_fuzzing = 1;extern unsigned int *__afl_fuzz_len;extern unsigned char *__afl_fuzz_ptr;unsigned char __afl_fuzz_alt[1048576];unsigned char *__afl_fuzz_alt_ptr = __afl_fuzz_alt;",
      "-D__AFL_COVERAGE()=int __afl_selective_coverage = 1;void __afl_coverage_discard();void __afl_coverage_skip();void __afl_coverage_on();void __afl_coverage_off();",
      "-D__AFL_COVERAGE_START_OFF()=int __afl_selective_coverage_start_off = 1;",
      "-D__AFL_COVERAGE_ON()=__afl_coverage_on()",
      "-D__AFL_COVERAGE_OFF()=__afl_coverage_off()",
      "-D__AFL_COVERAGE_DISCARD()=__afl_coverage_discard()",
      "-D__AFL_COVERAGE_SKIP()=__afl_coverage_skip()",
      "-D__AFL_FUZZ_TESTCASE_BUF=(__afl_fuzz_ptr ? __afl_fuzz_ptr : __afl_fuzz_alt_ptr)",
      "-D__AFL_FUZZ_TESTCASE_LEN=(__afl_fuzz_ptr ? *__afl_fuzz_len : (*__afl_fuzz_len = read(0, __afl_fuzz_alt_ptr, 1048576)) == 0xffffffff ? 0 : *__afl_fuzz_len)",
      "-D__AFL_LOOP(_A)=({ static volatile char *_B __attribute__((used));  _B = (char*)\"##SIG_AFL_PERSISTENT##\"; __attribute__((visibility(\"default\"))) int _L(unsigned int) __asm__(\"__afl_persistent_loop\"); _L(_A); })",
      "-D__AFL_INIT()=do { static volatile char *_A __attribute__((used));  _A = (char*)\"##SIG_AFL_DEFER_FORKSRV##\"; __attribute__((visibility(\"default\"))) void _I(void) __asm__(\"__afl_manual_init\"); _I(); } while (0)",
      "-Wno-unused-command-line-argument",
      "-o",
      "plugins/dlt_ieee80211/ieee80211.o",
      "plugins/dlt_ieee80211/ieee80211.c"
    ],
    "directory": "/root/dataset_fuzz/tcpreplay-4.5.1/src/tcpedit",
    "file": "/root/dataset_fuzz/tcpreplay-4.5.1/src/tcpedit/plugins/dlt_ieee80211/ieee80211.c",
    "output": "/root/dataset_fuzz/tcpreplay-4.5.1/src/tcpedit/plugins/dlt_ieee80211/ieee80211.o"
  },
  {
    "arguments": [
      "/usr/lib/llvm-13/bin/clang",
      "-Wno-unused-command-line-argument",
      "-fno-experimental-new-pass-manager",
      "-Xclang",
      "-load",
      "-Xclang",
      "/usr/bin/../lib/afl//SanitizerCoveragePCGUARD.so",
      "-DHAVE_CONFIG_H",
      "-I.",
      "-I../../src",
      "-I..",
      "-I./..",
      "-I./../common",
      "-I./../..",
      "-I../../libopts",
      "-I./plugins",
      "-I../../libopts",
      "-D_U_=__attribute__((unused))",
      "-fsanitize=address",
      "-g",
      "-O1",
      "-Wno-variadic-macros",
      "-Wfatal-errors",
      "-I/usr/include",
      "-c",
      "-g",
      "-funroll-loops",
      "-D__AFL_HAVE_MANUAL_CONTROL=1",
      "-D__AFL_COMPILER=1",
      "-DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION=1",
      "-D__AFL_FUZZ_INIT()=int __afl_sharedmem_fuzzing = 1;extern unsigned int *__afl_fuzz_len;extern unsigned char *__afl_fuzz_ptr;unsigned char __afl_fuzz_alt[1048576];unsigned char *__afl_fuzz_alt_ptr = __afl_fuzz_alt;",
      "-D__AFL_COVERAGE()=int __afl_selective_coverage = 1;void __afl_coverage_discard();void __afl_coverage_skip();void __afl_coverage_on();void __afl_coverage_off();",
      "-D__AFL_COVERAGE_START_OFF()=int __afl_selective_coverage_start_off = 1;",
      "-D__AFL_COVERAGE_ON()=__afl_coverage_on()",
      "-D__AFL_COVERAGE_OFF()=__afl_coverage_off()",
      "-D__AFL_COVERAGE_DISCARD()=__afl_coverage_discard()",
      "-D__AFL_COVERAGE_SKIP()=__afl_coverage_skip()",
      "-D__AFL_FUZZ_TESTCASE_BUF=(__afl_fuzz_ptr ? __afl_fuzz_ptr : __afl_fuzz_alt_ptr)",
      "-D__AFL_FUZZ_TESTCASE_LEN=(__afl_fuzz_ptr ? *__afl_fuzz_len : (*__afl_fuzz_len = read(0, __afl_fuzz_alt_ptr, 1048576)) == 0xffffffff ? 0 : *__afl_fuzz_len)",
      "-D__AFL_LOOP(_A)=({ static volatile char *_B __attribute__((used));  _B = (char*)\"##SIG_AFL_PERSISTENT##\"; __attribute__((visibility(\"default\"))) int _L(unsigned int) __asm__(\"__afl_persistent_loop\"); _L(_A); })",
      "-D__AFL_INIT()=do { static volatile char *_A __attribute__((used));  _A = (char*)\"##SIG_AFL_DEFER_FORKSRV##\"; __attribute__((visibility(\"default\"))) void _I(void) __asm__(\"__afl_manual_init\"); _I(); } while (0)",
      "-Wno-unused-command-line-argument",
      "-o",
      "plugins/dlt_ieee80211/ieee80211_hdr.o",
      "plugins/dlt_ieee80211/ieee80211_hdr.c"
    ],
    "directory": "/root/dataset_fuzz/tcpreplay-4.5.1/src/tcpedit",
    "file": "/root/dataset_fuzz/tcpreplay-4.5.1/src/tcpedit/plugins/dlt_ieee80211/ieee80211_hdr.c",
    "output": "/root/dataset_fuzz/tcpreplay-4.5.1/src/tcpedit/plugins/dlt_ieee80211/ieee80211_hdr.o"
  },
  {
    "arguments": [
      "/usr/lib/llvm-13/bin/clang",
      "-Wno-unused-command-line-argument",
      "-fno-experimental-new-pass-manager",
      "-Xclang",
      "-load",
      "-Xclang",
      "/usr/bin/../lib/afl//SanitizerCoveragePCGUARD.so",
      "-DHAVE_CONFIG_H",
      "-I.",
      "-I../../src",
      "-I..",
      "-I./..",
      "-I./../common",
      "-I./../..",
      "-I../../libopts",
      "-I./plugins",
      "-I../../libopts",
      "-D_U_=__attribute__((unused))",
      "-fsanitize=address",
      "-g",
      "-O1",
      "-Wno-variadic-macros",
      "-Wfatal-errors",
      "-I/usr/include",
      "-c",
      "-g",
      "-funroll-loops",
      "-D__AFL_HAVE_MANUAL_CONTROL=1",
      "-D__AFL_COMPILER=1",
      "-DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION=1",
      "-D__AFL_FUZZ_INIT()=int __afl_sharedmem_fuzzing = 1;extern unsigned int *__afl_fuzz_len;extern unsigned char *__afl_fuzz_ptr;unsigned char __afl_fuzz_alt[1048576];unsigned char *__afl_fuzz_alt_ptr = __afl_fuzz_alt;",
      "-D__AFL_COVERAGE()=int __afl_selective_coverage = 1;void __afl_coverage_discard();void __afl_coverage_skip();void __afl_coverage_on();void __afl_coverage_off();",
      "-D__AFL_COVERAGE_START_OFF()=int __afl_selective_coverage_start_off = 1;",
      "-D__AFL_COVERAGE_ON()=__afl_coverage_on()",
      "-D__AFL_COVERAGE_OFF()=__afl_coverage_off()",
      "-D__AFL_COVERAGE_DISCARD()=__afl_coverage_discard()",
      "-D__AFL_COVERAGE_SKIP()=__afl_coverage_skip()",
      "-D__AFL_FUZZ_TESTCASE_BUF=(__afl_fuzz_ptr ? __afl_fuzz_ptr : __afl_fuzz_alt_ptr)",
      "-D__AFL_FUZZ_TESTCASE_LEN=(__afl_fuzz_ptr ? *__afl_fuzz_len : (*__afl_fuzz_len = read(0, __afl_fuzz_alt_ptr, 1048576)) == 0xffffffff ? 0 : *__afl_fuzz_len)",
      "-D__AFL_LOOP(_A)=({ static volatile char *_B __attribute__((used));  _B = (char*)\"##SIG_AFL_PERSISTENT##\"; __attribute__((visibility(\"default\"))) int _L(unsigned int) __asm__(\"__afl_persistent_loop\"); _L(_A); })",
      "-D__AFL_INIT()=do { static volatile char *_A __attribute__((used));  _A = (char*)\"##SIG_AFL_DEFER_FORKSRV##\"; __attribute__((visibility(\"default\"))) void _I(void) __asm__(\"__afl_manual_init\"); _I(); } while (0)",
      "-Wno-unused-command-line-argument",
      "-o",
      "plugins/dlt_radiotap/radiotap.o",
      "plugins/dlt_radiotap/radiotap.c"
    ],
    "directory": "/root/dataset_fuzz/tcpreplay-4.5.1/src/tcpedit",
    "file": "/root/dataset_fuzz/tcpreplay-4.5.1/src/tcpedit/plugins/dlt_radiotap/radiotap.c",
    "output": "/root/dataset_fuzz/tcpreplay-4.5.1/src/tcpedit/plugins/dlt_radiotap/radiotap.o"
  },
  {
    "arguments": [
      "/usr/lib/llvm-13/bin/clang",
      "-Wno-unused-command-line-argument",
      "-fno-experimental-new-pass-manager",
      "-Xclang",
      "-load",
      "-Xclang",
      "/usr/bin/../lib/afl//SanitizerCoveragePCGUARD.so",
      "-DHAVE_CONFIG_H",
      "-I.",
      "-I../../src",
      "-I..",
      "-I./..",
      "-I./../common",
      "-I./../..",
      "-I../../libopts",
      "-I./plugins",
      "-I../../libopts",
      "-D_U_=__attribute__((unused))",
      "-fsanitize=address",
      "-g",
      "-O1",
      "-Wno-variadic-macros",
      "-Wfatal-errors",
      "-I/usr/include",
      "-c",
      "-g",
      "-funroll-loops",
      "-D__AFL_HAVE_MANUAL_CONTROL=1",
      "-D__AFL_COMPILER=1",
      "-DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION=1",
      "-D__AFL_FUZZ_INIT()=int __afl_sharedmem_fuzzing = 1;extern unsigned int *__afl_fuzz_len;extern unsigned char *__afl_fuzz_ptr;unsigned char __afl_fuzz_alt[1048576];unsigned char *__afl_fuzz_alt_ptr = __afl_fuzz_alt;",
      "-D__AFL_COVERAGE()=int __afl_selective_coverage = 1;void __afl_coverage_discard();void __afl_coverage_skip();void __afl_coverage_on();void __afl_coverage_off();",
      "-D__AFL_COVERAGE_START_OFF()=int __afl_selective_coverage_start_off = 1;",
      "-D__AFL_COVERAGE_ON()=__afl_coverage_on()",
      "-D__AFL_COVERAGE_OFF()=__afl_coverage_off()",
      "-D__AFL_COVERAGE_DISCARD()=__afl_coverage_discard()",
      "-D__AFL_COVERAGE_SKIP()=__afl_coverage_skip()",
      "-D__AFL_FUZZ_TESTCASE_BUF=(__afl_fuzz_ptr ? __afl_fuzz_ptr : __afl_fuzz_alt_ptr)",
      "-D__AFL_FUZZ_TESTCASE_LEN=(__afl_fuzz_ptr ? *__afl_fuzz_len : (*__afl_fuzz_len = read(0, __afl_fuzz_alt_ptr, 1048576)) == 0xffffffff ? 0 : *__afl_fuzz_len)",
      "-D__AFL_LOOP(_A)=({ static volatile char *_B __attribute__((used));  _B = (char*)\"##SIG_AFL_PERSISTENT##\"; __attribute__((visibility(\"default\"))) int _L(unsigned int) __asm__(\"__afl_persistent_loop\"); _L(_A); })",
      "-D__AFL_INIT()=do { static volatile char *_A __attribute__((used));  _A = (char*)\"##SIG_AFL_DEFER_FORKSRV##\"; __attribute__((visibility(\"default\"))) void _I(void) __asm__(\"__afl_manual_init\"); _I(); } while (0)",
      "-Wno-unused-command-line-argument",
      "-o",
      "plugins/dlt_jnpr_ether/jnpr_ether.o",
      "plugins/dlt_jnpr_ether/jnpr_ether.c"
    ],
    "directory": "/root/dataset_fuzz/tcpreplay-4.5.1/src/tcpedit",
    "file": "/root/dataset_fuzz/tcpreplay-4.5.1/src/tcpedit/plugins/dlt_jnpr_ether/jnpr_ether.c",
    "output": "/root/dataset_fuzz/tcpreplay-4.5.1/src/tcpedit/plugins/dlt_jnpr_ether/jnpr_ether.o"
  },
  {
    "arguments": [
      "/usr/lib/llvm-13/bin/clang",
      "-Wno-unused-command-line-argument",
      "-fno-experimental-new-pass-manager",
      "-Xclang",
      "-load",
      "-Xclang",
      "/usr/bin/../lib/afl//SanitizerCoveragePCGUARD.so",
      "-DHAVE_CONFIG_H",
      "-I.",
      "-I../../src",
      "-I..",
      "-I./..",
      "-I./../common",
      "-I./../..",
      "-I../../libopts",
      "-I./plugins",
      "-I../../libopts",
      "-D_U_=__attribute__((unused))",
      "-fsanitize=address",
      "-g",
      "-O1",
      "-Wno-variadic-macros",
      "-Wfatal-errors",
      "-I/usr/include",
      "-c",
      "-g",
      "-funroll-loops",
      "-D__AFL_HAVE_MANUAL_CONTROL=1",
      "-D__AFL_COMPILER=1",
      "-DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION=1",
      "-D__AFL_FUZZ_INIT()=int __afl_sharedmem_fuzzing = 1;extern unsigned int *__afl_fuzz_len;extern unsigned char *__afl_fuzz_ptr;unsigned char __afl_fuzz_alt[1048576];unsigned char *__afl_fuzz_alt_ptr = __afl_fuzz_alt;",
      "-D__AFL_COVERAGE()=int __afl_selective_coverage = 1;void __afl_coverage_discard();void __afl_coverage_skip();void __afl_coverage_on();void __afl_coverage_off();",
      "-D__AFL_COVERAGE_START_OFF()=int __afl_selective_coverage_start_off = 1;",
      "-D__AFL_COVERAGE_ON()=__afl_coverage_on()",
      "-D__AFL_COVERAGE_OFF()=__afl_coverage_off()",
      "-D__AFL_COVERAGE_DISCARD()=__afl_coverage_discard()",
      "-D__AFL_COVERAGE_SKIP()=__afl_coverage_skip()",
      "-D__AFL_FUZZ_TESTCASE_BUF=(__afl_fuzz_ptr ? __afl_fuzz_ptr : __afl_fuzz_alt_ptr)",
      "-D__AFL_FUZZ_TESTCASE_LEN=(__afl_fuzz_ptr ? *__afl_fuzz_len : (*__afl_fuzz_len = read(0, __afl_fuzz_alt_ptr, 1048576)) == 0xffffffff ? 0 : *__afl_fuzz_len)",
      "-D__AFL_LOOP(_A)=({ static volatile char *_B __attribute__((used));  _B = (char*)\"##SIG_AFL_PERSISTENT##\"; __attribute__((visibility(\"default\"))) int _L(unsigned int) __asm__(\"__afl_persistent_loop\"); _L(_A); })",
      "-D__AFL_INIT()=do { static volatile char *_A __attribute__((used));  _A = (char*)\"##SIG_AFL_DEFER_FORKSRV##\"; __attribute__((visibility(\"default\"))) void _I(void) __asm__(\"__afl_manual_init\"); _I(); } while (0)",
      "-Wno-unused-command-line-argument",
      "-o",
      "plugins/dlt_pppserial/pppserial.o",
      "plugins/dlt_pppserial/pppserial.c"
    ],
    "directory": "/root/dataset_fuzz/tcpreplay-4.5.1/src/tcpedit",
    "file": "/root/dataset_fuzz/tcpreplay-4.5.1/src/tcpedit/plugins/dlt_pppserial/pppserial.c",
    "output": "/root/dataset_fuzz/tcpreplay-4.5.1/src/tcpedit/plugins/dlt_pppserial/pppserial.o"
  },
  {
    "arguments": [
      "/usr/lib/llvm-13/bin/clang",
      "-Wno-unused-command-line-argument",
      "-fno-experimental-new-pass-manager",
      "-Xclang",
      "-load",
      "-Xclang",
      "/usr/bin/../lib/afl//SanitizerCoveragePCGUARD.so",
      "-DHAVE_CONFIG_H",
      "-I.",
      "-I../libopts",
      "-I./..",
      "-DTCPREPLAY",
      "-D_U_=__attribute__((unused))",
      "-fsanitize=address",
      "-g",
      "-O1",
      "-Wno-variadic-macros",
      "-Wfatal-errors",
      "-I/usr/include",
      "-c",
      "-g",
      "-funroll-loops",
      "-D__AFL_HAVE_MANUAL_CONTROL=1",
      "-D__AFL_COMPILER=1",
      "-DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION=1",
      "-D__AFL_FUZZ_INIT()=int __afl_sharedmem_fuzzing = 1;extern unsigned int *__afl_fuzz_len;extern unsigned char *__afl_fuzz_ptr;unsigned char __afl_fuzz_alt[1048576];unsigned char *__afl_fuzz_alt_ptr = __afl_fuzz_alt;",
      "-D__AFL_COVERAGE()=int __afl_selective_coverage = 1;void __afl_coverage_discard();void __afl_coverage_skip();void __afl_coverage_on();void __afl_coverage_off();",
      "-D__AFL_COVERAGE_START_OFF()=int __afl_selective_coverage_start_off = 1;",
      "-D__AFL_COVERAGE_ON()=__afl_coverage_on()",
      "-D__AFL_COVERAGE_OFF()=__afl_coverage_off()",
      "-D__AFL_COVERAGE_DISCARD()=__afl_coverage_discard()",
      "-D__AFL_COVERAGE_SKIP()=__afl_coverage_skip()",
      "-D__AFL_FUZZ_TESTCASE_BUF=(__afl_fuzz_ptr ? __afl_fuzz_ptr : __afl_fuzz_alt_ptr)",
      "-D__AFL_FUZZ_TESTCASE_LEN=(__afl_fuzz_ptr ? *__afl_fuzz_len : (*__afl_fuzz_len = read(0, __afl_fuzz_alt_ptr, 1048576)) == 0xffffffff ? 0 : *__afl_fuzz_len)",
      "-D__AFL_LOOP(_A)=({ static volatile char *_B __attribute__((used));  _B = (char*)\"##SIG_AFL_PERSISTENT##\"; __attribute__((visibility(\"default\"))) int _L(unsigned int) __asm__(\"__afl_persistent_loop\"); _L(_A); })",
      "-D__AFL_INIT()=do { static volatile char *_A __attribute__((used));  _A = (char*)\"##SIG_AFL_DEFER_FORKSRV##\"; __attribute__((visibility(\"default\"))) void _I(void) __asm__(\"__afl_manual_init\"); _I(); } while (0)",
      "-Wno-unused-command-line-argument",
      "-o",
      "tcpreplay-tcpreplay_opts.o",
      "tcpreplay_opts.c"
    ],
    "directory": "/root/dataset_fuzz/tcpreplay-4.5.1/src",
    "file": "/root/dataset_fuzz/tcpreplay-4.5.1/src/tcpreplay_opts.c",
    "output": "/root/dataset_fuzz/tcpreplay-4.5.1/src/tcpreplay-tcpreplay_opts.o"
  },
  {
    "arguments": [
      "/usr/lib/llvm-13/bin/clang",
      "-Wno-unused-command-line-argument",
      "-fno-experimental-new-pass-manager",
      "-Xclang",
      "-load",
      "-Xclang",
      "/usr/bin/../lib/afl//SanitizerCoveragePCGUARD.so",
      "-DHAVE_CONFIG_H",
      "-I.",
      "-I../libopts",
      "-I./..",
      "-DTCPREPLAY",
      "-D_U_=__attribute__((unused))",
      "-fsanitize=address",
      "-g",
      "-O1",
      "-Wno-variadic-macros",
      "-Wfatal-errors",
      "-I/usr/include",
      "-c",
      "-g",
      "-funroll-loops",
      "-D__AFL_HAVE_MANUAL_CONTROL=1",
      "-D__AFL_COMPILER=1",
      "-DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION=1",
      "-D__AFL_FUZZ_INIT()=int __afl_sharedmem_fuzzing = 1;extern unsigned int *__afl_fuzz_len;extern unsigned char *__afl_fuzz_ptr;unsigned char __afl_fuzz_alt[1048576];unsigned char *__afl_fuzz_alt_ptr = __afl_fuzz_alt;",
      "-D__AFL_COVERAGE()=int __afl_selective_coverage = 1;void __afl_coverage_discard();void __afl_coverage_skip();void __afl_coverage_on();void __afl_coverage_off();",
      "-D__AFL_COVERAGE_START_OFF()=int __afl_selective_coverage_start_off = 1;",
      "-D__AFL_COVERAGE_ON()=__afl_coverage_on()",
      "-D__AFL_COVERAGE_OFF()=__afl_coverage_off()",
      "-D__AFL_COVERAGE_DISCARD()=__afl_coverage_discard()",
      "-D__AFL_COVERAGE_SKIP()=__afl_coverage_skip()",
      "-D__AFL_FUZZ_TESTCASE_BUF=(__afl_fuzz_ptr ? __afl_fuzz_ptr : __afl_fuzz_alt_ptr)",
      "-D__AFL_FUZZ_TESTCASE_LEN=(__afl_fuzz_ptr ? *__afl_fuzz_len : (*__afl_fuzz_len = read(0, __afl_fuzz_alt_ptr, 1048576)) == 0xffffffff ? 0 : *__afl_fuzz_len)",
      "-D__AFL_LOOP(_A)=({ static volatile char *_B __attribute__((used));  _B = (char*)\"##SIG_AFL_PERSISTENT##\"; __attribute__((visibility(\"default\"))) int _L(unsigned int) __asm__(\"__afl_persistent_loop\"); _L(_A); })",
      "-D__AFL_INIT()=do { static volatile char *_A __attribute__((used));  _A = (char*)\"##SIG_AFL_DEFER_FORKSRV##\"; __attribute__((visibility(\"default\"))) void _I(void) __asm__(\"__afl_manual_init\"); _I(); } while (0)",
      "-Wno-unused-command-line-argument",
      "-o",
      "tcpreplay-send_packets.o",
      "send_packets.c"
    ],
    "directory": "/root/dataset_fuzz/tcpreplay-4.5.1/src",
    "file": "/root/dataset_fuzz/tcpreplay-4.5.1/src/send_packets.c",
    "output": "/root/dataset_fuzz/tcpreplay-4.5.1/src/tcpreplay-send_packets.o"
  },
  {
    "arguments": [
      "/usr/lib/llvm-13/bin/clang",
      "-Wno-unused-command-line-argument",
      "-fno-experimental-new-pass-manager",
      "-Xclang",
      "-load",
      "-Xclang",
      "/usr/bin/../lib/afl//SanitizerCoveragePCGUARD.so",
      "-DHAVE_CONFIG_H",
      "-I.",
      "-I../libopts",
      "-I./..",
      "-DTCPREPLAY",
      "-D_U_=__attribute__((unused))",
      "-fsanitize=address",
      "-g",
      "-O1",
      "-Wno-variadic-macros",
      "-Wfatal-errors",
      "-I/usr/include",
      "-c",
      "-g",
      "-funroll-loops",
      "-D__AFL_HAVE_MANUAL_CONTROL=1",
      "-D__AFL_COMPILER=1",
      "-DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION=1",
      "-D__AFL_FUZZ_INIT()=int __afl_sharedmem_fuzzing = 1;extern unsigned int *__afl_fuzz_len;extern unsigned char *__afl_fuzz_ptr;unsigned char __afl_fuzz_alt[1048576];unsigned char *__afl_fuzz_alt_ptr = __afl_fuzz_alt;",
      "-D__AFL_COVERAGE()=int __afl_selective_coverage = 1;void __afl_coverage_discard();void __afl_coverage_skip();void __afl_coverage_on();void __afl_coverage_off();",
      "-D__AFL_COVERAGE_START_OFF()=int __afl_selective_coverage_start_off = 1;",
      "-D__AFL_COVERAGE_ON()=__afl_coverage_on()",
      "-D__AFL_COVERAGE_OFF()=__afl_coverage_off()",
      "-D__AFL_COVERAGE_DISCARD()=__afl_coverage_discard()",
      "-D__AFL_COVERAGE_SKIP()=__afl_coverage_skip()",
      "-D__AFL_FUZZ_TESTCASE_BUF=(__afl_fuzz_ptr ? __afl_fuzz_ptr : __afl_fuzz_alt_ptr)",
      "-D__AFL_FUZZ_TESTCASE_LEN=(__afl_fuzz_ptr ? *__afl_fuzz_len : (*__afl_fuzz_len = read(0, __afl_fuzz_alt_ptr, 1048576)) == 0xffffffff ? 0 : *__afl_fuzz_len)",
      "-D__AFL_LOOP(_A)=({ static volatile char *_B __attribute__((used));  _B = (char*)\"##SIG_AFL_PERSISTENT##\"; __attribute__((visibility(\"default\"))) int _L(unsigned int) __asm__(\"__afl_persistent_loop\"); _L(_A); })",
      "-D__AFL_INIT()=do { static volatile char *_A __attribute__((used));  _A = (char*)\"##SIG_AFL_DEFER_FORKSRV##\"; __attribute__((visibility(\"default\"))) void _I(void) __asm__(\"__afl_manual_init\"); _I(); } while (0)",
      "-Wno-unused-command-line-argument",
      "-o",
      "tcpreplay-signal_handler.o",
      "signal_handler.c"
    ],
    "directory": "/root/dataset_fuzz/tcpreplay-4.5.1/src",
    "file": "/root/dataset_fuzz/tcpreplay-4.5.1/src/signal_handler.c",
    "output": "/root/dataset_fuzz/tcpreplay-4.5.1/src/tcpreplay-signal_handler.o"
  },
  {
    "arguments": [
      "/usr/lib/llvm-13/bin/clang",
      "-Wno-unused-command-line-argument",
      "-fno-experimental-new-pass-manager",
      "-Xclang",
      "-load",
      "-Xclang",
      "/usr/bin/../lib/afl//SanitizerCoveragePCGUARD.so",
      "-DHAVE_CONFIG_H",
      "-I.",
      "-I../libopts",
      "-I./..",
      "-DTCPREPLAY",
      "-D_U_=__attribute__((unused))",
      "-fsanitize=address",
      "-g",
      "-O1",
      "-Wno-variadic-macros",
      "-Wfatal-errors",
      "-I/usr/include",
      "-c",
      "-g",
      "-funroll-loops",
      "-D__AFL_HAVE_MANUAL_CONTROL=1",
      "-D__AFL_COMPILER=1",
      "-DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION=1",
      "-D__AFL_FUZZ_INIT()=int __afl_sharedmem_fuzzing = 1;extern unsigned int *__afl_fuzz_len;extern unsigned char *__afl_fuzz_ptr;unsigned char __afl_fuzz_alt[1048576];unsigned char *__afl_fuzz_alt_ptr = __afl_fuzz_alt;",
      "-D__AFL_COVERAGE()=int __afl_selective_coverage = 1;void __afl_coverage_discard();void __afl_coverage_skip();void __afl_coverage_on();void __afl_coverage_off();",
      "-D__AFL_COVERAGE_START_OFF()=int __afl_selective_coverage_start_off = 1;",
      "-D__AFL_COVERAGE_ON()=__afl_coverage_on()",
      "-D__AFL_COVERAGE_OFF()=__afl_coverage_off()",
      "-D__AFL_COVERAGE_DISCARD()=__afl_coverage_discard()",
      "-D__AFL_COVERAGE_SKIP()=__afl_coverage_skip()",
      "-D__AFL_FUZZ_TESTCASE_BUF=(__afl_fuzz_ptr ? __afl_fuzz_ptr : __afl_fuzz_alt_ptr)",
      "-D__AFL_FUZZ_TESTCASE_LEN=(__afl_fuzz_ptr ? *__afl_fuzz_len : (*__afl_fuzz_len = read(0, __afl_fuzz_alt_ptr, 1048576)) == 0xffffffff ? 0 : *__afl_fuzz_len)",
      "-D__AFL_LOOP(_A)=({ static volatile char *_B __attribute__((used));  _B = (char*)\"##SIG_AFL_PERSISTENT##\"; __attribute__((visibility(\"default\"))) int _L(unsigned int) __asm__(\"__afl_persistent_loop\"); _L(_A); })",
      "-D__AFL_INIT()=do { static volatile char *_A __attribute__((used));  _A = (char*)\"##SIG_AFL_DEFER_FORKSRV##\"; __attribute__((visibility(\"default\"))) void _I(void) __asm__(\"__afl_manual_init\"); _I(); } while (0)",
      "-Wno-unused-command-line-argument",
      "-o",
      "tcpreplay-tcpreplay.o",
      "tcpreplay.c"
    ],
    "directory": "/root/dataset_fuzz/tcpreplay-4.5.1/src",
    "file": "/root/dataset_fuzz/tcpreplay-4.5.1/src/tcpreplay.c",
    "output": "/root/dataset_fuzz/tcpreplay-4.5.1/src/tcpreplay-tcpreplay.o"
  },
  {
    "arguments": [
      "/usr/lib/llvm-13/bin/clang",
      "-Wno-unused-command-line-argument",
      "-fno-experimental-new-pass-manager",
      "-Xclang",
      "-load",
      "-Xclang",
      "/usr/bin/../lib/afl//SanitizerCoveragePCGUARD.so",
      "-DHAVE_CONFIG_H",
      "-I.",
      "-I../libopts",
      "-I./..",
      "-DTCPREPLAY",
      "-D_U_=__attribute__((unused))",
      "-fsanitize=address",
      "-g",
      "-O1",
      "-Wno-variadic-macros",
      "-Wfatal-errors",
      "-I/usr/include",
      "-c",
      "-g",
      "-funroll-loops",
      "-D__AFL_HAVE_MANUAL_CONTROL=1",
      "-D__AFL_COMPILER=1",
      "-DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION=1",
      "-D__AFL_FUZZ_INIT()=int __afl_sharedmem_fuzzing = 1;extern unsigned int *__afl_fuzz_len;extern unsigned char *__afl_fuzz_ptr;unsigned char __afl_fuzz_alt[1048576];unsigned char *__afl_fuzz_alt_ptr = __afl_fuzz_alt;",
      "-D__AFL_COVERAGE()=int __afl_selective_coverage = 1;void __afl_coverage_discard();void __afl_coverage_skip();void __afl_coverage_on();void __afl_coverage_off();",
      "-D__AFL_COVERAGE_START_OFF()=int __afl_selective_coverage_start_off = 1;",
      "-D__AFL_COVERAGE_ON()=__afl_coverage_on()",
      "-D__AFL_COVERAGE_OFF()=__afl_coverage_off()",
      "-D__AFL_COVERAGE_DISCARD()=__afl_coverage_discard()",
      "-D__AFL_COVERAGE_SKIP()=__afl_coverage_skip()",
      "-D__AFL_FUZZ_TESTCASE_BUF=(__afl_fuzz_ptr ? __afl_fuzz_ptr : __afl_fuzz_alt_ptr)",
      "-D__AFL_FUZZ_TESTCASE_LEN=(__afl_fuzz_ptr ? *__afl_fuzz_len : (*__afl_fuzz_len = read(0, __afl_fuzz_alt_ptr, 1048576)) == 0xffffffff ? 0 : *__afl_fuzz_len)",
      "-D__AFL_LOOP(_A)=({ static volatile char *_B __attribute__((used));  _B = (char*)\"##SIG_AFL_PERSISTENT##\"; __attribute__((visibility(\"default\"))) int _L(unsigned int) __asm__(\"__afl_persistent_loop\"); _L(_A); })",
      "-D__AFL_INIT()=do { static volatile char *_A __attribute__((used));  _A = (char*)\"##SIG_AFL_DEFER_FORKSRV##\"; __attribute__((visibility(\"default\"))) void _I(void) __asm__(\"__afl_manual_init\"); _I(); } while (0)",
      "-Wno-unused-command-line-argument",
      "-o",
      "tcpreplay-tcpreplay_api.o",
      "tcpreplay_api.c"
    ],
    "directory": "/root/dataset_fuzz/tcpreplay-4.5.1/src",
    "file": "/root/dataset_fuzz/tcpreplay-4.5.1/src/tcpreplay_api.c",
    "output": "/root/dataset_fuzz/tcpreplay-4.5.1/src/tcpreplay-tcpreplay_api.o"
  },
  {
    "arguments": [
      "/usr/lib/llvm-13/bin/clang",
      "-Wno-unused-command-line-argument",
      "-fno-experimental-new-pass-manager",
      "-Xclang",
      "-load",
      "-Xclang",
      "/usr/bin/../lib/afl//SanitizerCoveragePCGUARD.so",
      "-DHAVE_CONFIG_H",
      "-I.",
      "-I../libopts",
      "-I./..",
      "-DTCPREPLAY",
      "-D_U_=__attribute__((unused))",
      "-fsanitize=address",
      "-g",
      "-O1",
      "-Wno-variadic-macros",
      "-Wfatal-errors",
      "-I/usr/include",
      "-c",
      "-g",
      "-funroll-loops",
      "-D__AFL_HAVE_MANUAL_CONTROL=1",
      "-D__AFL_COMPILER=1",
      "-DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION=1",
      "-D__AFL_FUZZ_INIT()=int __afl_sharedmem_fuzzing = 1;extern unsigned int *__afl_fuzz_len;extern unsigned char *__afl_fuzz_ptr;unsigned char __afl_fuzz_alt[1048576];unsigned char *__afl_fuzz_alt_ptr = __afl_fuzz_alt;",
      "-D__AFL_COVERAGE()=int __afl_selective_coverage = 1;void __afl_coverage_discard();void __afl_coverage_skip();void __afl_coverage_on();void __afl_coverage_off();",
      "-D__AFL_COVERAGE_START_OFF()=int __afl_selective_coverage_start_off = 1;",
      "-D__AFL_COVERAGE_ON()=__afl_coverage_on()",
      "-D__AFL_COVERAGE_OFF()=__afl_coverage_off()",
      "-D__AFL_COVERAGE_DISCARD()=__afl_coverage_discard()",
      "-D__AFL_COVERAGE_SKIP()=__afl_coverage_skip()",
      "-D__AFL_FUZZ_TESTCASE_BUF=(__afl_fuzz_ptr ? __afl_fuzz_ptr : __afl_fuzz_alt_ptr)",
      "-D__AFL_FUZZ_TESTCASE_LEN=(__afl_fuzz_ptr ? *__afl_fuzz_len : (*__afl_fuzz_len = read(0, __afl_fuzz_alt_ptr, 1048576)) == 0xffffffff ? 0 : *__afl_fuzz_len)",
      "-D__AFL_LOOP(_A)=({ static volatile char *_B __attribute__((used));  _B = (char*)\"##SIG_AFL_PERSISTENT##\"; __attribute__((visibility(\"default\"))) int _L(unsigned int) __asm__(\"__afl_persistent_loop\"); _L(_A); })",
      "-D__AFL_INIT()=do { static volatile char *_A __attribute__((used));  _A = (char*)\"##SIG_AFL_DEFER_FORKSRV##\"; __attribute__((visibility(\"default\"))) void _I(void) __asm__(\"__afl_manual_init\"); _I(); } while (0)",
      "-Wno-unused-command-line-argument",
      "-o",
      "tcpreplay-sleep.o",
      "sleep.c"
    ],
    "directory": "/root/dataset_fuzz/tcpreplay-4.5.1/src",
    "file": "/root/dataset_fuzz/tcpreplay-4.5.1/src/sleep.c",
    "output": "/root/dataset_fuzz/tcpreplay-4.5.1/src/tcpreplay-sleep.o"
  },
  {
    "arguments": [
      "/usr/lib/llvm-13/bin/clang",
      "-Wno-unused-command-line-argument",
      "-fno-experimental-new-pass-manager",
      "-Xclang",
      "-load",
      "-Xclang",
      "/usr/bin/../lib/afl//SanitizerCoveragePCGUARD.so",
      "-DHAVE_CONFIG_H",
      "-I.",
      "-I../libopts",
      "-I./..",
      "-DTCPREPLAY",
      "-D_U_=__attribute__((unused))",
      "-fsanitize=address",
      "-g",
      "-O1",
      "-Wno-variadic-macros",
      "-Wfatal-errors",
      "-I/usr/include",
      "-c",
      "-g",
      "-funroll-loops",
      "-D__AFL_HAVE_MANUAL_CONTROL=1",
      "-D__AFL_COMPILER=1",
      "-DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION=1",
      "-D__AFL_FUZZ_INIT()=int __afl_sharedmem_fuzzing = 1;extern unsigned int *__afl_fuzz_len;extern unsigned char *__afl_fuzz_ptr;unsigned char __afl_fuzz_alt[1048576];unsigned char *__afl_fuzz_alt_ptr = __afl_fuzz_alt;",
      "-D__AFL_COVERAGE()=int __afl_selective_coverage = 1;void __afl_coverage_discard();void __afl_coverage_skip();void __afl_coverage_on();void __afl_coverage_off();",
      "-D__AFL_COVERAGE_START_OFF()=int __afl_selective_coverage_start_off = 1;",
      "-D__AFL_COVERAGE_ON()=__afl_coverage_on()",
      "-D__AFL_COVERAGE_OFF()=__afl_coverage_off()",
      "-D__AFL_COVERAGE_DISCARD()=__afl_coverage_discard()",
      "-D__AFL_COVERAGE_SKIP()=__afl_coverage_skip()",
      "-D__AFL_FUZZ_TESTCASE_BUF=(__afl_fuzz_ptr ? __afl_fuzz_ptr : __afl_fuzz_alt_ptr)",
      "-D__AFL_FUZZ_TESTCASE_LEN=(__afl_fuzz_ptr ? *__afl_fuzz_len : (*__afl_fuzz_len = read(0, __afl_fuzz_alt_ptr, 1048576)) == 0xffffffff ? 0 : *__afl_fuzz_len)",
      "-D__AFL_LOOP(_A)=({ static volatile char *_B __attribute__((used));  _B = (char*)\"##SIG_AFL_PERSISTENT##\"; __attribute__((visibility(\"default\"))) int _L(unsigned int) __asm__(\"__afl_persistent_loop\"); _L(_A); })",
      "-D__AFL_INIT()=do { static volatile char *_A __attribute__((used));  _A = (char*)\"##SIG_AFL_DEFER_FORKSRV##\"; __attribute__((visibility(\"default\"))) void _I(void) __asm__(\"__afl_manual_init\"); _I(); } while (0)",
      "-Wno-unused-command-line-argument",
      "-o",
      "tcpreplay-replay.o",
      "replay.c"
    ],
    "directory": "/root/dataset_fuzz/tcpreplay-4.5.1/src",
    "file": "/root/dataset_fuzz/tcpreplay-4.5.1/src/replay.c",
    "output": "/root/dataset_fuzz/tcpreplay-4.5.1/src/tcpreplay-replay.o"
  },
  {
    "arguments": [
      "/usr/lib/llvm-13/bin/clang",
      "-Wno-unused-command-line-argument",
      "-fno-experimental-new-pass-manager",
      "-Xclang",
      "-load",
      "-Xclang",
      "/usr/bin/../lib/afl//SanitizerCoveragePCGUARD.so",
      "-DHAVE_CONFIG_H",
      "-I.",
      "-I../libopts",
      "-I./..",
      "-DTCPPREP",
      "-D_U_=__attribute__((unused))",
      "-fsanitize=address",
      "-g",
      "-O1",
      "-Wno-variadic-macros",
      "-Wfatal-errors",
      "-I/usr/include",
      "-c",
      "-g",
      "-funroll-loops",
      "-D__AFL_HAVE_MANUAL_CONTROL=1",
      "-D__AFL_COMPILER=1",
      "-DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION=1",
      "-D__AFL_FUZZ_INIT()=int __afl_sharedmem_fuzzing = 1;extern unsigned int *__afl_fuzz_len;extern unsigned char *__afl_fuzz_ptr;unsigned char __afl_fuzz_alt[1048576];unsigned char *__afl_fuzz_alt_ptr = __afl_fuzz_alt;",
      "-D__AFL_COVERAGE()=int __afl_selective_coverage = 1;void __afl_coverage_discard();void __afl_coverage_skip();void __afl_coverage_on();void __afl_coverage_off();",
      "-D__AFL_COVERAGE_START_OFF()=int __afl_selective_coverage_start_off = 1;",
      "-D__AFL_COVERAGE_ON()=__afl_coverage_on()",
      "-D__AFL_COVERAGE_OFF()=__afl_coverage_off()",
      "-D__AFL_COVERAGE_DISCARD()=__afl_coverage_discard()",
      "-D__AFL_COVERAGE_SKIP()=__afl_coverage_skip()",
      "-D__AFL_FUZZ_TESTCASE_BUF=(__afl_fuzz_ptr ? __afl_fuzz_ptr : __afl_fuzz_alt_ptr)",
      "-D__AFL_FUZZ_TESTCASE_LEN=(__afl_fuzz_ptr ? *__afl_fuzz_len : (*__afl_fuzz_len = read(0, __afl_fuzz_alt_ptr, 1048576)) == 0xffffffff ? 0 : *__afl_fuzz_len)",
      "-D__AFL_LOOP(_A)=({ static volatile char *_B __attribute__((used));  _B = (char*)\"##SIG_AFL_PERSISTENT##\"; __attribute__((visibility(\"default\"))) int _L(unsigned int) __asm__(\"__afl_persistent_loop\"); _L(_A); })",
      "-D__AFL_INIT()=do { static volatile char *_A __attribute__((used));  _A = (char*)\"##SIG_AFL_DEFER_FORKSRV##\"; __attribute__((visibility(\"default\"))) void _I(void) __asm__(\"__afl_manual_init\"); _I(); } while (0)",
      "-Wno-unused-command-line-argument",
      "-o",
      "tcpprep-tcpprep_opts.o",
      "tcpprep_opts.c"
    ],
    "directory": "/root/dataset_fuzz/tcpreplay-4.5.1/src",
    "file": "/root/dataset_fuzz/tcpreplay-4.5.1/src/tcpprep_opts.c",
    "output": "/root/dataset_fuzz/tcpreplay-4.5.1/src/tcpprep-tcpprep_opts.o"
  },
  {
    "arguments": [
      "/usr/lib/llvm-13/bin/clang",
      "-Wno-unused-command-line-argument",
      "-fno-experimental-new-pass-manager",
      "-Xclang",
      "-load",
      "-Xclang",
      "/usr/bin/../lib/afl//SanitizerCoveragePCGUARD.so",
      "-DHAVE_CONFIG_H",
      "-I.",
      "-I../libopts",
      "-I./..",
      "-DTCPPREP",
      "-D_U_=__attribute__((unused))",
      "-fsanitize=address",
      "-g",
      "-O1",
      "-Wno-variadic-macros",
      "-Wfatal-errors",
      "-I/usr/include",
      "-c",
      "-g",
      "-funroll-loops",
      "-D__AFL_HAVE_MANUAL_CONTROL=1",
      "-D__AFL_COMPILER=1",
      "-DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION=1",
      "-D__AFL_FUZZ_INIT()=int __afl_sharedmem_fuzzing = 1;extern unsigned int *__afl_fuzz_len;extern unsigned char *__afl_fuzz_ptr;unsigned char __afl_fuzz_alt[1048576];unsigned char *__afl_fuzz_alt_ptr = __afl_fuzz_alt;",
      "-D__AFL_COVERAGE()=int __afl_selective_coverage = 1;void __afl_coverage_discard();void __afl_coverage_skip();void __afl_coverage_on();void __afl_coverage_off();",
      "-D__AFL_COVERAGE_START_OFF()=int __afl_selective_coverage_start_off = 1;",
      "-D__AFL_COVERAGE_ON()=__afl_coverage_on()",
      "-D__AFL_COVERAGE_OFF()=__afl_coverage_off()",
      "-D__AFL_COVERAGE_DISCARD()=__afl_coverage_discard()",
      "-D__AFL_COVERAGE_SKIP()=__afl_coverage_skip()",
      "-D__AFL_FUZZ_TESTCASE_BUF=(__afl_fuzz_ptr ? __afl_fuzz_ptr : __afl_fuzz_alt_ptr)",
      "-D__AFL_FUZZ_TESTCASE_LEN=(__afl_fuzz_ptr ? *__afl_fuzz_len : (*__afl_fuzz_len = read(0, __afl_fuzz_alt_ptr, 1048576)) == 0xffffffff ? 0 : *__afl_fuzz_len)",
      "-D__AFL_LOOP(_A)=({ static volatile char *_B __attribute__((used));  _B = (char*)\"##SIG_AFL_PERSISTENT##\"; __attribute__((visibility(\"default\"))) int _L(unsigned int) __asm__(\"__afl_persistent_loop\"); _L(_A); })",
      "-D__AFL_INIT()=do { static volatile char *_A __attribute__((used));  _A = (char*)\"##SIG_AFL_DEFER_FORKSRV##\"; __attribute__((visibility(\"default\"))) void _I(void) __asm__(\"__afl_manual_init\"); _I(); } while (0)",
      "-Wno-unused-command-line-argument",
      "-o",
      "tcpprep-tcpprep.o",
      "tcpprep.c"
    ],
    "directory": "/root/dataset_fuzz/tcpreplay-4.5.1/src",
    "file": "/root/dataset_fuzz/tcpreplay-4.5.1/src/tcpprep.c",
    "output": "/root/dataset_fuzz/tcpreplay-4.5.1/src/tcpprep-tcpprep.o"
  },
  {
    "arguments": [
      "/usr/lib/llvm-13/bin/clang",
      "-Wno-unused-command-line-argument",
      "-fno-experimental-new-pass-manager",
      "-Xclang",
      "-load",
      "-Xclang",
      "/usr/bin/../lib/afl//SanitizerCoveragePCGUARD.so",
      "-DHAVE_CONFIG_H",
      "-I.",
      "-I../libopts",
      "-I./..",
      "-DTCPPREP",
      "-D_U_=__attribute__((unused))",
      "-fsanitize=address",
      "-g",
      "-O1",
      "-Wno-variadic-macros",
      "-Wfatal-errors",
      "-I/usr/include",
      "-c",
      "-g",
      "-funroll-loops",
      "-D__AFL_HAVE_MANUAL_CONTROL=1",
      "-D__AFL_COMPILER=1",
      "-DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION=1",
      "-D__AFL_FUZZ_INIT()=int __afl_sharedmem_fuzzing = 1;extern unsigned int *__afl_fuzz_len;extern unsigned char *__afl_fuzz_ptr;unsigned char __afl_fuzz_alt[1048576];unsigned char *__afl_fuzz_alt_ptr = __afl_fuzz_alt;",
      "-D__AFL_COVERAGE()=int __afl_selective_coverage = 1;void __afl_coverage_discard();void __afl_coverage_skip();void __afl_coverage_on();void __afl_coverage_off();",
      "-D__AFL_COVERAGE_START_OFF()=int __afl_selective_coverage_start_off = 1;",
      "-D__AFL_COVERAGE_ON()=__afl_coverage_on()",
      "-D__AFL_COVERAGE_OFF()=__afl_coverage_off()",
      "-D__AFL_COVERAGE_DISCARD()=__afl_coverage_discard()",
      "-D__AFL_COVERAGE_SKIP()=__afl_coverage_skip()",
      "-D__AFL_FUZZ_TESTCASE_BUF=(__afl_fuzz_ptr ? __afl_fuzz_ptr : __afl_fuzz_alt_ptr)",
      "-D__AFL_FUZZ_TESTCASE_LEN=(__afl_fuzz_ptr ? *__afl_fuzz_len : (*__afl_fuzz_len = read(0, __afl_fuzz_alt_ptr, 1048576)) == 0xffffffff ? 0 : *__afl_fuzz_len)",
      "-D__AFL_LOOP(_A)=({ static volatile char *_B __attribute__((used));  _B = (char*)\"##SIG_AFL_PERSISTENT##\"; __attribute__((visibility(\"default\"))) int _L(unsigned int) __asm__(\"__afl_persistent_loop\"); _L(_A); })",
      "-D__AFL_INIT()=do { static volatile char *_A __attribute__((used));  _A = (char*)\"##SIG_AFL_DEFER_FORKSRV##\"; __attribute__((visibility(\"default\"))) void _I(void) __asm__(\"__afl_manual_init\"); _I(); } while (0)",
      "-Wno-unused-command-line-argument",
      "-o",
      "tcpprep-tree.o",
      "tree.c"
    ],
    "directory": "/root/dataset_fuzz/tcpreplay-4.5.1/src",
    "file": "/root/dataset_fuzz/tcpreplay-4.5.1/src/tree.c",
    "output": "/root/dataset_fuzz/tcpreplay-4.5.1/src/tcpprep-tree.o"
  },
  {
    "arguments": [
      "/usr/lib/llvm-13/bin/clang",
      "-Wno-unused-command-line-argument",
      "-fno-experimental-new-pass-manager",
      "-Xclang",
      "-load",
      "-Xclang",
      "/usr/bin/../lib/afl//SanitizerCoveragePCGUARD.so",
      "-DHAVE_CONFIG_H",
      "-I.",
      "-I../libopts",
      "-I./..",
      "-DTCPPREP",
      "-D_U_=__attribute__((unused))",
      "-fsanitize=address",
      "-g",
      "-O1",
      "-Wno-variadic-macros",
      "-Wfatal-errors",
      "-I/usr/include",
      "-c",
      "-g",
      "-funroll-loops",
      "-D__AFL_HAVE_MANUAL_CONTROL=1",
      "-D__AFL_COMPILER=1",
      "-DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION=1",
      "-D__AFL_FUZZ_INIT()=int __afl_sharedmem_fuzzing = 1;extern unsigned int *__afl_fuzz_len;extern unsigned char *__afl_fuzz_ptr;unsigned char __afl_fuzz_alt[1048576];unsigned char *__afl_fuzz_alt_ptr = __afl_fuzz_alt;",
      "-D__AFL_COVERAGE()=int __afl_selective_coverage = 1;void __afl_coverage_discard();void __afl_coverage_skip();void __afl_coverage_on();void __afl_coverage_off();",
      "-D__AFL_COVERAGE_START_OFF()=int __afl_selective_coverage_start_off = 1;",
      "-D__AFL_COVERAGE_ON()=__afl_coverage_on()",
      "-D__AFL_COVERAGE_OFF()=__afl_coverage_off()",
      "-D__AFL_COVERAGE_DISCARD()=__afl_coverage_discard()",
      "-D__AFL_COVERAGE_SKIP()=__afl_coverage_skip()",
      "-D__AFL_FUZZ_TESTCASE_BUF=(__afl_fuzz_ptr ? __afl_fuzz_ptr : __afl_fuzz_alt_ptr)",
      "-D__AFL_FUZZ_TESTCASE_LEN=(__afl_fuzz_ptr ? *__afl_fuzz_len : (*__afl_fuzz_len = read(0, __afl_fuzz_alt_ptr, 1048576)) == 0xffffffff ? 0 : *__afl_fuzz_len)",
      "-D__AFL_LOOP(_A)=({ static volatile char *_B __attribute__((used));  _B = (char*)\"##SIG_AFL_PERSISTENT##\"; __attribute__((visibility(\"default\"))) int _L(unsigned int) __asm__(\"__afl_persistent_loop\"); _L(_A); })",
      "-D__AFL_INIT()=do { static volatile char *_A __attribute__((used));  _A = (char*)\"##SIG_AFL_DEFER_FORKSRV##\"; __attribute__((visibility(\"default\"))) void _I(void) __asm__(\"__afl_manual_init\"); _I(); } while (0)",
      "-Wno-unused-command-line-argument",
      "-o",
      "tcpprep-tcpprep_api.o",
      "tcpprep_api.c"
    ],
    "directory": "/root/dataset_fuzz/tcpreplay-4.5.1/src",
    "file": "/root/dataset_fuzz/tcpreplay-4.5.1/src/tcpprep_api.c",
    "output": "/root/dataset_fuzz/tcpreplay-4.5.1/src/tcpprep-tcpprep_api.o"
  },
  {
    "arguments": [
      "/usr/lib/llvm-13/bin/clang",
      "-Wno-unused-command-line-argument",
      "-fno-experimental-new-pass-manager",
      "-Xclang",
      "-load",
      "-Xclang",
      "/usr/bin/../lib/afl//SanitizerCoveragePCGUARD.so",
      "-DHAVE_CONFIG_H",
      "-I.",
      "-I../libopts",
      "-I./..",
      "-I./tcpedit",
      "-DTCPREWRITE",
      "-DHAVE_CACHEFILE_SUPPORT",
      "-D_U_=__attribute__((unused))",
      "-fsanitize=address",
      "-g",
      "-O1",
      "-Wno-variadic-macros",
      "-Wfatal-errors",
      "-I/usr/include",
      "-c",
      "-g",
      "-funroll-loops",
      "-D__AFL_HAVE_MANUAL_CONTROL=1",
      "-D__AFL_COMPILER=1",
      "-DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION=1",
      "-D__AFL_FUZZ_INIT()=int __afl_sharedmem_fuzzing = 1;extern unsigned int *__afl_fuzz_len;extern unsigned char *__afl_fuzz_ptr;unsigned char __afl_fuzz_alt[1048576];unsigned char *__afl_fuzz_alt_ptr = __afl_fuzz_alt;",
      "-D__AFL_COVERAGE()=int __afl_selective_coverage = 1;void __afl_coverage_discard();void __afl_coverage_skip();void __afl_coverage_on();void __afl_coverage_off();",
      "-D__AFL_COVERAGE_START_OFF()=int __afl_selective_coverage_start_off = 1;",
      "-D__AFL_COVERAGE_ON()=__afl_coverage_on()",
      "-D__AFL_COVERAGE_OFF()=__afl_coverage_off()",
      "-D__AFL_COVERAGE_DISCARD()=__afl_coverage_discard()",
      "-D__AFL_COVERAGE_SKIP()=__afl_coverage_skip()",
      "-D__AFL_FUZZ_TESTCASE_BUF=(__afl_fuzz_ptr ? __afl_fuzz_ptr : __afl_fuzz_alt_ptr)",
      "-D__AFL_FUZZ_TESTCASE_LEN=(__afl_fuzz_ptr ? *__afl_fuzz_len : (*__afl_fuzz_len = read(0, __afl_fuzz_alt_ptr, 1048576)) == 0xffffffff ? 0 : *__afl_fuzz_len)",
      "-D__AFL_LOOP(_A)=({ static volatile char *_B __attribute__((used));  _B = (char*)\"##SIG_AFL_PERSISTENT##\"; __attribute__((visibility(\"default\"))) int _L(unsigned int) __asm__(\"__afl_persistent_loop\"); _L(_A); })",
      "-D__AFL_INIT()=do { static volatile char *_A __attribute__((used));  _A = (char*)\"##SIG_AFL_DEFER_FORKSRV##\"; __attribute__((visibility(\"default\"))) void _I(void) __asm__(\"__afl_manual_init\"); _I(); } while (0)",
      "-Wno-unused-command-line-argument",
      "-o",
      "tcprewrite-tcprewrite_opts.o",
      "tcprewrite_opts.c"
    ],
    "directory": "/root/dataset_fuzz/tcpreplay-4.5.1/src",
    "file": "/root/dataset_fuzz/tcpreplay-4.5.1/src/tcprewrite_opts.c",
    "output": "/root/dataset_fuzz/tcpreplay-4.5.1/src/tcprewrite-tcprewrite_opts.o"
  },
  {
    "arguments": [
      "/usr/lib/llvm-13/bin/clang",
      "-Wno-unused-command-line-argument",
      "-fno-experimental-new-pass-manager",
      "-Xclang",
      "-load",
      "-Xclang",
      "/usr/bin/../lib/afl//SanitizerCoveragePCGUARD.so",
      "-DHAVE_CONFIG_H",
      "-I.",
      "-I../libopts",
      "-I./..",
      "-I./tcpedit",
      "-DTCPREWRITE",
      "-DHAVE_CACHEFILE_SUPPORT",
      "-D_U_=__attribute__((unused))",
      "-fsanitize=address",
      "-g",
      "-O1",
      "-Wno-variadic-macros",
      "-Wfatal-errors",
      "-I/usr/include",
      "-c",
      "-g",
      "-funroll-loops",
      "-D__AFL_HAVE_MANUAL_CONTROL=1",
      "-D__AFL_COMPILER=1",
      "-DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION=1",
      "-D__AFL_FUZZ_INIT()=int __afl_sharedmem_fuzzing = 1;extern unsigned int *__afl_fuzz_len;extern unsigned char *__afl_fuzz_ptr;unsigned char __afl_fuzz_alt[1048576];unsigned char *__afl_fuzz_alt_ptr = __afl_fuzz_alt;",
      "-D__AFL_COVERAGE()=int __afl_selective_coverage = 1;void __afl_coverage_discard();void __afl_coverage_skip();void __afl_coverage_on();void __afl_coverage_off();",
      "-D__AFL_COVERAGE_START_OFF()=int __afl_selective_coverage_start_off = 1;",
      "-D__AFL_COVERAGE_ON()=__afl_coverage_on()",
      "-D__AFL_COVERAGE_OFF()=__afl_coverage_off()",
      "-D__AFL_COVERAGE_DISCARD()=__afl_coverage_discard()",
      "-D__AFL_COVERAGE_SKIP()=__afl_coverage_skip()",
      "-D__AFL_FUZZ_TESTCASE_BUF=(__afl_fuzz_ptr ? __afl_fuzz_ptr : __afl_fuzz_alt_ptr)",
      "-D__AFL_FUZZ_TESTCASE_LEN=(__afl_fuzz_ptr ? *__afl_fuzz_len : (*__afl_fuzz_len = read(0, __afl_fuzz_alt_ptr, 1048576)) == 0xffffffff ? 0 : *__afl_fuzz_len)",
      "-D__AFL_LOOP(_A)=({ static volatile char *_B __attribute__((used));  _B = (char*)\"##SIG_AFL_PERSISTENT##\"; __attribute__((visibility(\"default\"))) int _L(unsigned int) __asm__(\"__afl_persistent_loop\"); _L(_A); })",
      "-D__AFL_INIT()=do { static volatile char *_A __attribute__((used));  _A = (char*)\"##SIG_AFL_DEFER_FORKSRV##\"; __attribute__((visibility(\"default\"))) void _I(void) __asm__(\"__afl_manual_init\"); _I(); } while (0)",
      "-Wno-unused-command-line-argument",
      "-o",
      "tcprewrite-tcprewrite.o",
      "tcprewrite.c"
    ],
    "directory": "/root/dataset_fuzz/tcpreplay-4.5.1/src",
    "file": "/root/dataset_fuzz/tcpreplay-4.5.1/src/tcprewrite.c",
    "output": "/root/dataset_fuzz/tcpreplay-4.5.1/src/tcprewrite-tcprewrite.o"
  },
  {
    "arguments": [
      "/usr/lib/llvm-13/bin/clang",
      "-Wno-unused-command-line-argument",
      "-fno-experimental-new-pass-manager",
      "-Xclang",
      "-load",
      "-Xclang",
      "/usr/bin/../lib/afl//SanitizerCoveragePCGUARD.so",
      "-DHAVE_CONFIG_H",
      "-I.",
      "-I../libopts",
      "-I./..",
      "-I./tcpedit",
      "-DTCPREPLAY",
      "-DTCPREPLAY_EDIT",
      "-DHAVE_CACHEFILE_SUPPORT",
      "-D_U_=__attribute__((unused))",
      "-fsanitize=address",
      "-g",
      "-O1",
      "-Wno-variadic-macros",
      "-Wfatal-errors",
      "-I/usr/include",
      "-c",
      "-g",
      "-funroll-loops",
      "-D__AFL_HAVE_MANUAL_CONTROL=1",
      "-D__AFL_COMPILER=1",
      "-DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION=1",
      "-D__AFL_FUZZ_INIT()=int __afl_sharedmem_fuzzing = 1;extern unsigned int *__afl_fuzz_len;extern unsigned char *__afl_fuzz_ptr;unsigned char __afl_fuzz_alt[1048576];unsigned char *__afl_fuzz_alt_ptr = __afl_fuzz_alt;",
      "-D__AFL_COVERAGE()=int __afl_selective_coverage = 1;void __afl_coverage_discard();void __afl_coverage_skip();void __afl_coverage_on();void __afl_coverage_off();",
      "-D__AFL_COVERAGE_START_OFF()=int __afl_selective_coverage_start_off = 1;",
      "-D__AFL_COVERAGE_ON()=__afl_coverage_on()",
      "-D__AFL_COVERAGE_OFF()=__afl_coverage_off()",
      "-D__AFL_COVERAGE_DISCARD()=__afl_coverage_discard()",
      "-D__AFL_COVERAGE_SKIP()=__afl_coverage_skip()",
      "-D__AFL_FUZZ_TESTCASE_BUF=(__afl_fuzz_ptr ? __afl_fuzz_ptr : __afl_fuzz_alt_ptr)",
      "-D__AFL_FUZZ_TESTCASE_LEN=(__afl_fuzz_ptr ? *__afl_fuzz_len : (*__afl_fuzz_len = read(0, __afl_fuzz_alt_ptr, 1048576)) == 0xffffffff ? 0 : *__afl_fuzz_len)",
      "-D__AFL_LOOP(_A)=({ static volatile char *_B __attribute__((used));  _B = (char*)\"##SIG_AFL_PERSISTENT##\"; __attribute__((visibility(\"default\"))) int _L(unsigned int) __asm__(\"__afl_persistent_loop\"); _L(_A); })",
      "-D__AFL_INIT()=do { static volatile char *_A __attribute__((used));  _A = (char*)\"##SIG_AFL_DEFER_FORKSRV##\"; __attribute__((visibility(\"default\"))) void _I(void) __asm__(\"__afl_manual_init\"); _I(); } while (0)",
      "-Wno-unused-command-line-argument",
      "-o",
      "tcpreplay_edit-tcpreplay_edit_opts.o",
      "tcpreplay_edit_opts.c"
    ],
    "directory": "/root/dataset_fuzz/tcpreplay-4.5.1/src",
    "file": "/root/dataset_fuzz/tcpreplay-4.5.1/src/tcpreplay_edit_opts.c",
    "output": "/root/dataset_fuzz/tcpreplay-4.5.1/src/tcpreplay_edit-tcpreplay_edit_opts.o"
  },
  {
    "arguments": [
      "/usr/lib/llvm-13/bin/clang",
      "-Wno-unused-command-line-argument",
      "-fno-experimental-new-pass-manager",
      "-Xclang",
      "-load",
      "-Xclang",
      "/usr/bin/../lib/afl//SanitizerCoveragePCGUARD.so",
      "-DHAVE_CONFIG_H",
      "-I.",
      "-I../libopts",
      "-I./..",
      "-I./tcpedit",
      "-DTCPREPLAY",
      "-DTCPREPLAY_EDIT",
      "-DHAVE_CACHEFILE_SUPPORT",
      "-D_U_=__attribute__((unused))",
      "-fsanitize=address",
      "-g",
      "-O1",
      "-Wno-variadic-macros",
      "-Wfatal-errors",
      "-I/usr/include",
      "-c",
      "-g",
      "-funroll-loops",
      "-D__AFL_HAVE_MANUAL_CONTROL=1",
      "-D__AFL_COMPILER=1",
      "-DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION=1",
      "-D__AFL_FUZZ_INIT()=int __afl_sharedmem_fuzzing = 1;extern unsigned int *__afl_fuzz_len;extern unsigned char *__afl_fuzz_ptr;unsigned char __afl_fuzz_alt[1048576];unsigned char *__afl_fuzz_alt_ptr = __afl_fuzz_alt;",
      "-D__AFL_COVERAGE()=int __afl_selective_coverage = 1;void __afl_coverage_discard();void __afl_coverage_skip();void __afl_coverage_on();void __afl_coverage_off();",
      "-D__AFL_COVERAGE_START_OFF()=int __afl_selective_coverage_start_off = 1;",
      "-D__AFL_COVERAGE_ON()=__afl_coverage_on()",
      "-D__AFL_COVERAGE_OFF()=__afl_coverage_off()",
      "-D__AFL_COVERAGE_DISCARD()=__afl_coverage_discard()",
      "-D__AFL_COVERAGE_SKIP()=__afl_coverage_skip()",
      "-D__AFL_FUZZ_TESTCASE_BUF=(__afl_fuzz_ptr ? __afl_fuzz_ptr : __afl_fuzz_alt_ptr)",
      "-D__AFL_FUZZ_TESTCASE_LEN=(__afl_fuzz_ptr ? *__afl_fuzz_len : (*__afl_fuzz_len = read(0, __afl_fuzz_alt_ptr, 1048576)) == 0xffffffff ? 0 : *__afl_fuzz_len)",
      "-D__AFL_LOOP(_A)=({ static volatile char *_B __attribute__((used));  _B = (char*)\"##SIG_AFL_PERSISTENT##\"; __attribute__((visibility(\"default\"))) int _L(unsigned int) __asm__(\"__afl_persistent_loop\"); _L(_A); })",
      "-D__AFL_INIT()=do { static volatile char *_A __attribute__((used));  _A = (char*)\"##SIG_AFL_DEFER_FORKSRV##\"; __attribute__((visibility(\"default\"))) void _I(void) __asm__(\"__afl_manual_init\"); _I(); } while (0)",
      "-Wno-unused-command-line-argument",
      "-o",
      "tcpreplay_edit-send_packets.o",
      "send_packets.c"
    ],
    "directory": "/root/dataset_fuzz/tcpreplay-4.5.1/src",
    "file": "/root/dataset_fuzz/tcpreplay-4.5.1/src/send_packets.c",
    "output": "/root/dataset_fuzz/tcpreplay-4.5.1/src/tcpreplay_edit-send_packets.o"
  },
  {
    "arguments": [
      "/usr/lib/llvm-13/bin/clang",
      "-Wno-unused-command-line-argument",
      "-fno-experimental-new-pass-manager",
      "-Xclang",
      "-load",
      "-Xclang",
      "/usr/bin/../lib/afl//SanitizerCoveragePCGUARD.so",
      "-DHAVE_CONFIG_H",
      "-I.",
      "-I../libopts",
      "-I./..",
      "-I./tcpedit",
      "-DTCPREPLAY",
      "-DTCPREPLAY_EDIT",
      "-DHAVE_CACHEFILE_SUPPORT",
      "-D_U_=__attribute__((unused))",
      "-fsanitize=address",
      "-g",
      "-O1",
      "-Wno-variadic-macros",
      "-Wfatal-errors",
      "-I/usr/include",
      "-c",
      "-g",
      "-funroll-loops",
      "-D__AFL_HAVE_MANUAL_CONTROL=1",
      "-D__AFL_COMPILER=1",
      "-DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION=1",
      "-D__AFL_FUZZ_INIT()=int __afl_sharedmem_fuzzing = 1;extern unsigned int *__afl_fuzz_len;extern unsigned char *__afl_fuzz_ptr;unsigned char __afl_fuzz_alt[1048576];unsigned char *__afl_fuzz_alt_ptr = __afl_fuzz_alt;",
      "-D__AFL_COVERAGE()=int __afl_selective_coverage = 1;void __afl_coverage_discard();void __afl_coverage_skip();void __afl_coverage_on();void __afl_coverage_off();",
      "-D__AFL_COVERAGE_START_OFF()=int __afl_selective_coverage_start_off = 1;",
      "-D__AFL_COVERAGE_ON()=__afl_coverage_on()",
      "-D__AFL_COVERAGE_OFF()=__afl_coverage_off()",
      "-D__AFL_COVERAGE_DISCARD()=__afl_coverage_discard()",
      "-D__AFL_COVERAGE_SKIP()=__afl_coverage_skip()",
      "-D__AFL_FUZZ_TESTCASE_BUF=(__afl_fuzz_ptr ? __afl_fuzz_ptr : __afl_fuzz_alt_ptr)",
      "-D__AFL_FUZZ_TESTCASE_LEN=(__afl_fuzz_ptr ? *__afl_fuzz_len : (*__afl_fuzz_len = read(0, __afl_fuzz_alt_ptr, 1048576)) == 0xffffffff ? 0 : *__afl_fuzz_len)",
      "-D__AFL_LOOP(_A)=({ static volatile char *_B __attribute__((used));  _B = (char*)\"##SIG_AFL_PERSISTENT##\"; __attribute__((visibility(\"default\"))) int _L(unsigned int) __asm__(\"__afl_persistent_loop\"); _L(_A); })",
      "-D__AFL_INIT()=do { static volatile char *_A __attribute__((used));  _A = (char*)\"##SIG_AFL_DEFER_FORKSRV##\"; __attribute__((visibility(\"default\"))) void _I(void) __asm__(\"__afl_manual_init\"); _I(); } while (0)",
      "-Wno-unused-command-line-argument",
      "-o",
      "tcpreplay_edit-signal_handler.o",
      "signal_handler.c"
    ],
    "directory": "/root/dataset_fuzz/tcpreplay-4.5.1/src",
    "file": "/root/dataset_fuzz/tcpreplay-4.5.1/src/signal_handler.c",
    "output": "/root/dataset_fuzz/tcpreplay-4.5.1/src/tcpreplay_edit-signal_handler.o"
  },
  {
    "arguments": [
      "/usr/lib/llvm-13/bin/clang",
      "-Wno-unused-command-line-argument",
      "-fno-experimental-new-pass-manager",
      "-Xclang",
      "-load",
      "-Xclang",
      "/usr/bin/../lib/afl//SanitizerCoveragePCGUARD.so",
      "-DHAVE_CONFIG_H",
      "-I.",
      "-I../libopts",
      "-I./..",
      "-I./tcpedit",
      "-DTCPREPLAY",
      "-DTCPREPLAY_EDIT",
      "-DHAVE_CACHEFILE_SUPPORT",
      "-D_U_=__attribute__((unused))",
      "-fsanitize=address",
      "-g",
      "-O1",
      "-Wno-variadic-macros",
      "-Wfatal-errors",
      "-I/usr/include",
      "-c",
      "-g",
      "-funroll-loops",
      "-D__AFL_HAVE_MANUAL_CONTROL=1",
      "-D__AFL_COMPILER=1",
      "-DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION=1",
      "-D__AFL_FUZZ_INIT()=int __afl_sharedmem_fuzzing = 1;extern unsigned int *__afl_fuzz_len;extern unsigned char *__afl_fuzz_ptr;unsigned char __afl_fuzz_alt[1048576];unsigned char *__afl_fuzz_alt_ptr = __afl_fuzz_alt;",
      "-D__AFL_COVERAGE()=int __afl_selective_coverage = 1;void __afl_coverage_discard();void __afl_coverage_skip();void __afl_coverage_on();void __afl_coverage_off();",
      "-D__AFL_COVERAGE_START_OFF()=int __afl_selective_coverage_start_off = 1;",
      "-D__AFL_COVERAGE_ON()=__afl_coverage_on()",
      "-D__AFL_COVERAGE_OFF()=__afl_coverage_off()",
      "-D__AFL_COVERAGE_DISCARD()=__afl_coverage_discard()",
      "-D__AFL_COVERAGE_SKIP()=__afl_coverage_skip()",
      "-D__AFL_FUZZ_TESTCASE_BUF=(__afl_fuzz_ptr ? __afl_fuzz_ptr : __afl_fuzz_alt_ptr)",
      "-D__AFL_FUZZ_TESTCASE_LEN=(__afl_fuzz_ptr ? *__afl_fuzz_len : (*__afl_fuzz_len = read(0, __afl_fuzz_alt_ptr, 1048576)) == 0xffffffff ? 0 : *__afl_fuzz_len)",
      "-D__AFL_LOOP(_A)=({ static volatile char *_B __attribute__((used));  _B = (char*)\"##SIG_AFL_PERSISTENT##\"; __attribute__((visibility(\"default\"))) int _L(unsigned int) __asm__(\"__afl_persistent_loop\"); _L(_A); })",
      "-D__AFL_INIT()=do { static volatile char *_A __attribute__((used));  _A = (char*)\"##SIG_AFL_DEFER_FORKSRV##\"; __attribute__((visibility(\"default\"))) void _I(void) __asm__(\"__afl_manual_init\"); _I(); } while (0)",
      "-Wno-unused-command-line-argument",
      "-o",
      "tcpreplay_edit-tcpreplay.o",
      "tcpreplay.c"
    ],
    "directory": "/root/dataset_fuzz/tcpreplay-4.5.1/src",
    "file": "/root/dataset_fuzz/tcpreplay-4.5.1/src/tcpreplay.c",
    "output": "/root/dataset_fuzz/tcpreplay-4.5.1/src/tcpreplay_edit-tcpreplay.o"
  },
  {
    "arguments": [
      "/usr/lib/llvm-13/bin/clang",
      "-Wno-unused-command-line-argument",
      "-fno-experimental-new-pass-manager",
      "-Xclang",
      "-load",
      "-Xclang",
      "/usr/bin/../lib/afl//SanitizerCoveragePCGUARD.so",
      "-DHAVE_CONFIG_H",
      "-I.",
      "-I../libopts",
      "-I./..",
      "-I./tcpedit",
      "-DTCPREPLAY",
      "-DTCPREPLAY_EDIT",
      "-DHAVE_CACHEFILE_SUPPORT",
      "-D_U_=__attribute__((unused))",
      "-fsanitize=address",
      "-g",
      "-O1",
      "-Wno-variadic-macros",
      "-Wfatal-errors",
      "-I/usr/include",
      "-c",
      "-g",
      "-funroll-loops",
      "-D__AFL_HAVE_MANUAL_CONTROL=1",
      "-D__AFL_COMPILER=1",
      "-DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION=1",
      "-D__AFL_FUZZ_INIT()=int __afl_sharedmem_fuzzing = 1;extern unsigned int *__afl_fuzz_len;extern unsigned char *__afl_fuzz_ptr;unsigned char __afl_fuzz_alt[1048576];unsigned char *__afl_fuzz_alt_ptr = __afl_fuzz_alt;",
      "-D__AFL_COVERAGE()=int __afl_selective_coverage = 1;void __afl_coverage_discard();void __afl_coverage_skip();void __afl_coverage_on();void __afl_coverage_off();",
      "-D__AFL_COVERAGE_START_OFF()=int __afl_selective_coverage_start_off = 1;",
      "-D__AFL_COVERAGE_ON()=__afl_coverage_on()",
      "-D__AFL_COVERAGE_OFF()=__afl_coverage_off()",
      "-D__AFL_COVERAGE_DISCARD()=__afl_coverage_discard()",
      "-D__AFL_COVERAGE_SKIP()=__afl_coverage_skip()",
      "-D__AFL_FUZZ_TESTCASE_BUF=(__afl_fuzz_ptr ? __afl_fuzz_ptr : __afl_fuzz_alt_ptr)",
      "-D__AFL_FUZZ_TESTCASE_LEN=(__afl_fuzz_ptr ? *__afl_fuzz_len : (*__afl_fuzz_len = read(0, __afl_fuzz_alt_ptr, 1048576)) == 0xffffffff ? 0 : *__afl_fuzz_len)",
      "-D__AFL_LOOP(_A)=({ static volatile char *_B __attribute__((used));  _B = (char*)\"##SIG_AFL_PERSISTENT##\"; __attribute__((visibility(\"default\"))) int _L(unsigned int) __asm__(\"__afl_persistent_loop\"); _L(_A); })",
      "-D__AFL_INIT()=do { static volatile char *_A __attribute__((used));  _A = (char*)\"##SIG_AFL_DEFER_FORKSRV##\"; __attribute__((visibility(\"default\"))) void _I(void) __asm__(\"__afl_manual_init\"); _I(); } while (0)",
      "-Wno-unused-command-line-argument",
      "-o",
      "tcpreplay_edit-tcpreplay_api.o",
      "tcpreplay_api.c"
    ],
    "directory": "/root/dataset_fuzz/tcpreplay-4.5.1/src",
    "file": "/root/dataset_fuzz/tcpreplay-4.5.1/src/tcpreplay_api.c",
    "output": "/root/dataset_fuzz/tcpreplay-4.5.1/src/tcpreplay_edit-tcpreplay_api.o"
  },
  {
    "arguments": [
      "/usr/lib/llvm-13/bin/clang",
      "-Wno-unused-command-line-argument",
      "-fno-experimental-new-pass-manager",
      "-Xclang",
      "-load",
      "-Xclang",
      "/usr/bin/../lib/afl//SanitizerCoveragePCGUARD.so",
      "-DHAVE_CONFIG_H",
      "-I.",
      "-I../libopts",
      "-I./..",
      "-I./tcpedit",
      "-DTCPREPLAY",
      "-DTCPREPLAY_EDIT",
      "-DHAVE_CACHEFILE_SUPPORT",
      "-D_U_=__attribute__((unused))",
      "-fsanitize=address",
      "-g",
      "-O1",
      "-Wno-variadic-macros",
      "-Wfatal-errors",
      "-I/usr/include",
      "-c",
      "-g",
      "-funroll-loops",
      "-D__AFL_HAVE_MANUAL_CONTROL=1",
      "-D__AFL_COMPILER=1",
      "-DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION=1",
      "-D__AFL_FUZZ_INIT()=int __afl_sharedmem_fuzzing = 1;extern unsigned int *__afl_fuzz_len;extern unsigned char *__afl_fuzz_ptr;unsigned char __afl_fuzz_alt[1048576];unsigned char *__afl_fuzz_alt_ptr = __afl_fuzz_alt;",
      "-D__AFL_COVERAGE()=int __afl_selective_coverage = 1;void __afl_coverage_discard();void __afl_coverage_skip();void __afl_coverage_on();void __afl_coverage_off();",
      "-D__AFL_COVERAGE_START_OFF()=int __afl_selective_coverage_start_off = 1;",
      "-D__AFL_COVERAGE_ON()=__afl_coverage_on()",
      "-D__AFL_COVERAGE_OFF()=__afl_coverage_off()",
      "-D__AFL_COVERAGE_DISCARD()=__afl_coverage_discard()",
      "-D__AFL_COVERAGE_SKIP()=__afl_coverage_skip()",
      "-D__AFL_FUZZ_TESTCASE_BUF=(__afl_fuzz_ptr ? __afl_fuzz_ptr : __afl_fuzz_alt_ptr)",
      "-D__AFL_FUZZ_TESTCASE_LEN=(__afl_fuzz_ptr ? *__afl_fuzz_len : (*__afl_fuzz_len = read(0, __afl_fuzz_alt_ptr, 1048576)) == 0xffffffff ? 0 : *__afl_fuzz_len)",
      "-D__AFL_LOOP(_A)=({ static volatile char *_B __attribute__((used));  _B = (char*)\"##SIG_AFL_PERSISTENT##\"; __attribute__((visibility(\"default\"))) int _L(unsigned int) __asm__(\"__afl_persistent_loop\"); _L(_A); })",
      "-D__AFL_INIT()=do { static volatile char *_A __attribute__((used));  _A = (char*)\"##SIG_AFL_DEFER_FORKSRV##\"; __attribute__((visibility(\"default\"))) void _I(void) __asm__(\"__afl_manual_init\"); _I(); } while (0)",
      "-Wno-unused-command-line-argument",
      "-o",
      "tcpreplay_edit-sleep.o",
      "sleep.c"
    ],
    "directory": "/root/dataset_fuzz/tcpreplay-4.5.1/src",
    "file": "/root/dataset_fuzz/tcpreplay-4.5.1/src/sleep.c",
    "output": "/root/dataset_fuzz/tcpreplay-4.5.1/src/tcpreplay_edit-sleep.o"
  },
  {
    "arguments": [
      "/usr/lib/llvm-13/bin/clang",
      "-Wno-unused-command-line-argument",
      "-fno-experimental-new-pass-manager",
      "-Xclang",
      "-load",
      "-Xclang",
      "/usr/bin/../lib/afl//SanitizerCoveragePCGUARD.so",
      "-DHAVE_CONFIG_H",
      "-I.",
      "-I../libopts",
      "-I./..",
      "-I./tcpedit",
      "-DTCPREPLAY",
      "-DTCPREPLAY_EDIT",
      "-DHAVE_CACHEFILE_SUPPORT",
      "-D_U_=__attribute__((unused))",
      "-fsanitize=address",
      "-g",
      "-O1",
      "-Wno-variadic-macros",
      "-Wfatal-errors",
      "-I/usr/include",
      "-c",
      "-g",
      "-funroll-loops",
      "-D__AFL_HAVE_MANUAL_CONTROL=1",
      "-D__AFL_COMPILER=1",
      "-DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION=1",
      "-D__AFL_FUZZ_INIT()=int __afl_sharedmem_fuzzing = 1;extern unsigned int *__afl_fuzz_len;extern unsigned char *__afl_fuzz_ptr;unsigned char __afl_fuzz_alt[1048576];unsigned char *__afl_fuzz_alt_ptr = __afl_fuzz_alt;",
      "-D__AFL_COVERAGE()=int __afl_selective_coverage = 1;void __afl_coverage_discard();void __afl_coverage_skip();void __afl_coverage_on();void __afl_coverage_off();",
      "-D__AFL_COVERAGE_START_OFF()=int __afl_selective_coverage_start_off = 1;",
      "-D__AFL_COVERAGE_ON()=__afl_coverage_on()",
      "-D__AFL_COVERAGE_OFF()=__afl_coverage_off()",
      "-D__AFL_COVERAGE_DISCARD()=__afl_coverage_discard()",
      "-D__AFL_COVERAGE_SKIP()=__afl_coverage_skip()",
      "-D__AFL_FUZZ_TESTCASE_BUF=(__afl_fuzz_ptr ? __afl_fuzz_ptr : __afl_fuzz_alt_ptr)",
      "-D__AFL_FUZZ_TESTCASE_LEN=(__afl_fuzz_ptr ? *__afl_fuzz_len : (*__afl_fuzz_len = read(0, __afl_fuzz_alt_ptr, 1048576)) == 0xffffffff ? 0 : *__afl_fuzz_len)",
      "-D__AFL_LOOP(_A)=({ static volatile char *_B __attribute__((used));  _B = (char*)\"##SIG_AFL_PERSISTENT##\"; __attribute__((visibility(\"default\"))) int _L(unsigned int) __asm__(\"__afl_persistent_loop\"); _L(_A); })",
      "-D__AFL_INIT()=do { static volatile char *_A __attribute__((used));  _A = (char*)\"##SIG_AFL_DEFER_FORKSRV##\"; __attribute__((visibility(\"default\"))) void _I(void) __asm__(\"__afl_manual_init\"); _I(); } while (0)",
      "-Wno-unused-command-line-argument",
      "-o",
      "tcpreplay_edit-replay.o",
      "replay.c"
    ],
    "directory": "/root/dataset_fuzz/tcpreplay-4.5.1/src",
    "file": "/root/dataset_fuzz/tcpreplay-4.5.1/src/replay.c",
    "output": "/root/dataset_fuzz/tcpreplay-4.5.1/src/tcpreplay_edit-replay.o"
  },
  {
    "arguments": [
      "/usr/lib/llvm-13/bin/clang",
      "-Wno-unused-command-line-argument",
      "-fno-experimental-new-pass-manager",
      "-Xclang",
      "-load",
      "-Xclang",
      "/usr/bin/../lib/afl//SanitizerCoveragePCGUARD.so",
      "-DHAVE_CONFIG_H",
      "-I.",
      "-I../libopts",
      "-I./..",
      "-DTCPCAPINFO",
      "-D_U_=__attribute__((unused))",
      "-fsanitize=address",
      "-g",
      "-O1",
      "-Wno-variadic-macros",
      "-Wfatal-errors",
      "-I/usr/include",
      "-c",
      "-g",
      "-funroll-loops",
      "-D__AFL_HAVE_MANUAL_CONTROL=1",
      "-D__AFL_COMPILER=1",
      "-DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION=1",
      "-D__AFL_FUZZ_INIT()=int __afl_sharedmem_fuzzing = 1;extern unsigned int *__afl_fuzz_len;extern unsigned char *__afl_fuzz_ptr;unsigned char __afl_fuzz_alt[1048576];unsigned char *__afl_fuzz_alt_ptr = __afl_fuzz_alt;",
      "-D__AFL_COVERAGE()=int __afl_selective_coverage = 1;void __afl_coverage_discard();void __afl_coverage_skip();void __afl_coverage_on();void __afl_coverage_off();",
      "-D__AFL_COVERAGE_START_OFF()=int __afl_selective_coverage_start_off = 1;",
      "-D__AFL_COVERAGE_ON()=__afl_coverage_on()",
      "-D__AFL_COVERAGE_OFF()=__afl_coverage_off()",
      "-D__AFL_COVERAGE_DISCARD()=__afl_coverage_discard()",
      "-D__AFL_COVERAGE_SKIP()=__afl_coverage_skip()",
      "-D__AFL_FUZZ_TESTCASE_BUF=(__afl_fuzz_ptr ? __afl_fuzz_ptr : __afl_fuzz_alt_ptr)",
      "-D__AFL_FUZZ_TESTCASE_LEN=(__afl_fuzz_ptr ? *__afl_fuzz_len : (*__afl_fuzz_len = read(0, __afl_fuzz_alt_ptr, 1048576)) == 0xffffffff ? 0 : *__afl_fuzz_len)",
      "-D__AFL_LOOP(_A)=({ static volatile char *_B __attribute__((used));  _B = (char*)\"##SIG_AFL_PERSISTENT##\"; __attribute__((visibility(\"default\"))) int _L(unsigned int) __asm__(\"__afl_persistent_loop\"); _L(_A); })",
      "-D__AFL_INIT()=do { static volatile char *_A __attribute__((used));  _A = (char*)\"##SIG_AFL_DEFER_FORKSRV##\"; __attribute__((visibility(\"default\"))) void _I(void) __asm__(\"__afl_manual_init\"); _I(); } while (0)",
      "-Wno-unused-command-line-argument",
      "-o",
      "tcpcapinfo-tcpcapinfo_opts.o",
      "tcpcapinfo_opts.c"
    ],
    "directory": "/root/dataset_fuzz/tcpreplay-4.5.1/src",
    "file": "/root/dataset_fuzz/tcpreplay-4.5.1/src/tcpcapinfo_opts.c",
    "output": "/root/dataset_fuzz/tcpreplay-4.5.1/src/tcpcapinfo-tcpcapinfo_opts.o"
  },
  {
    "arguments": [
      "/usr/lib/llvm-13/bin/clang",
      "-Wno-unused-command-line-argument",
      "-fno-experimental-new-pass-manager",
      "-Xclang",
      "-load",
      "-Xclang",
      "/usr/bin/../lib/afl//SanitizerCoveragePCGUARD.so",
      "-DHAVE_CONFIG_H",
      "-I.",
      "-I../libopts",
      "-I./..",
      "-DTCPCAPINFO",
      "-D_U_=__attribute__((unused))",
      "-fsanitize=address",
      "-g",
      "-O1",
      "-Wno-variadic-macros",
      "-Wfatal-errors",
      "-I/usr/include",
      "-c",
      "-g",
      "-funroll-loops",
      "-D__AFL_HAVE_MANUAL_CONTROL=1",
      "-D__AFL_COMPILER=1",
      "-DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION=1",
      "-D__AFL_FUZZ_INIT()=int __afl_sharedmem_fuzzing = 1;extern unsigned int *__afl_fuzz_len;extern unsigned char *__afl_fuzz_ptr;unsigned char __afl_fuzz_alt[1048576];unsigned char *__afl_fuzz_alt_ptr = __afl_fuzz_alt;",
      "-D__AFL_COVERAGE()=int __afl_selective_coverage = 1;void __afl_coverage_discard();void __afl_coverage_skip();void __afl_coverage_on();void __afl_coverage_off();",
      "-D__AFL_COVERAGE_START_OFF()=int __afl_selective_coverage_start_off = 1;",
      "-D__AFL_COVERAGE_ON()=__afl_coverage_on()",
      "-D__AFL_COVERAGE_OFF()=__afl_coverage_off()",
      "-D__AFL_COVERAGE_DISCARD()=__afl_coverage_discard()",
      "-D__AFL_COVERAGE_SKIP()=__afl_coverage_skip()",
      "-D__AFL_FUZZ_TESTCASE_BUF=(__afl_fuzz_ptr ? __afl_fuzz_ptr : __afl_fuzz_alt_ptr)",
      "-D__AFL_FUZZ_TESTCASE_LEN=(__afl_fuzz_ptr ? *__afl_fuzz_len : (*__afl_fuzz_len = read(0, __afl_fuzz_alt_ptr, 1048576)) == 0xffffffff ? 0 : *__afl_fuzz_len)",
      "-D__AFL_LOOP(_A)=({ static volatile char *_B __attribute__((used));  _B = (char*)\"##SIG_AFL_PERSISTENT##\"; __attribute__((visibility(\"default\"))) int _L(unsigned int) __asm__(\"__afl_persistent_loop\"); _L(_A); })",
      "-D__AFL_INIT()=do { static volatile char *_A __attribute__((used));  _A = (char*)\"##SIG_AFL_DEFER_FORKSRV##\"; __attribute__((visibility(\"default\"))) void _I(void) __asm__(\"__afl_manual_init\"); _I(); } while (0)",
      "-Wno-unused-command-line-argument",
      "-o",
      "tcpcapinfo-tcpcapinfo.o",
      "tcpcapinfo.c"
    ],
    "directory": "/root/dataset_fuzz/tcpreplay-4.5.1/src",
    "file": "/root/dataset_fuzz/tcpreplay-4.5.1/src/tcpcapinfo.c",
    "output": "/root/dataset_fuzz/tcpreplay-4.5.1/src/tcpcapinfo-tcpcapinfo.o"
  },
  {
    "arguments": [
      "/usr/lib/llvm-13/bin/clang",
      "-Wno-unused-command-line-argument",
      "-fno-experimental-new-pass-manager",
      "-Xclang",
      "-load",
      "-Xclang",
      "/usr/bin/../lib/afl//SanitizerCoveragePCGUARD.so",
      "-DHAVE_CONFIG_H",
      "-I.",
      "-I../libopts",
      "-I./..",
      "-I./tcpedit",
      "-DTCPBRIDGE",
      "-D_U_=__attribute__((unused))",
      "-fsanitize=address",
      "-g",
      "-O1",
      "-Wno-variadic-macros",
      "-Wfatal-errors",
      "-I/usr/include",
      "-c",
      "-g",
      "-funroll-loops",
      "-D__AFL_HAVE_MANUAL_CONTROL=1",
      "-D__AFL_COMPILER=1",
      "-DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION=1",
      "-D__AFL_FUZZ_INIT()=int __afl_sharedmem_fuzzing = 1;extern unsigned int *__afl_fuzz_len;extern unsigned char *__afl_fuzz_ptr;unsigned char __afl_fuzz_alt[1048576];unsigned char *__afl_fuzz_alt_ptr = __afl_fuzz_alt;",
      "-D__AFL_COVERAGE()=int __afl_selective_coverage = 1;void __afl_coverage_discard();void __afl_coverage_skip();void __afl_coverage_on();void __afl_coverage_off();",
      "-D__AFL_COVERAGE_START_OFF()=int __afl_selective_coverage_start_off = 1;",
      "-D__AFL_COVERAGE_ON()=__afl_coverage_on()",
      "-D__AFL_COVERAGE_OFF()=__afl_coverage_off()",
      "-D__AFL_COVERAGE_DISCARD()=__afl_coverage_discard()",
      "-D__AFL_COVERAGE_SKIP()=__afl_coverage_skip()",
      "-D__AFL_FUZZ_TESTCASE_BUF=(__afl_fuzz_ptr ? __afl_fuzz_ptr : __afl_fuzz_alt_ptr)",
      "-D__AFL_FUZZ_TESTCASE_LEN=(__afl_fuzz_ptr ? *__afl_fuzz_len : (*__afl_fuzz_len = read(0, __afl_fuzz_alt_ptr, 1048576)) == 0xffffffff ? 0 : *__afl_fuzz_len)",
      "-D__AFL_LOOP(_A)=({ static volatile char *_B __attribute__((used));  _B = (char*)\"##SIG_AFL_PERSISTENT##\"; __attribute__((visibility(\"default\"))) int _L(unsigned int) __asm__(\"__afl_persistent_loop\"); _L(_A); })",
      "-D__AFL_INIT()=do { static volatile char *_A __attribute__((used));  _A = (char*)\"##SIG_AFL_DEFER_FORKSRV##\"; __attribute__((visibility(\"default\"))) void _I(void) __asm__(\"__afl_manual_init\"); _I(); } while (0)",
      "-Wno-unused-command-line-argument",
      "-o",
      "tcpbridge-tcpbridge_opts.o",
      "tcpbridge_opts.c"
    ],
    "directory": "/root/dataset_fuzz/tcpreplay-4.5.1/src",
    "file": "/root/dataset_fuzz/tcpreplay-4.5.1/src/tcpbridge_opts.c",
    "output": "/root/dataset_fuzz/tcpreplay-4.5.1/src/tcpbridge-tcpbridge_opts.o"
  },
  {
    "arguments": [
      "/usr/lib/llvm-13/bin/clang",
      "-Wno-unused-command-line-argument",
      "-fno-experimental-new-pass-manager",
      "-Xclang",
      "-load",
      "-Xclang",
      "/usr/bin/../lib/afl//SanitizerCoveragePCGUARD.so",
      "-DHAVE_CONFIG_H",
      "-I.",
      "-I../libopts",
      "-I./..",
      "-I./tcpedit",
      "-DTCPBRIDGE",
      "-D_U_=__attribute__((unused))",
      "-fsanitize=address",
      "-g",
      "-O1",
      "-Wno-variadic-macros",
      "-Wfatal-errors",
      "-I/usr/include",
      "-c",
      "-g",
      "-funroll-loops",
      "-D__AFL_HAVE_MANUAL_CONTROL=1",
      "-D__AFL_COMPILER=1",
      "-DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION=1",
      "-D__AFL_FUZZ_INIT()=int __afl_sharedmem_fuzzing = 1;extern unsigned int *__afl_fuzz_len;extern unsigned char *__afl_fuzz_ptr;unsigned char __afl_fuzz_alt[1048576];unsigned char *__afl_fuzz_alt_ptr = __afl_fuzz_alt;",
      "-D__AFL_COVERAGE()=int __afl_selective_coverage = 1;void __afl_coverage_discard();void __afl_coverage_skip();void __afl_coverage_on();void __afl_coverage_off();",
      "-D__AFL_COVERAGE_START_OFF()=int __afl_selective_coverage_start_off = 1;",
      "-D__AFL_COVERAGE_ON()=__afl_coverage_on()",
      "-D__AFL_COVERAGE_OFF()=__afl_coverage_off()",
      "-D__AFL_COVERAGE_DISCARD()=__afl_coverage_discard()",
      "-D__AFL_COVERAGE_SKIP()=__afl_coverage_skip()",
      "-D__AFL_FUZZ_TESTCASE_BUF=(__afl_fuzz_ptr ? __afl_fuzz_ptr : __afl_fuzz_alt_ptr)",
      "-D__AFL_FUZZ_TESTCASE_LEN=(__afl_fuzz_ptr ? *__afl_fuzz_len : (*__afl_fuzz_len = read(0, __afl_fuzz_alt_ptr, 1048576)) == 0xffffffff ? 0 : *__afl_fuzz_len)",
      "-D__AFL_LOOP(_A)=({ static volatile char *_B __attribute__((used));  _B = (char*)\"##SIG_AFL_PERSISTENT##\"; __attribute__((visibility(\"default\"))) int _L(unsigned int) __asm__(\"__afl_persistent_loop\"); _L(_A); })",
      "-D__AFL_INIT()=do { static volatile char *_A __attribute__((used));  _A = (char*)\"##SIG_AFL_DEFER_FORKSRV##\"; __attribute__((visibility(\"default\"))) void _I(void) __asm__(\"__afl_manual_init\"); _I(); } while (0)",
      "-Wno-unused-command-line-argument",
      "-o",
      "tcpbridge-tcpbridge.o",
      "tcpbridge.c"
    ],
    "directory": "/root/dataset_fuzz/tcpreplay-4.5.1/src",
    "file": "/root/dataset_fuzz/tcpreplay-4.5.1/src/tcpbridge.c",
    "output": "/root/dataset_fuzz/tcpreplay-4.5.1/src/tcpbridge-tcpbridge.o"
  },
  {
    "arguments": [
      "/usr/lib/llvm-13/bin/clang",
      "-Wno-unused-command-line-argument",
      "-fno-experimental-new-pass-manager",
      "-Xclang",
      "-load",
      "-Xclang",
      "/usr/bin/../lib/afl//SanitizerCoveragePCGUARD.so",
      "-DHAVE_CONFIG_H",
      "-I.",
      "-I../libopts",
      "-I./..",
      "-I./tcpedit",
      "-DTCPBRIDGE",
      "-D_U_=__attribute__((unused))",
      "-fsanitize=address",
      "-g",
      "-O1",
      "-Wno-variadic-macros",
      "-Wfatal-errors",
      "-I/usr/include",
      "-c",
      "-g",
      "-funroll-loops",
      "-D__AFL_HAVE_MANUAL_CONTROL=1",
      "-D__AFL_COMPILER=1",
      "-DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION=1",
      "-D__AFL_FUZZ_INIT()=int __afl_sharedmem_fuzzing = 1;extern unsigned int *__afl_fuzz_len;extern unsigned char *__afl_fuzz_ptr;unsigned char __afl_fuzz_alt[1048576];unsigned char *__afl_fuzz_alt_ptr = __afl_fuzz_alt;",
      "-D__AFL_COVERAGE()=int __afl_selective_coverage = 1;void __afl_coverage_discard();void __afl_coverage_skip();void __afl_coverage_on();void __afl_coverage_off();",
      "-D__AFL_COVERAGE_START_OFF()=int __afl_selective_coverage_start_off = 1;",
      "-D__AFL_COVERAGE_ON()=__afl_coverage_on()",
      "-D__AFL_COVERAGE_OFF()=__afl_coverage_off()",
      "-D__AFL_COVERAGE_DISCARD()=__afl_coverage_discard()",
      "-D__AFL_COVERAGE_SKIP()=__afl_coverage_skip()",
      "-D__AFL_FUZZ_TESTCASE_BUF=(__afl_fuzz_ptr ? __afl_fuzz_ptr : __afl_fuzz_alt_ptr)",
      "-D__AFL_FUZZ_TESTCASE_LEN=(__afl_fuzz_ptr ? *__afl_fuzz_len : (*__afl_fuzz_len = read(0, __afl_fuzz_alt_ptr, 1048576)) == 0xffffffff ? 0 : *__afl_fuzz_len)",
      "-D__AFL_LOOP(_A)=({ static volatile char *_B __attribute__((used));  _B = (char*)\"##SIG_AFL_PERSISTENT##\"; __attribute__((visibility(\"default\"))) int _L(unsigned int) __asm__(\"__afl_persistent_loop\"); _L(_A); })",
      "-D__AFL_INIT()=do { static volatile char *_A __attribute__((used));  _A = (char*)\"##SIG_AFL_DEFER_FORKSRV##\"; __attribute__((visibility(\"default\"))) void _I(void) __asm__(\"__afl_manual_init\"); _I(); } while (0)",
      "-Wno-unused-command-line-argument",
      "-o",
      "tcpbridge-bridge.o",
      "bridge.c"
    ],
    "directory": "/root/dataset_fuzz/tcpreplay-4.5.1/src",
    "file": "/root/dataset_fuzz/tcpreplay-4.5.1/src/bridge.c",
    "output": "/root/dataset_fuzz/tcpreplay-4.5.1/src/tcpbridge-bridge.o"
  },
  {
    "arguments": [
      "/usr/lib/llvm-13/bin/clang",
      "-Wno-unused-command-line-argument",
      "-fno-experimental-new-pass-manager",
      "-Xclang",
      "-load",
      "-Xclang",
      "/usr/bin/../lib/afl//SanitizerCoveragePCGUARD.so",
      "-DHAVE_CONFIG_H",
      "-I.",
      "-I../libopts",
      "-I./..",
      "-DTCPREPLAY",
      "-DTCPLIVEPLAY",
      "-D_U_=__attribute__((unused))",
      "-fsanitize=address",
      "-g",
      "-O1",
      "-Wno-variadic-macros",
      "-Wfatal-errors",
      "-I/usr/include",
      "-c",
      "-g",
      "-funroll-loops",
      "-D__AFL_HAVE_MANUAL_CONTROL=1",
      "-D__AFL_COMPILER=1",
      "-DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION=1",
      "-D__AFL_FUZZ_INIT()=int __afl_sharedmem_fuzzing = 1;extern unsigned int *__afl_fuzz_len;extern unsigned char *__afl_fuzz_ptr;unsigned char __afl_fuzz_alt[1048576];unsigned char *__afl_fuzz_alt_ptr = __afl_fuzz_alt;",
      "-D__AFL_COVERAGE()=int __afl_selective_coverage = 1;void __afl_coverage_discard();void __afl_coverage_skip();void __afl_coverage_on();void __afl_coverage_off();",
      "-D__AFL_COVERAGE_START_OFF()=int __afl_selective_coverage_start_off = 1;",
      "-D__AFL_COVERAGE_ON()=__afl_coverage_on()",
      "-D__AFL_COVERAGE_OFF()=__afl_coverage_off()",
      "-D__AFL_COVERAGE_DISCARD()=__afl_coverage_discard()",
      "-D__AFL_COVERAGE_SKIP()=__afl_coverage_skip()",
      "-D__AFL_FUZZ_TESTCASE_BUF=(__afl_fuzz_ptr ? __afl_fuzz_ptr : __afl_fuzz_alt_ptr)",
      "-D__AFL_FUZZ_TESTCASE_LEN=(__afl_fuzz_ptr ? *__afl_fuzz_len : (*__afl_fuzz_len = read(0, __afl_fuzz_alt_ptr, 1048576)) == 0xffffffff ? 0 : *__afl_fuzz_len)",
      "-D__AFL_LOOP(_A)=({ static volatile char *_B __attribute__((used));  _B = (char*)\"##SIG_AFL_PERSISTENT##\"; __attribute__((visibility(\"default\"))) int _L(unsigned int) __asm__(\"__afl_persistent_loop\"); _L(_A); })",
      "-D__AFL_INIT()=do { static volatile char *_A __attribute__((used));  _A = (char*)\"##SIG_AFL_DEFER_FORKSRV##\"; __attribute__((visibility(\"default\"))) void _I(void) __asm__(\"__afl_manual_init\"); _I(); } while (0)",
      "-Wno-unused-command-line-argument",
      "-o",
      "tcpliveplay-tcpliveplay_opts.o",
      "tcpliveplay_opts.c"
    ],
    "directory": "/root/dataset_fuzz/tcpreplay-4.5.1/src",
    "file": "/root/dataset_fuzz/tcpreplay-4.5.1/src/tcpliveplay_opts.c",
    "output": "/root/dataset_fuzz/tcpreplay-4.5.1/src/tcpliveplay-tcpliveplay_opts.o"
  },
  {
    "arguments": [
      "/usr/lib/llvm-13/bin/clang",
      "-Wno-unused-command-line-argument",
      "-fno-experimental-new-pass-manager",
      "-Xclang",
      "-load",
      "-Xclang",
      "/usr/bin/../lib/afl//SanitizerCoveragePCGUARD.so",
      "-DHAVE_CONFIG_H",
      "-I.",
      "-I../libopts",
      "-I./..",
      "-DTCPREPLAY",
      "-DTCPLIVEPLAY",
      "-D_U_=__attribute__((unused))",
      "-fsanitize=address",
      "-g",
      "-O1",
      "-Wno-variadic-macros",
      "-Wfatal-errors",
      "-I/usr/include",
      "-c",
      "-g",
      "-funroll-loops",
      "-D__AFL_HAVE_MANUAL_CONTROL=1",
      "-D__AFL_COMPILER=1",
      "-DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION=1",
      "-D__AFL_FUZZ_INIT()=int __afl_sharedmem_fuzzing = 1;extern unsigned int *__afl_fuzz_len;extern unsigned char *__afl_fuzz_ptr;unsigned char __afl_fuzz_alt[1048576];unsigned char *__afl_fuzz_alt_ptr = __afl_fuzz_alt;",
      "-D__AFL_COVERAGE()=int __afl_selective_coverage = 1;void __afl_coverage_discard();void __afl_coverage_skip();void __afl_coverage_on();void __afl_coverage_off();",
      "-D__AFL_COVERAGE_START_OFF()=int __afl_selective_coverage_start_off = 1;",
      "-D__AFL_COVERAGE_ON()=__afl_coverage_on()",
      "-D__AFL_COVERAGE_OFF()=__afl_coverage_off()",
      "-D__AFL_COVERAGE_DISCARD()=__afl_coverage_discard()",
      "-D__AFL_COVERAGE_SKIP()=__afl_coverage_skip()",
      "-D__AFL_FUZZ_TESTCASE_BUF=(__afl_fuzz_ptr ? __afl_fuzz_ptr : __afl_fuzz_alt_ptr)",
      "-D__AFL_FUZZ_TESTCASE_LEN=(__afl_fuzz_ptr ? *__afl_fuzz_len : (*__afl_fuzz_len = read(0, __afl_fuzz_alt_ptr, 1048576)) == 0xffffffff ? 0 : *__afl_fuzz_len)",
      "-D__AFL_LOOP(_A)=({ static volatile char *_B __attribute__((used));  _B = (char*)\"##SIG_AFL_PERSISTENT##\"; __attribute__((visibility(\"default\"))) int _L(unsigned int) __asm__(\"__afl_persistent_loop\"); _L(_A); })",
      "-D__AFL_INIT()=do { static volatile char *_A __attribute__((used));  _A = (char*)\"##SIG_AFL_DEFER_FORKSRV##\"; __attribute__((visibility(\"default\"))) void _I(void) __asm__(\"__afl_manual_init\"); _I(); } while (0)",
      "-Wno-unused-command-line-argument",
      "-o",
      "tcpliveplay-tcpliveplay.o",
      "tcpliveplay.c"
    ],
    "directory": "/root/dataset_fuzz/tcpreplay-4.5.1/src",
    "file": "/root/dataset_fuzz/tcpreplay-4.5.1/src/tcpliveplay.c",
    "output": "/root/dataset_fuzz/tcpreplay-4.5.1/src/tcpliveplay-tcpliveplay.o"
  }
]

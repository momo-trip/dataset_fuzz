[
  {
    "arguments": [
      "/usr/lib/llvm-13/bin/clang",
      "-Wno-unused-command-line-argument",
      "-fno-experimental-new-pass-manager",
      "-Xclang",
      "-load",
      "-Xclang",
      "/usr/bin/../lib/afl//SanitizerCoveragePCGUARD.so",
      "-DHAVE_CONFIG_H",
      "-I.",
      "-I..",
      "-I../include",
      "-I../include/speex",
      "-I..",
      "-fsanitize=address",
      "-g",
      "-O1",
      "-fvisibility=hidden",
      "-Wall",
      "-c",
      "-g",
      "-funroll-loops",
      "-D__AFL_HAVE_MANUAL_CONTROL=1",
      "-D__AFL_COMPILER=1",
      "-DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION=1",
      "-D__AFL_FUZZ_INIT()=int __afl_sharedmem_fuzzing = 1;extern unsigned int *__afl_fuzz_len;extern unsigned char *__afl_fuzz_ptr;unsigned char __afl_fuzz_alt[1048576];unsigned char *__afl_fuzz_alt_ptr = __afl_fuzz_alt;",
      "-D__AFL_COVERAGE()=int __afl_selective_coverage = 1;void __afl_coverage_discard();void __afl_coverage_skip();void __afl_coverage_on();void __afl_coverage_off();",
      "-D__AFL_COVERAGE_START_OFF()=int __afl_selective_coverage_start_off = 1;",
      "-D__AFL_COVERAGE_ON()=__afl_coverage_on()",
      "-D__AFL_COVERAGE_OFF()=__afl_coverage_off()",
      "-D__AFL_COVERAGE_DISCARD()=__afl_coverage_discard()",
      "-D__AFL_COVERAGE_SKIP()=__afl_coverage_skip()",
      "-D__AFL_FUZZ_TESTCASE_BUF=(__afl_fuzz_ptr ? __afl_fuzz_ptr : __afl_fuzz_alt_ptr)",
      "-D__AFL_FUZZ_TESTCASE_LEN=(__afl_fuzz_ptr ? *__afl_fuzz_len : (*__afl_fuzz_len = read(0, __afl_fuzz_alt_ptr, 1048576)) == 0xffffffff ? 0 : *__afl_fuzz_len)",
      "-D__AFL_LOOP(_A)=({ static volatile char *_B __attribute__((used));  _B = (char*)\"##SIG_AFL_PERSISTENT##\"; __attribute__((visibility(\"default\"))) int _L(unsigned int) __asm__(\"__afl_persistent_loop\"); _L(_A); })",
      "-D__AFL_INIT()=do { static volatile char *_A __attribute__((used));  _A = (char*)\"##SIG_AFL_DEFER_FORKSRV##\"; __attribute__((visibility(\"default\"))) void _I(void) __asm__(\"__afl_manual_init\"); _I(); } while (0)",
      "-Wno-unused-command-line-argument",
      "-o",
      "testenc.o",
      "testenc.c"
    ],
    "directory": "/root/dataset_fuzz/speex-Speex-1.2.1/libspeex",
    "file": "/root/dataset_fuzz/speex-Speex-1.2.1/libspeex/testenc.c",
    "output": "/root/dataset_fuzz/speex-Speex-1.2.1/libspeex/testenc.o"
  },
  {
    "arguments": [
      "/usr/lib/llvm-13/bin/clang",
      "-Wno-unused-command-line-argument",
      "-fno-experimental-new-pass-manager",
      "-Xclang",
      "-load",
      "-Xclang",
      "/usr/bin/../lib/afl//SanitizerCoveragePCGUARD.so",
      "-DHAVE_CONFIG_H",
      "-I.",
      "-I..",
      "-I../include",
      "-I../include/speex",
      "-I..",
      "-fsanitize=address",
      "-g",
      "-O1",
      "-fvisibility=hidden",
      "-Wall",
      "-c",
      "-fPIC",
      "-DPIC",
      "-g",
      "-funroll-loops",
      "-D__AFL_HAVE_MANUAL_CONTROL=1",
      "-D__AFL_COMPILER=1",
      "-DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION=1",
      "-D__AFL_FUZZ_INIT()=int __afl_sharedmem_fuzzing = 1;extern unsigned int *__afl_fuzz_len;extern unsigned char *__afl_fuzz_ptr;unsigned char __afl_fuzz_alt[1048576];unsigned char *__afl_fuzz_alt_ptr = __afl_fuzz_alt;",
      "-D__AFL_COVERAGE()=int __afl_selective_coverage = 1;void __afl_coverage_discard();void __afl_coverage_skip();void __afl_coverage_on();void __afl_coverage_off();",
      "-D__AFL_COVERAGE_START_OFF()=int __afl_selective_coverage_start_off = 1;",
      "-D__AFL_COVERAGE_ON()=__afl_coverage_on()",
      "-D__AFL_COVERAGE_OFF()=__afl_coverage_off()",
      "-D__AFL_COVERAGE_DISCARD()=__afl_coverage_discard()",
      "-D__AFL_COVERAGE_SKIP()=__afl_coverage_skip()",
      "-D__AFL_FUZZ_TESTCASE_BUF=(__afl_fuzz_ptr ? __afl_fuzz_ptr : __afl_fuzz_alt_ptr)",
      "-D__AFL_FUZZ_TESTCASE_LEN=(__afl_fuzz_ptr ? *__afl_fuzz_len : (*__afl_fuzz_len = read(0, __afl_fuzz_alt_ptr, 1048576)) == 0xffffffff ? 0 : *__afl_fuzz_len)",
      "-D__AFL_LOOP(_A)=({ static volatile char *_B __attribute__((used));  _B = (char*)\"##SIG_AFL_PERSISTENT##\"; __attribute__((visibility(\"default\"))) int _L(unsigned int) __asm__(\"__afl_persistent_loop\"); _L(_A); })",
      "-D__AFL_INIT()=do { static volatile char *_A __attribute__((used));  _A = (char*)\"##SIG_AFL_DEFER_FORKSRV##\"; __attribute__((visibility(\"default\"))) void _I(void) __asm__(\"__afl_manual_init\"); _I(); } while (0)",
      "-Wno-unused-command-line-argument",
      "-o",
      ".libs/cb_search.o",
      "cb_search.c"
    ],
    "directory": "/root/dataset_fuzz/speex-Speex-1.2.1/libspeex",
    "file": "/root/dataset_fuzz/speex-Speex-1.2.1/libspeex/cb_search.c",
    "output": "/root/dataset_fuzz/speex-Speex-1.2.1/libspeex/.libs/cb_search.o"
  },
  {
    "arguments": [
      "/usr/lib/llvm-13/bin/clang",
      "-Wno-unused-command-line-argument",
      "-fno-experimental-new-pass-manager",
      "-Xclang",
      "-load",
      "-Xclang",
      "/usr/bin/../lib/afl//SanitizerCoveragePCGUARD.so",
      "-DHAVE_CONFIG_H",
      "-I.",
      "-I..",
      "-I../include",
      "-I../include/speex",
      "-I..",
      "-fsanitize=address",
      "-g",
      "-O1",
      "-fvisibility=hidden",
      "-Wall",
      "-c",
      "-g",
      "-funroll-loops",
      "-D__AFL_HAVE_MANUAL_CONTROL=1",
      "-D__AFL_COMPILER=1",
      "-DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION=1",
      "-D__AFL_FUZZ_INIT()=int __afl_sharedmem_fuzzing = 1;extern unsigned int *__afl_fuzz_len;extern unsigned char *__afl_fuzz_ptr;unsigned char __afl_fuzz_alt[1048576];unsigned char *__afl_fuzz_alt_ptr = __afl_fuzz_alt;",
      "-D__AFL_COVERAGE()=int __afl_selective_coverage = 1;void __afl_coverage_discard();void __afl_coverage_skip();void __afl_coverage_on();void __afl_coverage_off();",
      "-D__AFL_COVERAGE_START_OFF()=int __afl_selective_coverage_start_off = 1;",
      "-D__AFL_COVERAGE_ON()=__afl_coverage_on()",
      "-D__AFL_COVERAGE_OFF()=__afl_coverage_off()",
      "-D__AFL_COVERAGE_DISCARD()=__afl_coverage_discard()",
      "-D__AFL_COVERAGE_SKIP()=__afl_coverage_skip()",
      "-D__AFL_FUZZ_TESTCASE_BUF=(__afl_fuzz_ptr ? __afl_fuzz_ptr : __afl_fuzz_alt_ptr)",
      "-D__AFL_FUZZ_TESTCASE_LEN=(__afl_fuzz_ptr ? *__afl_fuzz_len : (*__afl_fuzz_len = read(0, __afl_fuzz_alt_ptr, 1048576)) == 0xffffffff ? 0 : *__afl_fuzz_len)",
      "-D__AFL_LOOP(_A)=({ static volatile char *_B __attribute__((used));  _B = (char*)\"##SIG_AFL_PERSISTENT##\"; __attribute__((visibility(\"default\"))) int _L(unsigned int) __asm__(\"__afl_persistent_loop\"); _L(_A); })",
      "-D__AFL_INIT()=do { static volatile char *_A __attribute__((used));  _A = (char*)\"##SIG_AFL_DEFER_FORKSRV##\"; __attribute__((visibility(\"default\"))) void _I(void) __asm__(\"__afl_manual_init\"); _I(); } while (0)",
      "-Wno-unused-command-line-argument",
      "-o",
      "cb_search.o",
      "cb_search.c"
    ],
    "directory": "/root/dataset_fuzz/speex-Speex-1.2.1/libspeex",
    "file": "/root/dataset_fuzz/speex-Speex-1.2.1/libspeex/cb_search.c",
    "output": "/root/dataset_fuzz/speex-Speex-1.2.1/libspeex/cb_search.o"
  },
  {
    "arguments": [
      "/usr/lib/llvm-13/bin/clang",
      "-Wno-unused-command-line-argument",
      "-fno-experimental-new-pass-manager",
      "-Xclang",
      "-load",
      "-Xclang",
      "/usr/bin/../lib/afl//SanitizerCoveragePCGUARD.so",
      "-DHAVE_CONFIG_H",
      "-I.",
      "-I..",
      "-I../include",
      "-I../include/speex",
      "-I..",
      "-fsanitize=address",
      "-g",
      "-O1",
      "-fvisibility=hidden",
      "-Wall",
      "-c",
      "-fPIC",
      "-DPIC",
      "-g",
      "-funroll-loops",
      "-D__AFL_HAVE_MANUAL_CONTROL=1",
      "-D__AFL_COMPILER=1",
      "-DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION=1",
      "-D__AFL_FUZZ_INIT()=int __afl_sharedmem_fuzzing = 1;extern unsigned int *__afl_fuzz_len;extern unsigned char *__afl_fuzz_ptr;unsigned char __afl_fuzz_alt[1048576];unsigned char *__afl_fuzz_alt_ptr = __afl_fuzz_alt;",
      "-D__AFL_COVERAGE()=int __afl_selective_coverage = 1;void __afl_coverage_discard();void __afl_coverage_skip();void __afl_coverage_on();void __afl_coverage_off();",
      "-D__AFL_COVERAGE_START_OFF()=int __afl_selective_coverage_start_off = 1;",
      "-D__AFL_COVERAGE_ON()=__afl_coverage_on()",
      "-D__AFL_COVERAGE_OFF()=__afl_coverage_off()",
      "-D__AFL_COVERAGE_DISCARD()=__afl_coverage_discard()",
      "-D__AFL_COVERAGE_SKIP()=__afl_coverage_skip()",
      "-D__AFL_FUZZ_TESTCASE_BUF=(__afl_fuzz_ptr ? __afl_fuzz_ptr : __afl_fuzz_alt_ptr)",
      "-D__AFL_FUZZ_TESTCASE_LEN=(__afl_fuzz_ptr ? *__afl_fuzz_len : (*__afl_fuzz_len = read(0, __afl_fuzz_alt_ptr, 1048576)) == 0xffffffff ? 0 : *__afl_fuzz_len)",
      "-D__AFL_LOOP(_A)=({ static volatile char *_B __attribute__((used));  _B = (char*)\"##SIG_AFL_PERSISTENT##\"; __attribute__((visibility(\"default\"))) int _L(unsigned int) __asm__(\"__afl_persistent_loop\"); _L(_A); })",
      "-D__AFL_INIT()=do { static volatile char *_A __attribute__((used));  _A = (char*)\"##SIG_AFL_DEFER_FORKSRV##\"; __attribute__((visibility(\"default\"))) void _I(void) __asm__(\"__afl_manual_init\"); _I(); } while (0)",
      "-Wno-unused-command-line-argument",
      "-o",
      ".libs/exc_10_32_table.o",
      "exc_10_32_table.c"
    ],
    "directory": "/root/dataset_fuzz/speex-Speex-1.2.1/libspeex",
    "file": "/root/dataset_fuzz/speex-Speex-1.2.1/libspeex/exc_10_32_table.c",
    "output": "/root/dataset_fuzz/speex-Speex-1.2.1/libspeex/.libs/exc_10_32_table.o"
  },
  {
    "arguments": [
      "/usr/lib/llvm-13/bin/clang",
      "-Wno-unused-command-line-argument",
      "-fno-experimental-new-pass-manager",
      "-Xclang",
      "-load",
      "-Xclang",
      "/usr/bin/../lib/afl//SanitizerCoveragePCGUARD.so",
      "-DHAVE_CONFIG_H",
      "-I.",
      "-I..",
      "-I../include",
      "-I../include/speex",
      "-I..",
      "-fsanitize=address",
      "-g",
      "-O1",
      "-fvisibility=hidden",
      "-Wall",
      "-c",
      "-g",
      "-funroll-loops",
      "-D__AFL_HAVE_MANUAL_CONTROL=1",
      "-D__AFL_COMPILER=1",
      "-DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION=1",
      "-D__AFL_FUZZ_INIT()=int __afl_sharedmem_fuzzing = 1;extern unsigned int *__afl_fuzz_len;extern unsigned char *__afl_fuzz_ptr;unsigned char __afl_fuzz_alt[1048576];unsigned char *__afl_fuzz_alt_ptr = __afl_fuzz_alt;",
      "-D__AFL_COVERAGE()=int __afl_selective_coverage = 1;void __afl_coverage_discard();void __afl_coverage_skip();void __afl_coverage_on();void __afl_coverage_off();",
      "-D__AFL_COVERAGE_START_OFF()=int __afl_selective_coverage_start_off = 1;",
      "-D__AFL_COVERAGE_ON()=__afl_coverage_on()",
      "-D__AFL_COVERAGE_OFF()=__afl_coverage_off()",
      "-D__AFL_COVERAGE_DISCARD()=__afl_coverage_discard()",
      "-D__AFL_COVERAGE_SKIP()=__afl_coverage_skip()",
      "-D__AFL_FUZZ_TESTCASE_BUF=(__afl_fuzz_ptr ? __afl_fuzz_ptr : __afl_fuzz_alt_ptr)",
      "-D__AFL_FUZZ_TESTCASE_LEN=(__afl_fuzz_ptr ? *__afl_fuzz_len : (*__afl_fuzz_len = read(0, __afl_fuzz_alt_ptr, 1048576)) == 0xffffffff ? 0 : *__afl_fuzz_len)",
      "-D__AFL_LOOP(_A)=({ static volatile char *_B __attribute__((used));  _B = (char*)\"##SIG_AFL_PERSISTENT##\"; __attribute__((visibility(\"default\"))) int _L(unsigned int) __asm__(\"__afl_persistent_loop\"); _L(_A); })",
      "-D__AFL_INIT()=do { static volatile char *_A __attribute__((used));  _A = (char*)\"##SIG_AFL_DEFER_FORKSRV##\"; __attribute__((visibility(\"default\"))) void _I(void) __asm__(\"__afl_manual_init\"); _I(); } while (0)",
      "-Wno-unused-command-line-argument",
      "-o",
      "exc_10_32_table.o",
      "exc_10_32_table.c"
    ],
    "directory": "/root/dataset_fuzz/speex-Speex-1.2.1/libspeex",
    "file": "/root/dataset_fuzz/speex-Speex-1.2.1/libspeex/exc_10_32_table.c",
    "output": "/root/dataset_fuzz/speex-Speex-1.2.1/libspeex/exc_10_32_table.o"
  },
  {
    "arguments": [
      "/usr/lib/llvm-13/bin/clang",
      "-Wno-unused-command-line-argument",
      "-fno-experimental-new-pass-manager",
      "-Xclang",
      "-load",
      "-Xclang",
      "/usr/bin/../lib/afl//SanitizerCoveragePCGUARD.so",
      "-DHAVE_CONFIG_H",
      "-I.",
      "-I..",
      "-I../include",
      "-I../include/speex",
      "-I..",
      "-fsanitize=address",
      "-g",
      "-O1",
      "-fvisibility=hidden",
      "-Wall",
      "-c",
      "-fPIC",
      "-DPIC",
      "-g",
      "-funroll-loops",
      "-D__AFL_HAVE_MANUAL_CONTROL=1",
      "-D__AFL_COMPILER=1",
      "-DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION=1",
      "-D__AFL_FUZZ_INIT()=int __afl_sharedmem_fuzzing = 1;extern unsigned int *__afl_fuzz_len;extern unsigned char *__afl_fuzz_ptr;unsigned char __afl_fuzz_alt[1048576];unsigned char *__afl_fuzz_alt_ptr = __afl_fuzz_alt;",
      "-D__AFL_COVERAGE()=int __afl_selective_coverage = 1;void __afl_coverage_discard();void __afl_coverage_skip();void __afl_coverage_on();void __afl_coverage_off();",
      "-D__AFL_COVERAGE_START_OFF()=int __afl_selective_coverage_start_off = 1;",
      "-D__AFL_COVERAGE_ON()=__afl_coverage_on()",
      "-D__AFL_COVERAGE_OFF()=__afl_coverage_off()",
      "-D__AFL_COVERAGE_DISCARD()=__afl_coverage_discard()",
      "-D__AFL_COVERAGE_SKIP()=__afl_coverage_skip()",
      "-D__AFL_FUZZ_TESTCASE_BUF=(__afl_fuzz_ptr ? __afl_fuzz_ptr : __afl_fuzz_alt_ptr)",
      "-D__AFL_FUZZ_TESTCASE_LEN=(__afl_fuzz_ptr ? *__afl_fuzz_len : (*__afl_fuzz_len = read(0, __afl_fuzz_alt_ptr, 1048576)) == 0xffffffff ? 0 : *__afl_fuzz_len)",
      "-D__AFL_LOOP(_A)=({ static volatile char *_B __attribute__((used));  _B = (char*)\"##SIG_AFL_PERSISTENT##\"; __attribute__((visibility(\"default\"))) int _L(unsigned int) __asm__(\"__afl_persistent_loop\"); _L(_A); })",
      "-D__AFL_INIT()=do { static volatile char *_A __attribute__((used));  _A = (char*)\"##SIG_AFL_DEFER_FORKSRV##\"; __attribute__((visibility(\"default\"))) void _I(void) __asm__(\"__afl_manual_init\"); _I(); } while (0)",
      "-Wno-unused-command-line-argument",
      "-o",
      ".libs/exc_8_128_table.o",
      "exc_8_128_table.c"
    ],
    "directory": "/root/dataset_fuzz/speex-Speex-1.2.1/libspeex",
    "file": "/root/dataset_fuzz/speex-Speex-1.2.1/libspeex/exc_8_128_table.c",
    "output": "/root/dataset_fuzz/speex-Speex-1.2.1/libspeex/.libs/exc_8_128_table.o"
  },
  {
    "arguments": [
      "/usr/lib/llvm-13/bin/clang",
      "-Wno-unused-command-line-argument",
      "-fno-experimental-new-pass-manager",
      "-Xclang",
      "-load",
      "-Xclang",
      "/usr/bin/../lib/afl//SanitizerCoveragePCGUARD.so",
      "-DHAVE_CONFIG_H",
      "-I.",
      "-I..",
      "-I../include",
      "-I../include/speex",
      "-I..",
      "-fsanitize=address",
      "-g",
      "-O1",
      "-fvisibility=hidden",
      "-Wall",
      "-c",
      "-g",
      "-funroll-loops",
      "-D__AFL_HAVE_MANUAL_CONTROL=1",
      "-D__AFL_COMPILER=1",
      "-DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION=1",
      "-D__AFL_FUZZ_INIT()=int __afl_sharedmem_fuzzing = 1;extern unsigned int *__afl_fuzz_len;extern unsigned char *__afl_fuzz_ptr;unsigned char __afl_fuzz_alt[1048576];unsigned char *__afl_fuzz_alt_ptr = __afl_fuzz_alt;",
      "-D__AFL_COVERAGE()=int __afl_selective_coverage = 1;void __afl_coverage_discard();void __afl_coverage_skip();void __afl_coverage_on();void __afl_coverage_off();",
      "-D__AFL_COVERAGE_START_OFF()=int __afl_selective_coverage_start_off = 1;",
      "-D__AFL_COVERAGE_ON()=__afl_coverage_on()",
      "-D__AFL_COVERAGE_OFF()=__afl_coverage_off()",
      "-D__AFL_COVERAGE_DISCARD()=__afl_coverage_discard()",
      "-D__AFL_COVERAGE_SKIP()=__afl_coverage_skip()",
      "-D__AFL_FUZZ_TESTCASE_BUF=(__afl_fuzz_ptr ? __afl_fuzz_ptr : __afl_fuzz_alt_ptr)",
      "-D__AFL_FUZZ_TESTCASE_LEN=(__afl_fuzz_ptr ? *__afl_fuzz_len : (*__afl_fuzz_len = read(0, __afl_fuzz_alt_ptr, 1048576)) == 0xffffffff ? 0 : *__afl_fuzz_len)",
      "-D__AFL_LOOP(_A)=({ static volatile char *_B __attribute__((used));  _B = (char*)\"##SIG_AFL_PERSISTENT##\"; __attribute__((visibility(\"default\"))) int _L(unsigned int) __asm__(\"__afl_persistent_loop\"); _L(_A); })",
      "-D__AFL_INIT()=do { static volatile char *_A __attribute__((used));  _A = (char*)\"##SIG_AFL_DEFER_FORKSRV##\"; __attribute__((visibility(\"default\"))) void _I(void) __asm__(\"__afl_manual_init\"); _I(); } while (0)",
      "-Wno-unused-command-line-argument",
      "-o",
      "exc_8_128_table.o",
      "exc_8_128_table.c"
    ],
    "directory": "/root/dataset_fuzz/speex-Speex-1.2.1/libspeex",
    "file": "/root/dataset_fuzz/speex-Speex-1.2.1/libspeex/exc_8_128_table.c",
    "output": "/root/dataset_fuzz/speex-Speex-1.2.1/libspeex/exc_8_128_table.o"
  },
  {
    "arguments": [
      "/usr/lib/llvm-13/bin/clang",
      "-Wno-unused-command-line-argument",
      "-fno-experimental-new-pass-manager",
      "-Xclang",
      "-load",
      "-Xclang",
      "/usr/bin/../lib/afl//SanitizerCoveragePCGUARD.so",
      "-DHAVE_CONFIG_H",
      "-I.",
      "-I..",
      "-I../include",
      "-I../include/speex",
      "-I..",
      "-fsanitize=address",
      "-g",
      "-O1",
      "-fvisibility=hidden",
      "-Wall",
      "-c",
      "-fPIC",
      "-DPIC",
      "-g",
      "-funroll-loops",
      "-D__AFL_HAVE_MANUAL_CONTROL=1",
      "-D__AFL_COMPILER=1",
      "-DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION=1",
      "-D__AFL_FUZZ_INIT()=int __afl_sharedmem_fuzzing = 1;extern unsigned int *__afl_fuzz_len;extern unsigned char *__afl_fuzz_ptr;unsigned char __afl_fuzz_alt[1048576];unsigned char *__afl_fuzz_alt_ptr = __afl_fuzz_alt;",
      "-D__AFL_COVERAGE()=int __afl_selective_coverage = 1;void __afl_coverage_discard();void __afl_coverage_skip();void __afl_coverage_on();void __afl_coverage_off();",
      "-D__AFL_COVERAGE_START_OFF()=int __afl_selective_coverage_start_off = 1;",
      "-D__AFL_COVERAGE_ON()=__afl_coverage_on()",
      "-D__AFL_COVERAGE_OFF()=__afl_coverage_off()",
      "-D__AFL_COVERAGE_DISCARD()=__afl_coverage_discard()",
      "-D__AFL_COVERAGE_SKIP()=__afl_coverage_skip()",
      "-D__AFL_FUZZ_TESTCASE_BUF=(__afl_fuzz_ptr ? __afl_fuzz_ptr : __afl_fuzz_alt_ptr)",
      "-D__AFL_FUZZ_TESTCASE_LEN=(__afl_fuzz_ptr ? *__afl_fuzz_len : (*__afl_fuzz_len = read(0, __afl_fuzz_alt_ptr, 1048576)) == 0xffffffff ? 0 : *__afl_fuzz_len)",
      "-D__AFL_LOOP(_A)=({ static volatile char *_B __attribute__((used));  _B = (char*)\"##SIG_AFL_PERSISTENT##\"; __attribute__((visibility(\"default\"))) int _L(unsigned int) __asm__(\"__afl_persistent_loop\"); _L(_A); })",
      "-D__AFL_INIT()=do { static volatile char *_A __attribute__((used));  _A = (char*)\"##SIG_AFL_DEFER_FORKSRV##\"; __attribute__((visibility(\"default\"))) void _I(void) __asm__(\"__afl_manual_init\"); _I(); } while (0)",
      "-Wno-unused-command-line-argument",
      "-o",
      ".libs/filters.o",
      "filters.c"
    ],
    "directory": "/root/dataset_fuzz/speex-Speex-1.2.1/libspeex",
    "file": "/root/dataset_fuzz/speex-Speex-1.2.1/libspeex/filters.c",
    "output": "/root/dataset_fuzz/speex-Speex-1.2.1/libspeex/.libs/filters.o"
  },
  {
    "arguments": [
      "/usr/lib/llvm-13/bin/clang",
      "-Wno-unused-command-line-argument",
      "-fno-experimental-new-pass-manager",
      "-Xclang",
      "-load",
      "-Xclang",
      "/usr/bin/../lib/afl//SanitizerCoveragePCGUARD.so",
      "-DHAVE_CONFIG_H",
      "-I.",
      "-I..",
      "-I../include",
      "-I../include/speex",
      "-I..",
      "-fsanitize=address",
      "-g",
      "-O1",
      "-fvisibility=hidden",
      "-Wall",
      "-c",
      "-g",
      "-funroll-loops",
      "-D__AFL_HAVE_MANUAL_CONTROL=1",
      "-D__AFL_COMPILER=1",
      "-DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION=1",
      "-D__AFL_FUZZ_INIT()=int __afl_sharedmem_fuzzing = 1;extern unsigned int *__afl_fuzz_len;extern unsigned char *__afl_fuzz_ptr;unsigned char __afl_fuzz_alt[1048576];unsigned char *__afl_fuzz_alt_ptr = __afl_fuzz_alt;",
      "-D__AFL_COVERAGE()=int __afl_selective_coverage = 1;void __afl_coverage_discard();void __afl_coverage_skip();void __afl_coverage_on();void __afl_coverage_off();",
      "-D__AFL_COVERAGE_START_OFF()=int __afl_selective_coverage_start_off = 1;",
      "-D__AFL_COVERAGE_ON()=__afl_coverage_on()",
      "-D__AFL_COVERAGE_OFF()=__afl_coverage_off()",
      "-D__AFL_COVERAGE_DISCARD()=__afl_coverage_discard()",
      "-D__AFL_COVERAGE_SKIP()=__afl_coverage_skip()",
      "-D__AFL_FUZZ_TESTCASE_BUF=(__afl_fuzz_ptr ? __afl_fuzz_ptr : __afl_fuzz_alt_ptr)",
      "-D__AFL_FUZZ_TESTCASE_LEN=(__afl_fuzz_ptr ? *__afl_fuzz_len : (*__afl_fuzz_len = read(0, __afl_fuzz_alt_ptr, 1048576)) == 0xffffffff ? 0 : *__afl_fuzz_len)",
      "-D__AFL_LOOP(_A)=({ static volatile char *_B __attribute__((used));  _B = (char*)\"##SIG_AFL_PERSISTENT##\"; __attribute__((visibility(\"default\"))) int _L(unsigned int) __asm__(\"__afl_persistent_loop\"); _L(_A); })",
      "-D__AFL_INIT()=do { static volatile char *_A __attribute__((used));  _A = (char*)\"##SIG_AFL_DEFER_FORKSRV##\"; __attribute__((visibility(\"default\"))) void _I(void) __asm__(\"__afl_manual_init\"); _I(); } while (0)",
      "-Wno-unused-command-line-argument",
      "-o",
      "filters.o",
      "filters.c"
    ],
    "directory": "/root/dataset_fuzz/speex-Speex-1.2.1/libspeex",
    "file": "/root/dataset_fuzz/speex-Speex-1.2.1/libspeex/filters.c",
    "output": "/root/dataset_fuzz/speex-Speex-1.2.1/libspeex/filters.o"
  },
  {
    "arguments": [
      "/usr/lib/llvm-13/bin/clang",
      "-Wno-unused-command-line-argument",
      "-fno-experimental-new-pass-manager",
      "-Xclang",
      "-load",
      "-Xclang",
      "/usr/bin/../lib/afl//SanitizerCoveragePCGUARD.so",
      "-DHAVE_CONFIG_H",
      "-I.",
      "-I..",
      "-I../include",
      "-I../include/speex",
      "-I..",
      "-fsanitize=address",
      "-g",
      "-O1",
      "-fvisibility=hidden",
      "-Wall",
      "-c",
      "-fPIC",
      "-DPIC",
      "-g",
      "-funroll-loops",
      "-D__AFL_HAVE_MANUAL_CONTROL=1",
      "-D__AFL_COMPILER=1",
      "-DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION=1",
      "-D__AFL_FUZZ_INIT()=int __afl_sharedmem_fuzzing = 1;extern unsigned int *__afl_fuzz_len;extern unsigned char *__afl_fuzz_ptr;unsigned char __afl_fuzz_alt[1048576];unsigned char *__afl_fuzz_alt_ptr = __afl_fuzz_alt;",
      "-D__AFL_COVERAGE()=int __afl_selective_coverage = 1;void __afl_coverage_discard();void __afl_coverage_skip();void __afl_coverage_on();void __afl_coverage_off();",
      "-D__AFL_COVERAGE_START_OFF()=int __afl_selective_coverage_start_off = 1;",
      "-D__AFL_COVERAGE_ON()=__afl_coverage_on()",
      "-D__AFL_COVERAGE_OFF()=__afl_coverage_off()",
      "-D__AFL_COVERAGE_DISCARD()=__afl_coverage_discard()",
      "-D__AFL_COVERAGE_SKIP()=__afl_coverage_skip()",
      "-D__AFL_FUZZ_TESTCASE_BUF=(__afl_fuzz_ptr ? __afl_fuzz_ptr : __afl_fuzz_alt_ptr)",
      "-D__AFL_FUZZ_TESTCASE_LEN=(__afl_fuzz_ptr ? *__afl_fuzz_len : (*__afl_fuzz_len = read(0, __afl_fuzz_alt_ptr, 1048576)) == 0xffffffff ? 0 : *__afl_fuzz_len)",
      "-D__AFL_LOOP(_A)=({ static volatile char *_B __attribute__((used));  _B = (char*)\"##SIG_AFL_PERSISTENT##\"; __attribute__((visibility(\"default\"))) int _L(unsigned int) __asm__(\"__afl_persistent_loop\"); _L(_A); })",
      "-D__AFL_INIT()=do { static volatile char *_A __attribute__((used));  _A = (char*)\"##SIG_AFL_DEFER_FORKSRV##\"; __attribute__((visibility(\"default\"))) void _I(void) __asm__(\"__afl_manual_init\"); _I(); } while (0)",
      "-Wno-unused-command-line-argument",
      "-o",
      ".libs/gain_table.o",
      "gain_table.c"
    ],
    "directory": "/root/dataset_fuzz/speex-Speex-1.2.1/libspeex",
    "file": "/root/dataset_fuzz/speex-Speex-1.2.1/libspeex/gain_table.c",
    "output": "/root/dataset_fuzz/speex-Speex-1.2.1/libspeex/.libs/gain_table.o"
  },
  {
    "arguments": [
      "/usr/lib/llvm-13/bin/clang",
      "-Wno-unused-command-line-argument",
      "-fno-experimental-new-pass-manager",
      "-Xclang",
      "-load",
      "-Xclang",
      "/usr/bin/../lib/afl//SanitizerCoveragePCGUARD.so",
      "-DHAVE_CONFIG_H",
      "-I.",
      "-I..",
      "-I../include",
      "-I../include/speex",
      "-I..",
      "-fsanitize=address",
      "-g",
      "-O1",
      "-fvisibility=hidden",
      "-Wall",
      "-c",
      "-g",
      "-funroll-loops",
      "-D__AFL_HAVE_MANUAL_CONTROL=1",
      "-D__AFL_COMPILER=1",
      "-DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION=1",
      "-D__AFL_FUZZ_INIT()=int __afl_sharedmem_fuzzing = 1;extern unsigned int *__afl_fuzz_len;extern unsigned char *__afl_fuzz_ptr;unsigned char __afl_fuzz_alt[1048576];unsigned char *__afl_fuzz_alt_ptr = __afl_fuzz_alt;",
      "-D__AFL_COVERAGE()=int __afl_selective_coverage = 1;void __afl_coverage_discard();void __afl_coverage_skip();void __afl_coverage_on();void __afl_coverage_off();",
      "-D__AFL_COVERAGE_START_OFF()=int __afl_selective_coverage_start_off = 1;",
      "-D__AFL_COVERAGE_ON()=__afl_coverage_on()",
      "-D__AFL_COVERAGE_OFF()=__afl_coverage_off()",
      "-D__AFL_COVERAGE_DISCARD()=__afl_coverage_discard()",
      "-D__AFL_COVERAGE_SKIP()=__afl_coverage_skip()",
      "-D__AFL_FUZZ_TESTCASE_BUF=(__afl_fuzz_ptr ? __afl_fuzz_ptr : __afl_fuzz_alt_ptr)",
      "-D__AFL_FUZZ_TESTCASE_LEN=(__afl_fuzz_ptr ? *__afl_fuzz_len : (*__afl_fuzz_len = read(0, __afl_fuzz_alt_ptr, 1048576)) == 0xffffffff ? 0 : *__afl_fuzz_len)",
      "-D__AFL_LOOP(_A)=({ static volatile char *_B __attribute__((used));  _B = (char*)\"##SIG_AFL_PERSISTENT##\"; __attribute__((visibility(\"default\"))) int _L(unsigned int) __asm__(\"__afl_persistent_loop\"); _L(_A); })",
      "-D__AFL_INIT()=do { static volatile char *_A __attribute__((used));  _A = (char*)\"##SIG_AFL_DEFER_FORKSRV##\"; __attribute__((visibility(\"default\"))) void _I(void) __asm__(\"__afl_manual_init\"); _I(); } while (0)",
      "-Wno-unused-command-line-argument",
      "-o",
      "gain_table.o",
      "gain_table.c"
    ],
    "directory": "/root/dataset_fuzz/speex-Speex-1.2.1/libspeex",
    "file": "/root/dataset_fuzz/speex-Speex-1.2.1/libspeex/gain_table.c",
    "output": "/root/dataset_fuzz/speex-Speex-1.2.1/libspeex/gain_table.o"
  },
  {
    "arguments": [
      "/usr/lib/llvm-13/bin/clang",
      "-Wno-unused-command-line-argument",
      "-fno-experimental-new-pass-manager",
      "-Xclang",
      "-load",
      "-Xclang",
      "/usr/bin/../lib/afl//SanitizerCoveragePCGUARD.so",
      "-DHAVE_CONFIG_H",
      "-I.",
      "-I..",
      "-I../include",
      "-I../include/speex",
      "-I..",
      "-fsanitize=address",
      "-g",
      "-O1",
      "-fvisibility=hidden",
      "-Wall",
      "-c",
      "-fPIC",
      "-DPIC",
      "-g",
      "-funroll-loops",
      "-D__AFL_HAVE_MANUAL_CONTROL=1",
      "-D__AFL_COMPILER=1",
      "-DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION=1",
      "-D__AFL_FUZZ_INIT()=int __afl_sharedmem_fuzzing = 1;extern unsigned int *__afl_fuzz_len;extern unsigned char *__afl_fuzz_ptr;unsigned char __afl_fuzz_alt[1048576];unsigned char *__afl_fuzz_alt_ptr = __afl_fuzz_alt;",
      "-D__AFL_COVERAGE()=int __afl_selective_coverage = 1;void __afl_coverage_discard();void __afl_coverage_skip();void __afl_coverage_on();void __afl_coverage_off();",
      "-D__AFL_COVERAGE_START_OFF()=int __afl_selective_coverage_start_off = 1;",
      "-D__AFL_COVERAGE_ON()=__afl_coverage_on()",
      "-D__AFL_COVERAGE_OFF()=__afl_coverage_off()",
      "-D__AFL_COVERAGE_DISCARD()=__afl_coverage_discard()",
      "-D__AFL_COVERAGE_SKIP()=__afl_coverage_skip()",
      "-D__AFL_FUZZ_TESTCASE_BUF=(__afl_fuzz_ptr ? __afl_fuzz_ptr : __afl_fuzz_alt_ptr)",
      "-D__AFL_FUZZ_TESTCASE_LEN=(__afl_fuzz_ptr ? *__afl_fuzz_len : (*__afl_fuzz_len = read(0, __afl_fuzz_alt_ptr, 1048576)) == 0xffffffff ? 0 : *__afl_fuzz_len)",
      "-D__AFL_LOOP(_A)=({ static volatile char *_B __attribute__((used));  _B = (char*)\"##SIG_AFL_PERSISTENT##\"; __attribute__((visibility(\"default\"))) int _L(unsigned int) __asm__(\"__afl_persistent_loop\"); _L(_A); })",
      "-D__AFL_INIT()=do { static volatile char *_A __attribute__((used));  _A = (char*)\"##SIG_AFL_DEFER_FORKSRV##\"; __attribute__((visibility(\"default\"))) void _I(void) __asm__(\"__afl_manual_init\"); _I(); } while (0)",
      "-Wno-unused-command-line-argument",
      "-o",
      ".libs/hexc_table.o",
      "hexc_table.c"
    ],
    "directory": "/root/dataset_fuzz/speex-Speex-1.2.1/libspeex",
    "file": "/root/dataset_fuzz/speex-Speex-1.2.1/libspeex/hexc_table.c",
    "output": "/root/dataset_fuzz/speex-Speex-1.2.1/libspeex/.libs/hexc_table.o"
  },
  {
    "arguments": [
      "/usr/lib/llvm-13/bin/clang",
      "-Wno-unused-command-line-argument",
      "-fno-experimental-new-pass-manager",
      "-Xclang",
      "-load",
      "-Xclang",
      "/usr/bin/../lib/afl//SanitizerCoveragePCGUARD.so",
      "-DHAVE_CONFIG_H",
      "-I.",
      "-I..",
      "-I../include",
      "-I../include/speex",
      "-I..",
      "-fsanitize=address",
      "-g",
      "-O1",
      "-fvisibility=hidden",
      "-Wall",
      "-c",
      "-g",
      "-funroll-loops",
      "-D__AFL_HAVE_MANUAL_CONTROL=1",
      "-D__AFL_COMPILER=1",
      "-DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION=1",
      "-D__AFL_FUZZ_INIT()=int __afl_sharedmem_fuzzing = 1;extern unsigned int *__afl_fuzz_len;extern unsigned char *__afl_fuzz_ptr;unsigned char __afl_fuzz_alt[1048576];unsigned char *__afl_fuzz_alt_ptr = __afl_fuzz_alt;",
      "-D__AFL_COVERAGE()=int __afl_selective_coverage = 1;void __afl_coverage_discard();void __afl_coverage_skip();void __afl_coverage_on();void __afl_coverage_off();",
      "-D__AFL_COVERAGE_START_OFF()=int __afl_selective_coverage_start_off = 1;",
      "-D__AFL_COVERAGE_ON()=__afl_coverage_on()",
      "-D__AFL_COVERAGE_OFF()=__afl_coverage_off()",
      "-D__AFL_COVERAGE_DISCARD()=__afl_coverage_discard()",
      "-D__AFL_COVERAGE_SKIP()=__afl_coverage_skip()",
      "-D__AFL_FUZZ_TESTCASE_BUF=(__afl_fuzz_ptr ? __afl_fuzz_ptr : __afl_fuzz_alt_ptr)",
      "-D__AFL_FUZZ_TESTCASE_LEN=(__afl_fuzz_ptr ? *__afl_fuzz_len : (*__afl_fuzz_len = read(0, __afl_fuzz_alt_ptr, 1048576)) == 0xffffffff ? 0 : *__afl_fuzz_len)",
      "-D__AFL_LOOP(_A)=({ static volatile char *_B __attribute__((used));  _B = (char*)\"##SIG_AFL_PERSISTENT##\"; __attribute__((visibility(\"default\"))) int _L(unsigned int) __asm__(\"__afl_persistent_loop\"); _L(_A); })",
      "-D__AFL_INIT()=do { static volatile char *_A __attribute__((used));  _A = (char*)\"##SIG_AFL_DEFER_FORKSRV##\"; __attribute__((visibility(\"default\"))) void _I(void) __asm__(\"__afl_manual_init\"); _I(); } while (0)",
      "-Wno-unused-command-line-argument",
      "-o",
      "hexc_table.o",
      "hexc_table.c"
    ],
    "directory": "/root/dataset_fuzz/speex-Speex-1.2.1/libspeex",
    "file": "/root/dataset_fuzz/speex-Speex-1.2.1/libspeex/hexc_table.c",
    "output": "/root/dataset_fuzz/speex-Speex-1.2.1/libspeex/hexc_table.o"
  },
  {
    "arguments": [
      "/usr/lib/llvm-13/bin/clang",
      "-Wno-unused-command-line-argument",
      "-fno-experimental-new-pass-manager",
      "-Xclang",
      "-load",
      "-Xclang",
      "/usr/bin/../lib/afl//SanitizerCoveragePCGUARD.so",
      "-DHAVE_CONFIG_H",
      "-I.",
      "-I..",
      "-I../include",
      "-I../include/speex",
      "-I..",
      "-fsanitize=address",
      "-g",
      "-O1",
      "-fvisibility=hidden",
      "-Wall",
      "-c",
      "-fPIC",
      "-DPIC",
      "-g",
      "-funroll-loops",
      "-D__AFL_HAVE_MANUAL_CONTROL=1",
      "-D__AFL_COMPILER=1",
      "-DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION=1",
      "-D__AFL_FUZZ_INIT()=int __afl_sharedmem_fuzzing = 1;extern unsigned int *__afl_fuzz_len;extern unsigned char *__afl_fuzz_ptr;unsigned char __afl_fuzz_alt[1048576];unsigned char *__afl_fuzz_alt_ptr = __afl_fuzz_alt;",
      "-D__AFL_COVERAGE()=int __afl_selective_coverage = 1;void __afl_coverage_discard();void __afl_coverage_skip();void __afl_coverage_on();void __afl_coverage_off();",
      "-D__AFL_COVERAGE_START_OFF()=int __afl_selective_coverage_start_off = 1;",
      "-D__AFL_COVERAGE_ON()=__afl_coverage_on()",
      "-D__AFL_COVERAGE_OFF()=__afl_coverage_off()",
      "-D__AFL_COVERAGE_DISCARD()=__afl_coverage_discard()",
      "-D__AFL_COVERAGE_SKIP()=__afl_coverage_skip()",
      "-D__AFL_FUZZ_TESTCASE_BUF=(__afl_fuzz_ptr ? __afl_fuzz_ptr : __afl_fuzz_alt_ptr)",
      "-D__AFL_FUZZ_TESTCASE_LEN=(__afl_fuzz_ptr ? *__afl_fuzz_len : (*__afl_fuzz_len = read(0, __afl_fuzz_alt_ptr, 1048576)) == 0xffffffff ? 0 : *__afl_fuzz_len)",
      "-D__AFL_LOOP(_A)=({ static volatile char *_B __attribute__((used));  _B = (char*)\"##SIG_AFL_PERSISTENT##\"; __attribute__((visibility(\"default\"))) int _L(unsigned int) __asm__(\"__afl_persistent_loop\"); _L(_A); })",
      "-D__AFL_INIT()=do { static volatile char *_A __attribute__((used));  _A = (char*)\"##SIG_AFL_DEFER_FORKSRV##\"; __attribute__((visibility(\"default\"))) void _I(void) __asm__(\"__afl_manual_init\"); _I(); } while (0)",
      "-Wno-unused-command-line-argument",
      "-o",
      ".libs/high_lsp_tables.o",
      "high_lsp_tables.c"
    ],
    "directory": "/root/dataset_fuzz/speex-Speex-1.2.1/libspeex",
    "file": "/root/dataset_fuzz/speex-Speex-1.2.1/libspeex/high_lsp_tables.c",
    "output": "/root/dataset_fuzz/speex-Speex-1.2.1/libspeex/.libs/high_lsp_tables.o"
  },
  {
    "arguments": [
      "/usr/lib/llvm-13/bin/clang",
      "-Wno-unused-command-line-argument",
      "-fno-experimental-new-pass-manager",
      "-Xclang",
      "-load",
      "-Xclang",
      "/usr/bin/../lib/afl//SanitizerCoveragePCGUARD.so",
      "-DHAVE_CONFIG_H",
      "-I.",
      "-I..",
      "-I../include",
      "-I../include/speex",
      "-I..",
      "-fsanitize=address",
      "-g",
      "-O1",
      "-fvisibility=hidden",
      "-Wall",
      "-c",
      "-g",
      "-funroll-loops",
      "-D__AFL_HAVE_MANUAL_CONTROL=1",
      "-D__AFL_COMPILER=1",
      "-DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION=1",
      "-D__AFL_FUZZ_INIT()=int __afl_sharedmem_fuzzing = 1;extern unsigned int *__afl_fuzz_len;extern unsigned char *__afl_fuzz_ptr;unsigned char __afl_fuzz_alt[1048576];unsigned char *__afl_fuzz_alt_ptr = __afl_fuzz_alt;",
      "-D__AFL_COVERAGE()=int __afl_selective_coverage = 1;void __afl_coverage_discard();void __afl_coverage_skip();void __afl_coverage_on();void __afl_coverage_off();",
      "-D__AFL_COVERAGE_START_OFF()=int __afl_selective_coverage_start_off = 1;",
      "-D__AFL_COVERAGE_ON()=__afl_coverage_on()",
      "-D__AFL_COVERAGE_OFF()=__afl_coverage_off()",
      "-D__AFL_COVERAGE_DISCARD()=__afl_coverage_discard()",
      "-D__AFL_COVERAGE_SKIP()=__afl_coverage_skip()",
      "-D__AFL_FUZZ_TESTCASE_BUF=(__afl_fuzz_ptr ? __afl_fuzz_ptr : __afl_fuzz_alt_ptr)",
      "-D__AFL_FUZZ_TESTCASE_LEN=(__afl_fuzz_ptr ? *__afl_fuzz_len : (*__afl_fuzz_len = read(0, __afl_fuzz_alt_ptr, 1048576)) == 0xffffffff ? 0 : *__afl_fuzz_len)",
      "-D__AFL_LOOP(_A)=({ static volatile char *_B __attribute__((used));  _B = (char*)\"##SIG_AFL_PERSISTENT##\"; __attribute__((visibility(\"default\"))) int _L(unsigned int) __asm__(\"__afl_persistent_loop\"); _L(_A); })",
      "-D__AFL_INIT()=do { static volatile char *_A __attribute__((used));  _A = (char*)\"##SIG_AFL_DEFER_FORKSRV##\"; __attribute__((visibility(\"default\"))) void _I(void) __asm__(\"__afl_manual_init\"); _I(); } while (0)",
      "-Wno-unused-command-line-argument",
      "-o",
      "high_lsp_tables.o",
      "high_lsp_tables.c"
    ],
    "directory": "/root/dataset_fuzz/speex-Speex-1.2.1/libspeex",
    "file": "/root/dataset_fuzz/speex-Speex-1.2.1/libspeex/high_lsp_tables.c",
    "output": "/root/dataset_fuzz/speex-Speex-1.2.1/libspeex/high_lsp_tables.o"
  },
  {
    "arguments": [
      "/usr/lib/llvm-13/bin/clang",
      "-Wno-unused-command-line-argument",
      "-fno-experimental-new-pass-manager",
      "-Xclang",
      "-load",
      "-Xclang",
      "/usr/bin/../lib/afl//SanitizerCoveragePCGUARD.so",
      "-DHAVE_CONFIG_H",
      "-I.",
      "-I..",
      "-I../include",
      "-I../include/speex",
      "-I..",
      "-fsanitize=address",
      "-g",
      "-O1",
      "-fvisibility=hidden",
      "-Wall",
      "-c",
      "-fPIC",
      "-DPIC",
      "-g",
      "-funroll-loops",
      "-D__AFL_HAVE_MANUAL_CONTROL=1",
      "-D__AFL_COMPILER=1",
      "-DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION=1",
      "-D__AFL_FUZZ_INIT()=int __afl_sharedmem_fuzzing = 1;extern unsigned int *__afl_fuzz_len;extern unsigned char *__afl_fuzz_ptr;unsigned char __afl_fuzz_alt[1048576];unsigned char *__afl_fuzz_alt_ptr = __afl_fuzz_alt;",
      "-D__AFL_COVERAGE()=int __afl_selective_coverage = 1;void __afl_coverage_discard();void __afl_coverage_skip();void __afl_coverage_on();void __afl_coverage_off();",
      "-D__AFL_COVERAGE_START_OFF()=int __afl_selective_coverage_start_off = 1;",
      "-D__AFL_COVERAGE_ON()=__afl_coverage_on()",
      "-D__AFL_COVERAGE_OFF()=__afl_coverage_off()",
      "-D__AFL_COVERAGE_DISCARD()=__afl_coverage_discard()",
      "-D__AFL_COVERAGE_SKIP()=__afl_coverage_skip()",
      "-D__AFL_FUZZ_TESTCASE_BUF=(__afl_fuzz_ptr ? __afl_fuzz_ptr : __afl_fuzz_alt_ptr)",
      "-D__AFL_FUZZ_TESTCASE_LEN=(__afl_fuzz_ptr ? *__afl_fuzz_len : (*__afl_fuzz_len = read(0, __afl_fuzz_alt_ptr, 1048576)) == 0xffffffff ? 0 : *__afl_fuzz_len)",
      "-D__AFL_LOOP(_A)=({ static volatile char *_B __attribute__((used));  _B = (char*)\"##SIG_AFL_PERSISTENT##\"; __attribute__((visibility(\"default\"))) int _L(unsigned int) __asm__(\"__afl_persistent_loop\"); _L(_A); })",
      "-D__AFL_INIT()=do { static volatile char *_A __attribute__((used));  _A = (char*)\"##SIG_AFL_DEFER_FORKSRV##\"; __attribute__((visibility(\"default\"))) void _I(void) __asm__(\"__afl_manual_init\"); _I(); } while (0)",
      "-Wno-unused-command-line-argument",
      "-o",
      ".libs/lsp.o",
      "lsp.c"
    ],
    "directory": "/root/dataset_fuzz/speex-Speex-1.2.1/libspeex",
    "file": "/root/dataset_fuzz/speex-Speex-1.2.1/libspeex/lsp.c",
    "output": "/root/dataset_fuzz/speex-Speex-1.2.1/libspeex/.libs/lsp.o"
  },
  {
    "arguments": [
      "/usr/lib/llvm-13/bin/clang",
      "-Wno-unused-command-line-argument",
      "-fno-experimental-new-pass-manager",
      "-Xclang",
      "-load",
      "-Xclang",
      "/usr/bin/../lib/afl//SanitizerCoveragePCGUARD.so",
      "-DHAVE_CONFIG_H",
      "-I.",
      "-I..",
      "-I../include",
      "-I../include/speex",
      "-I..",
      "-fsanitize=address",
      "-g",
      "-O1",
      "-fvisibility=hidden",
      "-Wall",
      "-c",
      "-g",
      "-funroll-loops",
      "-D__AFL_HAVE_MANUAL_CONTROL=1",
      "-D__AFL_COMPILER=1",
      "-DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION=1",
      "-D__AFL_FUZZ_INIT()=int __afl_sharedmem_fuzzing = 1;extern unsigned int *__afl_fuzz_len;extern unsigned char *__afl_fuzz_ptr;unsigned char __afl_fuzz_alt[1048576];unsigned char *__afl_fuzz_alt_ptr = __afl_fuzz_alt;",
      "-D__AFL_COVERAGE()=int __afl_selective_coverage = 1;void __afl_coverage_discard();void __afl_coverage_skip();void __afl_coverage_on();void __afl_coverage_off();",
      "-D__AFL_COVERAGE_START_OFF()=int __afl_selective_coverage_start_off = 1;",
      "-D__AFL_COVERAGE_ON()=__afl_coverage_on()",
      "-D__AFL_COVERAGE_OFF()=__afl_coverage_off()",
      "-D__AFL_COVERAGE_DISCARD()=__afl_coverage_discard()",
      "-D__AFL_COVERAGE_SKIP()=__afl_coverage_skip()",
      "-D__AFL_FUZZ_TESTCASE_BUF=(__afl_fuzz_ptr ? __afl_fuzz_ptr : __afl_fuzz_alt_ptr)",
      "-D__AFL_FUZZ_TESTCASE_LEN=(__afl_fuzz_ptr ? *__afl_fuzz_len : (*__afl_fuzz_len = read(0, __afl_fuzz_alt_ptr, 1048576)) == 0xffffffff ? 0 : *__afl_fuzz_len)",
      "-D__AFL_LOOP(_A)=({ static volatile char *_B __attribute__((used));  _B = (char*)\"##SIG_AFL_PERSISTENT##\"; __attribute__((visibility(\"default\"))) int _L(unsigned int) __asm__(\"__afl_persistent_loop\"); _L(_A); })",
      "-D__AFL_INIT()=do { static volatile char *_A __attribute__((used));  _A = (char*)\"##SIG_AFL_DEFER_FORKSRV##\"; __attribute__((visibility(\"default\"))) void _I(void) __asm__(\"__afl_manual_init\"); _I(); } while (0)",
      "-Wno-unused-command-line-argument",
      "-o",
      "lsp.o",
      "lsp.c"
    ],
    "directory": "/root/dataset_fuzz/speex-Speex-1.2.1/libspeex",
    "file": "/root/dataset_fuzz/speex-Speex-1.2.1/libspeex/lsp.c",
    "output": "/root/dataset_fuzz/speex-Speex-1.2.1/libspeex/lsp.o"
  },
  {
    "arguments": [
      "/usr/lib/llvm-13/bin/clang",
      "-Wno-unused-command-line-argument",
      "-fno-experimental-new-pass-manager",
      "-Xclang",
      "-load",
      "-Xclang",
      "/usr/bin/../lib/afl//SanitizerCoveragePCGUARD.so",
      "-DHAVE_CONFIG_H",
      "-I.",
      "-I..",
      "-I../include",
      "-I../include/speex",
      "-I..",
      "-fsanitize=address",
      "-g",
      "-O1",
      "-fvisibility=hidden",
      "-Wall",
      "-c",
      "-fPIC",
      "-DPIC",
      "-g",
      "-funroll-loops",
      "-D__AFL_HAVE_MANUAL_CONTROL=1",
      "-D__AFL_COMPILER=1",
      "-DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION=1",
      "-D__AFL_FUZZ_INIT()=int __afl_sharedmem_fuzzing = 1;extern unsigned int *__afl_fuzz_len;extern unsigned char *__afl_fuzz_ptr;unsigned char __afl_fuzz_alt[1048576];unsigned char *__afl_fuzz_alt_ptr = __afl_fuzz_alt;",
      "-D__AFL_COVERAGE()=int __afl_selective_coverage = 1;void __afl_coverage_discard();void __afl_coverage_skip();void __afl_coverage_on();void __afl_coverage_off();",
      "-D__AFL_COVERAGE_START_OFF()=int __afl_selective_coverage_start_off = 1;",
      "-D__AFL_COVERAGE_ON()=__afl_coverage_on()",
      "-D__AFL_COVERAGE_OFF()=__afl_coverage_off()",
      "-D__AFL_COVERAGE_DISCARD()=__afl_coverage_discard()",
      "-D__AFL_COVERAGE_SKIP()=__afl_coverage_skip()",
      "-D__AFL_FUZZ_TESTCASE_BUF=(__afl_fuzz_ptr ? __afl_fuzz_ptr : __afl_fuzz_alt_ptr)",
      "-D__AFL_FUZZ_TESTCASE_LEN=(__afl_fuzz_ptr ? *__afl_fuzz_len : (*__afl_fuzz_len = read(0, __afl_fuzz_alt_ptr, 1048576)) == 0xffffffff ? 0 : *__afl_fuzz_len)",
      "-D__AFL_LOOP(_A)=({ static volatile char *_B __attribute__((used));  _B = (char*)\"##SIG_AFL_PERSISTENT##\"; __attribute__((visibility(\"default\"))) int _L(unsigned int) __asm__(\"__afl_persistent_loop\"); _L(_A); })",
      "-D__AFL_INIT()=do { static volatile char *_A __attribute__((used));  _A = (char*)\"##SIG_AFL_DEFER_FORKSRV##\"; __attribute__((visibility(\"default\"))) void _I(void) __asm__(\"__afl_manual_init\"); _I(); } while (0)",
      "-Wno-unused-command-line-argument",
      "-o",
      ".libs/ltp.o",
      "ltp.c"
    ],
    "directory": "/root/dataset_fuzz/speex-Speex-1.2.1/libspeex",
    "file": "/root/dataset_fuzz/speex-Speex-1.2.1/libspeex/ltp.c",
    "output": "/root/dataset_fuzz/speex-Speex-1.2.1/libspeex/.libs/ltp.o"
  },
  {
    "arguments": [
      "/usr/lib/llvm-13/bin/clang",
      "-Wno-unused-command-line-argument",
      "-fno-experimental-new-pass-manager",
      "-Xclang",
      "-load",
      "-Xclang",
      "/usr/bin/../lib/afl//SanitizerCoveragePCGUARD.so",
      "-DHAVE_CONFIG_H",
      "-I.",
      "-I..",
      "-I../include",
      "-I../include/speex",
      "-I..",
      "-fsanitize=address",
      "-g",
      "-O1",
      "-fvisibility=hidden",
      "-Wall",
      "-c",
      "-g",
      "-funroll-loops",
      "-D__AFL_HAVE_MANUAL_CONTROL=1",
      "-D__AFL_COMPILER=1",
      "-DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION=1",
      "-D__AFL_FUZZ_INIT()=int __afl_sharedmem_fuzzing = 1;extern unsigned int *__afl_fuzz_len;extern unsigned char *__afl_fuzz_ptr;unsigned char __afl_fuzz_alt[1048576];unsigned char *__afl_fuzz_alt_ptr = __afl_fuzz_alt;",
      "-D__AFL_COVERAGE()=int __afl_selective_coverage = 1;void __afl_coverage_discard();void __afl_coverage_skip();void __afl_coverage_on();void __afl_coverage_off();",
      "-D__AFL_COVERAGE_START_OFF()=int __afl_selective_coverage_start_off = 1;",
      "-D__AFL_COVERAGE_ON()=__afl_coverage_on()",
      "-D__AFL_COVERAGE_OFF()=__afl_coverage_off()",
      "-D__AFL_COVERAGE_DISCARD()=__afl_coverage_discard()",
      "-D__AFL_COVERAGE_SKIP()=__afl_coverage_skip()",
      "-D__AFL_FUZZ_TESTCASE_BUF=(__afl_fuzz_ptr ? __afl_fuzz_ptr : __afl_fuzz_alt_ptr)",
      "-D__AFL_FUZZ_TESTCASE_LEN=(__afl_fuzz_ptr ? *__afl_fuzz_len : (*__afl_fuzz_len = read(0, __afl_fuzz_alt_ptr, 1048576)) == 0xffffffff ? 0 : *__afl_fuzz_len)",
      "-D__AFL_LOOP(_A)=({ static volatile char *_B __attribute__((used));  _B = (char*)\"##SIG_AFL_PERSISTENT##\"; __attribute__((visibility(\"default\"))) int _L(unsigned int) __asm__(\"__afl_persistent_loop\"); _L(_A); })",
      "-D__AFL_INIT()=do { static volatile char *_A __attribute__((used));  _A = (char*)\"##SIG_AFL_DEFER_FORKSRV##\"; __attribute__((visibility(\"default\"))) void _I(void) __asm__(\"__afl_manual_init\"); _I(); } while (0)",
      "-Wno-unused-command-line-argument",
      "-o",
      "ltp.o",
      "ltp.c"
    ],
    "directory": "/root/dataset_fuzz/speex-Speex-1.2.1/libspeex",
    "file": "/root/dataset_fuzz/speex-Speex-1.2.1/libspeex/ltp.c",
    "output": "/root/dataset_fuzz/speex-Speex-1.2.1/libspeex/ltp.o"
  },
  {
    "arguments": [
      "/usr/lib/llvm-13/bin/clang",
      "-Wno-unused-command-line-argument",
      "-fno-experimental-new-pass-manager",
      "-Xclang",
      "-load",
      "-Xclang",
      "/usr/bin/../lib/afl//SanitizerCoveragePCGUARD.so",
      "-DHAVE_CONFIG_H",
      "-I.",
      "-I..",
      "-I../include",
      "-I../include/speex",
      "-I..",
      "-fsanitize=address",
      "-g",
      "-O1",
      "-fvisibility=hidden",
      "-Wall",
      "-c",
      "-fPIC",
      "-DPIC",
      "-g",
      "-funroll-loops",
      "-D__AFL_HAVE_MANUAL_CONTROL=1",
      "-D__AFL_COMPILER=1",
      "-DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION=1",
      "-D__AFL_FUZZ_INIT()=int __afl_sharedmem_fuzzing = 1;extern unsigned int *__afl_fuzz_len;extern unsigned char *__afl_fuzz_ptr;unsigned char __afl_fuzz_alt[1048576];unsigned char *__afl_fuzz_alt_ptr = __afl_fuzz_alt;",
      "-D__AFL_COVERAGE()=int __afl_selective_coverage = 1;void __afl_coverage_discard();void __afl_coverage_skip();void __afl_coverage_on();void __afl_coverage_off();",
      "-D__AFL_COVERAGE_START_OFF()=int __afl_selective_coverage_start_off = 1;",
      "-D__AFL_COVERAGE_ON()=__afl_coverage_on()",
      "-D__AFL_COVERAGE_OFF()=__afl_coverage_off()",
      "-D__AFL_COVERAGE_DISCARD()=__afl_coverage_discard()",
      "-D__AFL_COVERAGE_SKIP()=__afl_coverage_skip()",
      "-D__AFL_FUZZ_TESTCASE_BUF=(__afl_fuzz_ptr ? __afl_fuzz_ptr : __afl_fuzz_alt_ptr)",
      "-D__AFL_FUZZ_TESTCASE_LEN=(__afl_fuzz_ptr ? *__afl_fuzz_len : (*__afl_fuzz_len = read(0, __afl_fuzz_alt_ptr, 1048576)) == 0xffffffff ? 0 : *__afl_fuzz_len)",
      "-D__AFL_LOOP(_A)=({ static volatile char *_B __attribute__((used));  _B = (char*)\"##SIG_AFL_PERSISTENT##\"; __attribute__((visibility(\"default\"))) int _L(unsigned int) __asm__(\"__afl_persistent_loop\"); _L(_A); })",
      "-D__AFL_INIT()=do { static volatile char *_A __attribute__((used));  _A = (char*)\"##SIG_AFL_DEFER_FORKSRV##\"; __attribute__((visibility(\"default\"))) void _I(void) __asm__(\"__afl_manual_init\"); _I(); } while (0)",
      "-Wno-unused-command-line-argument",
      "-o",
      ".libs/speex.o",
      "speex.c"
    ],
    "directory": "/root/dataset_fuzz/speex-Speex-1.2.1/libspeex",
    "file": "/root/dataset_fuzz/speex-Speex-1.2.1/libspeex/speex.c",
    "output": "/root/dataset_fuzz/speex-Speex-1.2.1/libspeex/.libs/speex.o"
  },
  {
    "arguments": [
      "/usr/lib/llvm-13/bin/clang",
      "-Wno-unused-command-line-argument",
      "-fno-experimental-new-pass-manager",
      "-Xclang",
      "-load",
      "-Xclang",
      "/usr/bin/../lib/afl//SanitizerCoveragePCGUARD.so",
      "-DHAVE_CONFIG_H",
      "-I.",
      "-I..",
      "-I../include",
      "-I../include/speex",
      "-I..",
      "-fsanitize=address",
      "-g",
      "-O1",
      "-fvisibility=hidden",
      "-Wall",
      "-c",
      "-g",
      "-funroll-loops",
      "-D__AFL_HAVE_MANUAL_CONTROL=1",
      "-D__AFL_COMPILER=1",
      "-DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION=1",
      "-D__AFL_FUZZ_INIT()=int __afl_sharedmem_fuzzing = 1;extern unsigned int *__afl_fuzz_len;extern unsigned char *__afl_fuzz_ptr;unsigned char __afl_fuzz_alt[1048576];unsigned char *__afl_fuzz_alt_ptr = __afl_fuzz_alt;",
      "-D__AFL_COVERAGE()=int __afl_selective_coverage = 1;void __afl_coverage_discard();void __afl_coverage_skip();void __afl_coverage_on();void __afl_coverage_off();",
      "-D__AFL_COVERAGE_START_OFF()=int __afl_selective_coverage_start_off = 1;",
      "-D__AFL_COVERAGE_ON()=__afl_coverage_on()",
      "-D__AFL_COVERAGE_OFF()=__afl_coverage_off()",
      "-D__AFL_COVERAGE_DISCARD()=__afl_coverage_discard()",
      "-D__AFL_COVERAGE_SKIP()=__afl_coverage_skip()",
      "-D__AFL_FUZZ_TESTCASE_BUF=(__afl_fuzz_ptr ? __afl_fuzz_ptr : __afl_fuzz_alt_ptr)",
      "-D__AFL_FUZZ_TESTCASE_LEN=(__afl_fuzz_ptr ? *__afl_fuzz_len : (*__afl_fuzz_len = read(0, __afl_fuzz_alt_ptr, 1048576)) == 0xffffffff ? 0 : *__afl_fuzz_len)",
      "-D__AFL_LOOP(_A)=({ static volatile char *_B __attribute__((used));  _B = (char*)\"##SIG_AFL_PERSISTENT##\"; __attribute__((visibility(\"default\"))) int _L(unsigned int) __asm__(\"__afl_persistent_loop\"); _L(_A); })",
      "-D__AFL_INIT()=do { static volatile char *_A __attribute__((used));  _A = (char*)\"##SIG_AFL_DEFER_FORKSRV##\"; __attribute__((visibility(\"default\"))) void _I(void) __asm__(\"__afl_manual_init\"); _I(); } while (0)",
      "-Wno-unused-command-line-argument",
      "-o",
      "speex.o",
      "speex.c"
    ],
    "directory": "/root/dataset_fuzz/speex-Speex-1.2.1/libspeex",
    "file": "/root/dataset_fuzz/speex-Speex-1.2.1/libspeex/speex.c",
    "output": "/root/dataset_fuzz/speex-Speex-1.2.1/libspeex/speex.o"
  },
  {
    "arguments": [
      "/usr/lib/llvm-13/bin/clang",
      "-Wno-unused-command-line-argument",
      "-fno-experimental-new-pass-manager",
      "-Xclang",
      "-load",
      "-Xclang",
      "/usr/bin/../lib/afl//SanitizerCoveragePCGUARD.so",
      "-DHAVE_CONFIG_H",
      "-I.",
      "-I..",
      "-I../include",
      "-I../include/speex",
      "-I..",
      "-fsanitize=address",
      "-g",
      "-O1",
      "-fvisibility=hidden",
      "-Wall",
      "-c",
      "-fPIC",
      "-DPIC",
      "-g",
      "-funroll-loops",
      "-D__AFL_HAVE_MANUAL_CONTROL=1",
      "-D__AFL_COMPILER=1",
      "-DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION=1",
      "-D__AFL_FUZZ_INIT()=int __afl_sharedmem_fuzzing = 1;extern unsigned int *__afl_fuzz_len;extern unsigned char *__afl_fuzz_ptr;unsigned char __afl_fuzz_alt[1048576];unsigned char *__afl_fuzz_alt_ptr = __afl_fuzz_alt;",
      "-D__AFL_COVERAGE()=int __afl_selective_coverage = 1;void __afl_coverage_discard();void __afl_coverage_skip();void __afl_coverage_on();void __afl_coverage_off();",
      "-D__AFL_COVERAGE_START_OFF()=int __afl_selective_coverage_start_off = 1;",
      "-D__AFL_COVERAGE_ON()=__afl_coverage_on()",
      "-D__AFL_COVERAGE_OFF()=__afl_coverage_off()",
      "-D__AFL_COVERAGE_DISCARD()=__afl_coverage_discard()",
      "-D__AFL_COVERAGE_SKIP()=__afl_coverage_skip()",
      "-D__AFL_FUZZ_TESTCASE_BUF=(__afl_fuzz_ptr ? __afl_fuzz_ptr : __afl_fuzz_alt_ptr)",
      "-D__AFL_FUZZ_TESTCASE_LEN=(__afl_fuzz_ptr ? *__afl_fuzz_len : (*__afl_fuzz_len = read(0, __afl_fuzz_alt_ptr, 1048576)) == 0xffffffff ? 0 : *__afl_fuzz_len)",
      "-D__AFL_LOOP(_A)=({ static volatile char *_B __attribute__((used));  _B = (char*)\"##SIG_AFL_PERSISTENT##\"; __attribute__((visibility(\"default\"))) int _L(unsigned int) __asm__(\"__afl_persistent_loop\"); _L(_A); })",
      "-D__AFL_INIT()=do { static volatile char *_A __attribute__((used));  _A = (char*)\"##SIG_AFL_DEFER_FORKSRV##\"; __attribute__((visibility(\"default\"))) void _I(void) __asm__(\"__afl_manual_init\"); _I(); } while (0)",
      "-Wno-unused-command-line-argument",
      "-o",
      ".libs/stereo.o",
      "stereo.c"
    ],
    "directory": "/root/dataset_fuzz/speex-Speex-1.2.1/libspeex",
    "file": "/root/dataset_fuzz/speex-Speex-1.2.1/libspeex/stereo.c",
    "output": "/root/dataset_fuzz/speex-Speex-1.2.1/libspeex/.libs/stereo.o"
  },
  {
    "arguments": [
      "/usr/lib/llvm-13/bin/clang",
      "-Wno-unused-command-line-argument",
      "-fno-experimental-new-pass-manager",
      "-Xclang",
      "-load",
      "-Xclang",
      "/usr/bin/../lib/afl//SanitizerCoveragePCGUARD.so",
      "-DHAVE_CONFIG_H",
      "-I.",
      "-I..",
      "-I../include",
      "-I../include/speex",
      "-I..",
      "-fsanitize=address",
      "-g",
      "-O1",
      "-fvisibility=hidden",
      "-Wall",
      "-c",
      "-g",
      "-funroll-loops",
      "-D__AFL_HAVE_MANUAL_CONTROL=1",
      "-D__AFL_COMPILER=1",
      "-DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION=1",
      "-D__AFL_FUZZ_INIT()=int __afl_sharedmem_fuzzing = 1;extern unsigned int *__afl_fuzz_len;extern unsigned char *__afl_fuzz_ptr;unsigned char __afl_fuzz_alt[1048576];unsigned char *__afl_fuzz_alt_ptr = __afl_fuzz_alt;",
      "-D__AFL_COVERAGE()=int __afl_selective_coverage = 1;void __afl_coverage_discard();void __afl_coverage_skip();void __afl_coverage_on();void __afl_coverage_off();",
      "-D__AFL_COVERAGE_START_OFF()=int __afl_selective_coverage_start_off = 1;",
      "-D__AFL_COVERAGE_ON()=__afl_coverage_on()",
      "-D__AFL_COVERAGE_OFF()=__afl_coverage_off()",
      "-D__AFL_COVERAGE_DISCARD()=__afl_coverage_discard()",
      "-D__AFL_COVERAGE_SKIP()=__afl_coverage_skip()",
      "-D__AFL_FUZZ_TESTCASE_BUF=(__afl_fuzz_ptr ? __afl_fuzz_ptr : __afl_fuzz_alt_ptr)",
      "-D__AFL_FUZZ_TESTCASE_LEN=(__afl_fuzz_ptr ? *__afl_fuzz_len : (*__afl_fuzz_len = read(0, __afl_fuzz_alt_ptr, 1048576)) == 0xffffffff ? 0 : *__afl_fuzz_len)",
      "-D__AFL_LOOP(_A)=({ static volatile char *_B __attribute__((used));  _B = (char*)\"##SIG_AFL_PERSISTENT##\"; __attribute__((visibility(\"default\"))) int _L(unsigned int) __asm__(\"__afl_persistent_loop\"); _L(_A); })",
      "-D__AFL_INIT()=do { static volatile char *_A __attribute__((used));  _A = (char*)\"##SIG_AFL_DEFER_FORKSRV##\"; __attribute__((visibility(\"default\"))) void _I(void) __asm__(\"__afl_manual_init\"); _I(); } while (0)",
      "-Wno-unused-command-line-argument",
      "-o",
      "stereo.o",
      "stereo.c"
    ],
    "directory": "/root/dataset_fuzz/speex-Speex-1.2.1/libspeex",
    "file": "/root/dataset_fuzz/speex-Speex-1.2.1/libspeex/stereo.c",
    "output": "/root/dataset_fuzz/speex-Speex-1.2.1/libspeex/stereo.o"
  },
  {
    "arguments": [
      "/usr/lib/llvm-13/bin/clang",
      "-Wno-unused-command-line-argument",
      "-fno-experimental-new-pass-manager",
      "-Xclang",
      "-load",
      "-Xclang",
      "/usr/bin/../lib/afl//SanitizerCoveragePCGUARD.so",
      "-DHAVE_CONFIG_H",
      "-I.",
      "-I..",
      "-I../include",
      "-I../include/speex",
      "-I..",
      "-fsanitize=address",
      "-g",
      "-O1",
      "-fvisibility=hidden",
      "-Wall",
      "-c",
      "-fPIC",
      "-DPIC",
      "-g",
      "-funroll-loops",
      "-D__AFL_HAVE_MANUAL_CONTROL=1",
      "-D__AFL_COMPILER=1",
      "-DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION=1",
      "-D__AFL_FUZZ_INIT()=int __afl_sharedmem_fuzzing = 1;extern unsigned int *__afl_fuzz_len;extern unsigned char *__afl_fuzz_ptr;unsigned char __afl_fuzz_alt[1048576];unsigned char *__afl_fuzz_alt_ptr = __afl_fuzz_alt;",
      "-D__AFL_COVERAGE()=int __afl_selective_coverage = 1;void __afl_coverage_discard();void __afl_coverage_skip();void __afl_coverage_on();void __afl_coverage_off();",
      "-D__AFL_COVERAGE_START_OFF()=int __afl_selective_coverage_start_off = 1;",
      "-D__AFL_COVERAGE_ON()=__afl_coverage_on()",
      "-D__AFL_COVERAGE_OFF()=__afl_coverage_off()",
      "-D__AFL_COVERAGE_DISCARD()=__afl_coverage_discard()",
      "-D__AFL_COVERAGE_SKIP()=__afl_coverage_skip()",
      "-D__AFL_FUZZ_TESTCASE_BUF=(__afl_fuzz_ptr ? __afl_fuzz_ptr : __afl_fuzz_alt_ptr)",
      "-D__AFL_FUZZ_TESTCASE_LEN=(__afl_fuzz_ptr ? *__afl_fuzz_len : (*__afl_fuzz_len = read(0, __afl_fuzz_alt_ptr, 1048576)) == 0xffffffff ? 0 : *__afl_fuzz_len)",
      "-D__AFL_LOOP(_A)=({ static volatile char *_B __attribute__((used));  _B = (char*)\"##SIG_AFL_PERSISTENT##\"; __attribute__((visibility(\"default\"))) int _L(unsigned int) __asm__(\"__afl_persistent_loop\"); _L(_A); })",
      "-D__AFL_INIT()=do { static volatile char *_A __attribute__((used));  _A = (char*)\"##SIG_AFL_DEFER_FORKSRV##\"; __attribute__((visibility(\"default\"))) void _I(void) __asm__(\"__afl_manual_init\"); _I(); } while (0)",
      "-Wno-unused-command-line-argument",
      "-o",
      ".libs/vbr.o",
      "vbr.c"
    ],
    "directory": "/root/dataset_fuzz/speex-Speex-1.2.1/libspeex",
    "file": "/root/dataset_fuzz/speex-Speex-1.2.1/libspeex/vbr.c",
    "output": "/root/dataset_fuzz/speex-Speex-1.2.1/libspeex/.libs/vbr.o"
  },
  {
    "arguments": [
      "/usr/lib/llvm-13/bin/clang",
      "-Wno-unused-command-line-argument",
      "-fno-experimental-new-pass-manager",
      "-Xclang",
      "-load",
      "-Xclang",
      "/usr/bin/../lib/afl//SanitizerCoveragePCGUARD.so",
      "-DHAVE_CONFIG_H",
      "-I.",
      "-I..",
      "-I../include",
      "-I../include/speex",
      "-I..",
      "-fsanitize=address",
      "-g",
      "-O1",
      "-fvisibility=hidden",
      "-Wall",
      "-c",
      "-g",
      "-funroll-loops",
      "-D__AFL_HAVE_MANUAL_CONTROL=1",
      "-D__AFL_COMPILER=1",
      "-DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION=1",
      "-D__AFL_FUZZ_INIT()=int __afl_sharedmem_fuzzing = 1;extern unsigned int *__afl_fuzz_len;extern unsigned char *__afl_fuzz_ptr;unsigned char __afl_fuzz_alt[1048576];unsigned char *__afl_fuzz_alt_ptr = __afl_fuzz_alt;",
      "-D__AFL_COVERAGE()=int __afl_selective_coverage = 1;void __afl_coverage_discard();void __afl_coverage_skip();void __afl_coverage_on();void __afl_coverage_off();",
      "-D__AFL_COVERAGE_START_OFF()=int __afl_selective_coverage_start_off = 1;",
      "-D__AFL_COVERAGE_ON()=__afl_coverage_on()",
      "-D__AFL_COVERAGE_OFF()=__afl_coverage_off()",
      "-D__AFL_COVERAGE_DISCARD()=__afl_coverage_discard()",
      "-D__AFL_COVERAGE_SKIP()=__afl_coverage_skip()",
      "-D__AFL_FUZZ_TESTCASE_BUF=(__afl_fuzz_ptr ? __afl_fuzz_ptr : __afl_fuzz_alt_ptr)",
      "-D__AFL_FUZZ_TESTCASE_LEN=(__afl_fuzz_ptr ? *__afl_fuzz_len : (*__afl_fuzz_len = read(0, __afl_fuzz_alt_ptr, 1048576)) == 0xffffffff ? 0 : *__afl_fuzz_len)",
      "-D__AFL_LOOP(_A)=({ static volatile char *_B __attribute__((used));  _B = (char*)\"##SIG_AFL_PERSISTENT##\"; __attribute__((visibility(\"default\"))) int _L(unsigned int) __asm__(\"__afl_persistent_loop\"); _L(_A); })",
      "-D__AFL_INIT()=do { static volatile char *_A __attribute__((used));  _A = (char*)\"##SIG_AFL_DEFER_FORKSRV##\"; __attribute__((visibility(\"default\"))) void _I(void) __asm__(\"__afl_manual_init\"); _I(); } while (0)",
      "-Wno-unused-command-line-argument",
      "-o",
      "vbr.o",
      "vbr.c"
    ],
    "directory": "/root/dataset_fuzz/speex-Speex-1.2.1/libspeex",
    "file": "/root/dataset_fuzz/speex-Speex-1.2.1/libspeex/vbr.c",
    "output": "/root/dataset_fuzz/speex-Speex-1.2.1/libspeex/vbr.o"
  },
  {
    "arguments": [
      "/usr/lib/llvm-13/bin/clang",
      "-Wno-unused-command-line-argument",
      "-fno-experimental-new-pass-manager",
      "-Xclang",
      "-load",
      "-Xclang",
      "/usr/bin/../lib/afl//SanitizerCoveragePCGUARD.so",
      "-DHAVE_CONFIG_H",
      "-I.",
      "-I..",
      "-I../include",
      "-I../include/speex",
      "-I..",
      "-fsanitize=address",
      "-g",
      "-O1",
      "-fvisibility=hidden",
      "-Wall",
      "-c",
      "-fPIC",
      "-DPIC",
      "-g",
      "-funroll-loops",
      "-D__AFL_HAVE_MANUAL_CONTROL=1",
      "-D__AFL_COMPILER=1",
      "-DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION=1",
      "-D__AFL_FUZZ_INIT()=int __afl_sharedmem_fuzzing = 1;extern unsigned int *__afl_fuzz_len;extern unsigned char *__afl_fuzz_ptr;unsigned char __afl_fuzz_alt[1048576];unsigned char *__afl_fuzz_alt_ptr = __afl_fuzz_alt;",
      "-D__AFL_COVERAGE()=int __afl_selective_coverage = 1;void __afl_coverage_discard();void __afl_coverage_skip();void __afl_coverage_on();void __afl_coverage_off();",
      "-D__AFL_COVERAGE_START_OFF()=int __afl_selective_coverage_start_off = 1;",
      "-D__AFL_COVERAGE_ON()=__afl_coverage_on()",
      "-D__AFL_COVERAGE_OFF()=__afl_coverage_off()",
      "-D__AFL_COVERAGE_DISCARD()=__afl_coverage_discard()",
      "-D__AFL_COVERAGE_SKIP()=__afl_coverage_skip()",
      "-D__AFL_FUZZ_TESTCASE_BUF=(__afl_fuzz_ptr ? __afl_fuzz_ptr : __afl_fuzz_alt_ptr)",
      "-D__AFL_FUZZ_TESTCASE_LEN=(__afl_fuzz_ptr ? *__afl_fuzz_len : (*__afl_fuzz_len = read(0, __afl_fuzz_alt_ptr, 1048576)) == 0xffffffff ? 0 : *__afl_fuzz_len)",
      "-D__AFL_LOOP(_A)=({ static volatile char *_B __attribute__((used));  _B = (char*)\"##SIG_AFL_PERSISTENT##\"; __attribute__((visibility(\"default\"))) int _L(unsigned int) __asm__(\"__afl_persistent_loop\"); _L(_A); })",
      "-D__AFL_INIT()=do { static volatile char *_A __attribute__((used));  _A = (char*)\"##SIG_AFL_DEFER_FORKSRV##\"; __attribute__((visibility(\"default\"))) void _I(void) __asm__(\"__afl_manual_init\"); _I(); } while (0)",
      "-Wno-unused-command-line-argument",
      "-o",
      ".libs/vq.o",
      "vq.c"
    ],
    "directory": "/root/dataset_fuzz/speex-Speex-1.2.1/libspeex",
    "file": "/root/dataset_fuzz/speex-Speex-1.2.1/libspeex/vq.c",
    "output": "/root/dataset_fuzz/speex-Speex-1.2.1/libspeex/.libs/vq.o"
  },
  {
    "arguments": [
      "/usr/lib/llvm-13/bin/clang",
      "-Wno-unused-command-line-argument",
      "-fno-experimental-new-pass-manager",
      "-Xclang",
      "-load",
      "-Xclang",
      "/usr/bin/../lib/afl//SanitizerCoveragePCGUARD.so",
      "-DHAVE_CONFIG_H",
      "-I.",
      "-I..",
      "-I../include",
      "-I../include/speex",
      "-I..",
      "-fsanitize=address",
      "-g",
      "-O1",
      "-fvisibility=hidden",
      "-Wall",
      "-c",
      "-g",
      "-funroll-loops",
      "-D__AFL_HAVE_MANUAL_CONTROL=1",
      "-D__AFL_COMPILER=1",
      "-DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION=1",
      "-D__AFL_FUZZ_INIT()=int __afl_sharedmem_fuzzing = 1;extern unsigned int *__afl_fuzz_len;extern unsigned char *__afl_fuzz_ptr;unsigned char __afl_fuzz_alt[1048576];unsigned char *__afl_fuzz_alt_ptr = __afl_fuzz_alt;",
      "-D__AFL_COVERAGE()=int __afl_selective_coverage = 1;void __afl_coverage_discard();void __afl_coverage_skip();void __afl_coverage_on();void __afl_coverage_off();",
      "-D__AFL_COVERAGE_START_OFF()=int __afl_selective_coverage_start_off = 1;",
      "-D__AFL_COVERAGE_ON()=__afl_coverage_on()",
      "-D__AFL_COVERAGE_OFF()=__afl_coverage_off()",
      "-D__AFL_COVERAGE_DISCARD()=__afl_coverage_discard()",
      "-D__AFL_COVERAGE_SKIP()=__afl_coverage_skip()",
      "-D__AFL_FUZZ_TESTCASE_BUF=(__afl_fuzz_ptr ? __afl_fuzz_ptr : __afl_fuzz_alt_ptr)",
      "-D__AFL_FUZZ_TESTCASE_LEN=(__afl_fuzz_ptr ? *__afl_fuzz_len : (*__afl_fuzz_len = read(0, __afl_fuzz_alt_ptr, 1048576)) == 0xffffffff ? 0 : *__afl_fuzz_len)",
      "-D__AFL_LOOP(_A)=({ static volatile char *_B __attribute__((used));  _B = (char*)\"##SIG_AFL_PERSISTENT##\"; __attribute__((visibility(\"default\"))) int _L(unsigned int) __asm__(\"__afl_persistent_loop\"); _L(_A); })",
      "-D__AFL_INIT()=do { static volatile char *_A __attribute__((used));  _A = (char*)\"##SIG_AFL_DEFER_FORKSRV##\"; __attribute__((visibility(\"default\"))) void _I(void) __asm__(\"__afl_manual_init\"); _I(); } while (0)",
      "-Wno-unused-command-line-argument",
      "-o",
      "vq.o",
      "vq.c"
    ],
    "directory": "/root/dataset_fuzz/speex-Speex-1.2.1/libspeex",
    "file": "/root/dataset_fuzz/speex-Speex-1.2.1/libspeex/vq.c",
    "output": "/root/dataset_fuzz/speex-Speex-1.2.1/libspeex/vq.o"
  },
  {
    "arguments": [
      "/usr/lib/llvm-13/bin/clang",
      "-Wno-unused-command-line-argument",
      "-fno-experimental-new-pass-manager",
      "-Xclang",
      "-load",
      "-Xclang",
      "/usr/bin/../lib/afl//SanitizerCoveragePCGUARD.so",
      "-DHAVE_CONFIG_H",
      "-I.",
      "-I..",
      "-I../include",
      "-I../include/speex",
      "-I..",
      "-fsanitize=address",
      "-g",
      "-O1",
      "-fvisibility=hidden",
      "-Wall",
      "-c",
      "-fPIC",
      "-DPIC",
      "-g",
      "-funroll-loops",
      "-D__AFL_HAVE_MANUAL_CONTROL=1",
      "-D__AFL_COMPILER=1",
      "-DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION=1",
      "-D__AFL_FUZZ_INIT()=int __afl_sharedmem_fuzzing = 1;extern unsigned int *__afl_fuzz_len;extern unsigned char *__afl_fuzz_ptr;unsigned char __afl_fuzz_alt[1048576];unsigned char *__afl_fuzz_alt_ptr = __afl_fuzz_alt;",
      "-D__AFL_COVERAGE()=int __afl_selective_coverage = 1;void __afl_coverage_discard();void __afl_coverage_skip();void __afl_coverage_on();void __afl_coverage_off();",
      "-D__AFL_COVERAGE_START_OFF()=int __afl_selective_coverage_start_off = 1;",
      "-D__AFL_COVERAGE_ON()=__afl_coverage_on()",
      "-D__AFL_COVERAGE_OFF()=__afl_coverage_off()",
      "-D__AFL_COVERAGE_DISCARD()=__afl_coverage_discard()",
      "-D__AFL_COVERAGE_SKIP()=__afl_coverage_skip()",
      "-D__AFL_FUZZ_TESTCASE_BUF=(__afl_fuzz_ptr ? __afl_fuzz_ptr : __afl_fuzz_alt_ptr)",
      "-D__AFL_FUZZ_TESTCASE_LEN=(__afl_fuzz_ptr ? *__afl_fuzz_len : (*__afl_fuzz_len = read(0, __afl_fuzz_alt_ptr, 1048576)) == 0xffffffff ? 0 : *__afl_fuzz_len)",
      "-D__AFL_LOOP(_A)=({ static volatile char *_B __attribute__((used));  _B = (char*)\"##SIG_AFL_PERSISTENT##\"; __attribute__((visibility(\"default\"))) int _L(unsigned int) __asm__(\"__afl_persistent_loop\"); _L(_A); })",
      "-D__AFL_INIT()=do { static volatile char *_A __attribute__((used));  _A = (char*)\"##SIG_AFL_DEFER_FORKSRV##\"; __attribute__((visibility(\"default\"))) void _I(void) __asm__(\"__afl_manual_init\"); _I(); } while (0)",
      "-Wno-unused-command-line-argument",
      "-o",
      ".libs/bits.o",
      "bits.c"
    ],
    "directory": "/root/dataset_fuzz/speex-Speex-1.2.1/libspeex",
    "file": "/root/dataset_fuzz/speex-Speex-1.2.1/libspeex/bits.c",
    "output": "/root/dataset_fuzz/speex-Speex-1.2.1/libspeex/.libs/bits.o"
  },
  {
    "arguments": [
      "/usr/lib/llvm-13/bin/clang",
      "-Wno-unused-command-line-argument",
      "-fno-experimental-new-pass-manager",
      "-Xclang",
      "-load",
      "-Xclang",
      "/usr/bin/../lib/afl//SanitizerCoveragePCGUARD.so",
      "-DHAVE_CONFIG_H",
      "-I.",
      "-I..",
      "-I../include",
      "-I../include/speex",
      "-I..",
      "-fsanitize=address",
      "-g",
      "-O1",
      "-fvisibility=hidden",
      "-Wall",
      "-c",
      "-g",
      "-funroll-loops",
      "-D__AFL_HAVE_MANUAL_CONTROL=1",
      "-D__AFL_COMPILER=1",
      "-DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION=1",
      "-D__AFL_FUZZ_INIT()=int __afl_sharedmem_fuzzing = 1;extern unsigned int *__afl_fuzz_len;extern unsigned char *__afl_fuzz_ptr;unsigned char __afl_fuzz_alt[1048576];unsigned char *__afl_fuzz_alt_ptr = __afl_fuzz_alt;",
      "-D__AFL_COVERAGE()=int __afl_selective_coverage = 1;void __afl_coverage_discard();void __afl_coverage_skip();void __afl_coverage_on();void __afl_coverage_off();",
      "-D__AFL_COVERAGE_START_OFF()=int __afl_selective_coverage_start_off = 1;",
      "-D__AFL_COVERAGE_ON()=__afl_coverage_on()",
      "-D__AFL_COVERAGE_OFF()=__afl_coverage_off()",
      "-D__AFL_COVERAGE_DISCARD()=__afl_coverage_discard()",
      "-D__AFL_COVERAGE_SKIP()=__afl_coverage_skip()",
      "-D__AFL_FUZZ_TESTCASE_BUF=(__afl_fuzz_ptr ? __afl_fuzz_ptr : __afl_fuzz_alt_ptr)",
      "-D__AFL_FUZZ_TESTCASE_LEN=(__afl_fuzz_ptr ? *__afl_fuzz_len : (*__afl_fuzz_len = read(0, __afl_fuzz_alt_ptr, 1048576)) == 0xffffffff ? 0 : *__afl_fuzz_len)",
      "-D__AFL_LOOP(_A)=({ static volatile char *_B __attribute__((used));  _B = (char*)\"##SIG_AFL_PERSISTENT##\"; __attribute__((visibility(\"default\"))) int _L(unsigned int) __asm__(\"__afl_persistent_loop\"); _L(_A); })",
      "-D__AFL_INIT()=do { static volatile char *_A __attribute__((used));  _A = (char*)\"##SIG_AFL_DEFER_FORKSRV##\"; __attribute__((visibility(\"default\"))) void _I(void) __asm__(\"__afl_manual_init\"); _I(); } while (0)",
      "-Wno-unused-command-line-argument",
      "-o",
      "bits.o",
      "bits.c"
    ],
    "directory": "/root/dataset_fuzz/speex-Speex-1.2.1/libspeex",
    "file": "/root/dataset_fuzz/speex-Speex-1.2.1/libspeex/bits.c",
    "output": "/root/dataset_fuzz/speex-Speex-1.2.1/libspeex/bits.o"
  },
  {
    "arguments": [
      "/usr/lib/llvm-13/bin/clang",
      "-Wno-unused-command-line-argument",
      "-fno-experimental-new-pass-manager",
      "-Xclang",
      "-load",
      "-Xclang",
      "/usr/bin/../lib/afl//SanitizerCoveragePCGUARD.so",
      "-DHAVE_CONFIG_H",
      "-I.",
      "-I..",
      "-I../include",
      "-I../include/speex",
      "-I..",
      "-fsanitize=address",
      "-g",
      "-O1",
      "-fvisibility=hidden",
      "-Wall",
      "-c",
      "-fPIC",
      "-DPIC",
      "-g",
      "-funroll-loops",
      "-D__AFL_HAVE_MANUAL_CONTROL=1",
      "-D__AFL_COMPILER=1",
      "-DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION=1",
      "-D__AFL_FUZZ_INIT()=int __afl_sharedmem_fuzzing = 1;extern unsigned int *__afl_fuzz_len;extern unsigned char *__afl_fuzz_ptr;unsigned char __afl_fuzz_alt[1048576];unsigned char *__afl_fuzz_alt_ptr = __afl_fuzz_alt;",
      "-D__AFL_COVERAGE()=int __afl_selective_coverage = 1;void __afl_coverage_discard();void __afl_coverage_skip();void __afl_coverage_on();void __afl_coverage_off();",
      "-D__AFL_COVERAGE_START_OFF()=int __afl_selective_coverage_start_off = 1;",
      "-D__AFL_COVERAGE_ON()=__afl_coverage_on()",
      "-D__AFL_COVERAGE_OFF()=__afl_coverage_off()",
      "-D__AFL_COVERAGE_DISCARD()=__afl_coverage_discard()",
      "-D__AFL_COVERAGE_SKIP()=__afl_coverage_skip()",
      "-D__AFL_FUZZ_TESTCASE_BUF=(__afl_fuzz_ptr ? __afl_fuzz_ptr : __afl_fuzz_alt_ptr)",
      "-D__AFL_FUZZ_TESTCASE_LEN=(__afl_fuzz_ptr ? *__afl_fuzz_len : (*__afl_fuzz_len = read(0, __afl_fuzz_alt_ptr, 1048576)) == 0xffffffff ? 0 : *__afl_fuzz_len)",
      "-D__AFL_LOOP(_A)=({ static volatile char *_B __attribute__((used));  _B = (char*)\"##SIG_AFL_PERSISTENT##\"; __attribute__((visibility(\"default\"))) int _L(unsigned int) __asm__(\"__afl_persistent_loop\"); _L(_A); })",
      "-D__AFL_INIT()=do { static volatile char *_A __attribute__((used));  _A = (char*)\"##SIG_AFL_DEFER_FORKSRV##\"; __attribute__((visibility(\"default\"))) void _I(void) __asm__(\"__afl_manual_init\"); _I(); } while (0)",
      "-Wno-unused-command-line-argument",
      "-o",
      ".libs/exc_10_16_table.o",
      "exc_10_16_table.c"
    ],
    "directory": "/root/dataset_fuzz/speex-Speex-1.2.1/libspeex",
    "file": "/root/dataset_fuzz/speex-Speex-1.2.1/libspeex/exc_10_16_table.c",
    "output": "/root/dataset_fuzz/speex-Speex-1.2.1/libspeex/.libs/exc_10_16_table.o"
  },
  {
    "arguments": [
      "/usr/lib/llvm-13/bin/clang",
      "-Wno-unused-command-line-argument",
      "-fno-experimental-new-pass-manager",
      "-Xclang",
      "-load",
      "-Xclang",
      "/usr/bin/../lib/afl//SanitizerCoveragePCGUARD.so",
      "-DHAVE_CONFIG_H",
      "-I.",
      "-I..",
      "-I../include",
      "-I../include/speex",
      "-I..",
      "-fsanitize=address",
      "-g",
      "-O1",
      "-fvisibility=hidden",
      "-Wall",
      "-c",
      "-g",
      "-funroll-loops",
      "-D__AFL_HAVE_MANUAL_CONTROL=1",
      "-D__AFL_COMPILER=1",
      "-DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION=1",
      "-D__AFL_FUZZ_INIT()=int __afl_sharedmem_fuzzing = 1;extern unsigned int *__afl_fuzz_len;extern unsigned char *__afl_fuzz_ptr;unsigned char __afl_fuzz_alt[1048576];unsigned char *__afl_fuzz_alt_ptr = __afl_fuzz_alt;",
      "-D__AFL_COVERAGE()=int __afl_selective_coverage = 1;void __afl_coverage_discard();void __afl_coverage_skip();void __afl_coverage_on();void __afl_coverage_off();",
      "-D__AFL_COVERAGE_START_OFF()=int __afl_selective_coverage_start_off = 1;",
      "-D__AFL_COVERAGE_ON()=__afl_coverage_on()",
      "-D__AFL_COVERAGE_OFF()=__afl_coverage_off()",
      "-D__AFL_COVERAGE_DISCARD()=__afl_coverage_discard()",
      "-D__AFL_COVERAGE_SKIP()=__afl_coverage_skip()",
      "-D__AFL_FUZZ_TESTCASE_BUF=(__afl_fuzz_ptr ? __afl_fuzz_ptr : __afl_fuzz_alt_ptr)",
      "-D__AFL_FUZZ_TESTCASE_LEN=(__afl_fuzz_ptr ? *__afl_fuzz_len : (*__afl_fuzz_len = read(0, __afl_fuzz_alt_ptr, 1048576)) == 0xffffffff ? 0 : *__afl_fuzz_len)",
      "-D__AFL_LOOP(_A)=({ static volatile char *_B __attribute__((used));  _B = (char*)\"##SIG_AFL_PERSISTENT##\"; __attribute__((visibility(\"default\"))) int _L(unsigned int) __asm__(\"__afl_persistent_loop\"); _L(_A); })",
      "-D__AFL_INIT()=do { static volatile char *_A __attribute__((used));  _A = (char*)\"##SIG_AFL_DEFER_FORKSRV##\"; __attribute__((visibility(\"default\"))) void _I(void) __asm__(\"__afl_manual_init\"); _I(); } while (0)",
      "-Wno-unused-command-line-argument",
      "-o",
      "exc_10_16_table.o",
      "exc_10_16_table.c"
    ],
    "directory": "/root/dataset_fuzz/speex-Speex-1.2.1/libspeex",
    "file": "/root/dataset_fuzz/speex-Speex-1.2.1/libspeex/exc_10_16_table.c",
    "output": "/root/dataset_fuzz/speex-Speex-1.2.1/libspeex/exc_10_16_table.o"
  },
  {
    "arguments": [
      "/usr/lib/llvm-13/bin/clang",
      "-Wno-unused-command-line-argument",
      "-fno-experimental-new-pass-manager",
      "-Xclang",
      "-load",
      "-Xclang",
      "/usr/bin/../lib/afl//SanitizerCoveragePCGUARD.so",
      "-DHAVE_CONFIG_H",
      "-I.",
      "-I..",
      "-I../include",
      "-I../include/speex",
      "-I..",
      "-fsanitize=address",
      "-g",
      "-O1",
      "-fvisibility=hidden",
      "-Wall",
      "-c",
      "-fPIC",
      "-DPIC",
      "-g",
      "-funroll-loops",
      "-D__AFL_HAVE_MANUAL_CONTROL=1",
      "-D__AFL_COMPILER=1",
      "-DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION=1",
      "-D__AFL_FUZZ_INIT()=int __afl_sharedmem_fuzzing = 1;extern unsigned int *__afl_fuzz_len;extern unsigned char *__afl_fuzz_ptr;unsigned char __afl_fuzz_alt[1048576];unsigned char *__afl_fuzz_alt_ptr = __afl_fuzz_alt;",
      "-D__AFL_COVERAGE()=int __afl_selective_coverage = 1;void __afl_coverage_discard();void __afl_coverage_skip();void __afl_coverage_on();void __afl_coverage_off();",
      "-D__AFL_COVERAGE_START_OFF()=int __afl_selective_coverage_start_off = 1;",
      "-D__AFL_COVERAGE_ON()=__afl_coverage_on()",
      "-D__AFL_COVERAGE_OFF()=__afl_coverage_off()",
      "-D__AFL_COVERAGE_DISCARD()=__afl_coverage_discard()",
      "-D__AFL_COVERAGE_SKIP()=__afl_coverage_skip()",
      "-D__AFL_FUZZ_TESTCASE_BUF=(__afl_fuzz_ptr ? __afl_fuzz_ptr : __afl_fuzz_alt_ptr)",
      "-D__AFL_FUZZ_TESTCASE_LEN=(__afl_fuzz_ptr ? *__afl_fuzz_len : (*__afl_fuzz_len = read(0, __afl_fuzz_alt_ptr, 1048576)) == 0xffffffff ? 0 : *__afl_fuzz_len)",
      "-D__AFL_LOOP(_A)=({ static volatile char *_B __attribute__((used));  _B = (char*)\"##SIG_AFL_PERSISTENT##\"; __attribute__((visibility(\"default\"))) int _L(unsigned int) __asm__(\"__afl_persistent_loop\"); _L(_A); })",
      "-D__AFL_INIT()=do { static volatile char *_A __attribute__((used));  _A = (char*)\"##SIG_AFL_DEFER_FORKSRV##\"; __attribute__((visibility(\"default\"))) void _I(void) __asm__(\"__afl_manual_init\"); _I(); } while (0)",
      "-Wno-unused-command-line-argument",
      "-o",
      ".libs/exc_20_32_table.o",
      "exc_20_32_table.c"
    ],
    "directory": "/root/dataset_fuzz/speex-Speex-1.2.1/libspeex",
    "file": "/root/dataset_fuzz/speex-Speex-1.2.1/libspeex/exc_20_32_table.c",
    "output": "/root/dataset_fuzz/speex-Speex-1.2.1/libspeex/.libs/exc_20_32_table.o"
  },
  {
    "arguments": [
      "/usr/lib/llvm-13/bin/clang",
      "-Wno-unused-command-line-argument",
      "-fno-experimental-new-pass-manager",
      "-Xclang",
      "-load",
      "-Xclang",
      "/usr/bin/../lib/afl//SanitizerCoveragePCGUARD.so",
      "-DHAVE_CONFIG_H",
      "-I.",
      "-I..",
      "-I../include",
      "-I../include/speex",
      "-I..",
      "-fsanitize=address",
      "-g",
      "-O1",
      "-fvisibility=hidden",
      "-Wall",
      "-c",
      "-g",
      "-funroll-loops",
      "-D__AFL_HAVE_MANUAL_CONTROL=1",
      "-D__AFL_COMPILER=1",
      "-DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION=1",
      "-D__AFL_FUZZ_INIT()=int __afl_sharedmem_fuzzing = 1;extern unsigned int *__afl_fuzz_len;extern unsigned char *__afl_fuzz_ptr;unsigned char __afl_fuzz_alt[1048576];unsigned char *__afl_fuzz_alt_ptr = __afl_fuzz_alt;",
      "-D__AFL_COVERAGE()=int __afl_selective_coverage = 1;void __afl_coverage_discard();void __afl_coverage_skip();void __afl_coverage_on();void __afl_coverage_off();",
      "-D__AFL_COVERAGE_START_OFF()=int __afl_selective_coverage_start_off = 1;",
      "-D__AFL_COVERAGE_ON()=__afl_coverage_on()",
      "-D__AFL_COVERAGE_OFF()=__afl_coverage_off()",
      "-D__AFL_COVERAGE_DISCARD()=__afl_coverage_discard()",
      "-D__AFL_COVERAGE_SKIP()=__afl_coverage_skip()",
      "-D__AFL_FUZZ_TESTCASE_BUF=(__afl_fuzz_ptr ? __afl_fuzz_ptr : __afl_fuzz_alt_ptr)",
      "-D__AFL_FUZZ_TESTCASE_LEN=(__afl_fuzz_ptr ? *__afl_fuzz_len : (*__afl_fuzz_len = read(0, __afl_fuzz_alt_ptr, 1048576)) == 0xffffffff ? 0 : *__afl_fuzz_len)",
      "-D__AFL_LOOP(_A)=({ static volatile char *_B __attribute__((used));  _B = (char*)\"##SIG_AFL_PERSISTENT##\"; __attribute__((visibility(\"default\"))) int _L(unsigned int) __asm__(\"__afl_persistent_loop\"); _L(_A); })",
      "-D__AFL_INIT()=do { static volatile char *_A __attribute__((used));  _A = (char*)\"##SIG_AFL_DEFER_FORKSRV##\"; __attribute__((visibility(\"default\"))) void _I(void) __asm__(\"__afl_manual_init\"); _I(); } while (0)",
      "-Wno-unused-command-line-argument",
      "-o",
      "exc_20_32_table.o",
      "exc_20_32_table.c"
    ],
    "directory": "/root/dataset_fuzz/speex-Speex-1.2.1/libspeex",
    "file": "/root/dataset_fuzz/speex-Speex-1.2.1/libspeex/exc_20_32_table.c",
    "output": "/root/dataset_fuzz/speex-Speex-1.2.1/libspeex/exc_20_32_table.o"
  },
  {
    "arguments": [
      "/usr/lib/llvm-13/bin/clang",
      "-Wno-unused-command-line-argument",
      "-fno-experimental-new-pass-manager",
      "-Xclang",
      "-load",
      "-Xclang",
      "/usr/bin/../lib/afl//SanitizerCoveragePCGUARD.so",
      "-DHAVE_CONFIG_H",
      "-I.",
      "-I..",
      "-I../include",
      "-I../include/speex",
      "-I..",
      "-fsanitize=address",
      "-g",
      "-O1",
      "-fvisibility=hidden",
      "-Wall",
      "-c",
      "-fPIC",
      "-DPIC",
      "-g",
      "-funroll-loops",
      "-D__AFL_HAVE_MANUAL_CONTROL=1",
      "-D__AFL_COMPILER=1",
      "-DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION=1",
      "-D__AFL_FUZZ_INIT()=int __afl_sharedmem_fuzzing = 1;extern unsigned int *__afl_fuzz_len;extern unsigned char *__afl_fuzz_ptr;unsigned char __afl_fuzz_alt[1048576];unsigned char *__afl_fuzz_alt_ptr = __afl_fuzz_alt;",
      "-D__AFL_COVERAGE()=int __afl_selective_coverage = 1;void __afl_coverage_discard();void __afl_coverage_skip();void __afl_coverage_on();void __afl_coverage_off();",
      "-D__AFL_COVERAGE_START_OFF()=int __afl_selective_coverage_start_off = 1;",
      "-D__AFL_COVERAGE_ON()=__afl_coverage_on()",
      "-D__AFL_COVERAGE_OFF()=__afl_coverage_off()",
      "-D__AFL_COVERAGE_DISCARD()=__afl_coverage_discard()",
      "-D__AFL_COVERAGE_SKIP()=__afl_coverage_skip()",
      "-D__AFL_FUZZ_TESTCASE_BUF=(__afl_fuzz_ptr ? __afl_fuzz_ptr : __afl_fuzz_alt_ptr)",
      "-D__AFL_FUZZ_TESTCASE_LEN=(__afl_fuzz_ptr ? *__afl_fuzz_len : (*__afl_fuzz_len = read(0, __afl_fuzz_alt_ptr, 1048576)) == 0xffffffff ? 0 : *__afl_fuzz_len)",
      "-D__AFL_LOOP(_A)=({ static volatile char *_B __attribute__((used));  _B = (char*)\"##SIG_AFL_PERSISTENT##\"; __attribute__((visibility(\"default\"))) int _L(unsigned int) __asm__(\"__afl_persistent_loop\"); _L(_A); })",
      "-D__AFL_INIT()=do { static volatile char *_A __attribute__((used));  _A = (char*)\"##SIG_AFL_DEFER_FORKSRV##\"; __attribute__((visibility(\"default\"))) void _I(void) __asm__(\"__afl_manual_init\"); _I(); } while (0)",
      "-Wno-unused-command-line-argument",
      "-o",
      ".libs/exc_5_256_table.o",
      "exc_5_256_table.c"
    ],
    "directory": "/root/dataset_fuzz/speex-Speex-1.2.1/libspeex",
    "file": "/root/dataset_fuzz/speex-Speex-1.2.1/libspeex/exc_5_256_table.c",
    "output": "/root/dataset_fuzz/speex-Speex-1.2.1/libspeex/.libs/exc_5_256_table.o"
  },
  {
    "arguments": [
      "/usr/lib/llvm-13/bin/clang",
      "-Wno-unused-command-line-argument",
      "-fno-experimental-new-pass-manager",
      "-Xclang",
      "-load",
      "-Xclang",
      "/usr/bin/../lib/afl//SanitizerCoveragePCGUARD.so",
      "-DHAVE_CONFIG_H",
      "-I.",
      "-I..",
      "-I../include",
      "-I../include/speex",
      "-I..",
      "-fsanitize=address",
      "-g",
      "-O1",
      "-fvisibility=hidden",
      "-Wall",
      "-c",
      "-g",
      "-funroll-loops",
      "-D__AFL_HAVE_MANUAL_CONTROL=1",
      "-D__AFL_COMPILER=1",
      "-DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION=1",
      "-D__AFL_FUZZ_INIT()=int __afl_sharedmem_fuzzing = 1;extern unsigned int *__afl_fuzz_len;extern unsigned char *__afl_fuzz_ptr;unsigned char __afl_fuzz_alt[1048576];unsigned char *__afl_fuzz_alt_ptr = __afl_fuzz_alt;",
      "-D__AFL_COVERAGE()=int __afl_selective_coverage = 1;void __afl_coverage_discard();void __afl_coverage_skip();void __afl_coverage_on();void __afl_coverage_off();",
      "-D__AFL_COVERAGE_START_OFF()=int __afl_selective_coverage_start_off = 1;",
      "-D__AFL_COVERAGE_ON()=__afl_coverage_on()",
      "-D__AFL_COVERAGE_OFF()=__afl_coverage_off()",
      "-D__AFL_COVERAGE_DISCARD()=__afl_coverage_discard()",
      "-D__AFL_COVERAGE_SKIP()=__afl_coverage_skip()",
      "-D__AFL_FUZZ_TESTCASE_BUF=(__afl_fuzz_ptr ? __afl_fuzz_ptr : __afl_fuzz_alt_ptr)",
      "-D__AFL_FUZZ_TESTCASE_LEN=(__afl_fuzz_ptr ? *__afl_fuzz_len : (*__afl_fuzz_len = read(0, __afl_fuzz_alt_ptr, 1048576)) == 0xffffffff ? 0 : *__afl_fuzz_len)",
      "-D__AFL_LOOP(_A)=({ static volatile char *_B __attribute__((used));  _B = (char*)\"##SIG_AFL_PERSISTENT##\"; __attribute__((visibility(\"default\"))) int _L(unsigned int) __asm__(\"__afl_persistent_loop\"); _L(_A); })",
      "-D__AFL_INIT()=do { static volatile char *_A __attribute__((used));  _A = (char*)\"##SIG_AFL_DEFER_FORKSRV##\"; __attribute__((visibility(\"default\"))) void _I(void) __asm__(\"__afl_manual_init\"); _I(); } while (0)",
      "-Wno-unused-command-line-argument",
      "-o",
      "exc_5_256_table.o",
      "exc_5_256_table.c"
    ],
    "directory": "/root/dataset_fuzz/speex-Speex-1.2.1/libspeex",
    "file": "/root/dataset_fuzz/speex-Speex-1.2.1/libspeex/exc_5_256_table.c",
    "output": "/root/dataset_fuzz/speex-Speex-1.2.1/libspeex/exc_5_256_table.o"
  },
  {
    "arguments": [
      "/usr/lib/llvm-13/bin/clang",
      "-Wno-unused-command-line-argument",
      "-fno-experimental-new-pass-manager",
      "-Xclang",
      "-load",
      "-Xclang",
      "/usr/bin/../lib/afl//SanitizerCoveragePCGUARD.so",
      "-DHAVE_CONFIG_H",
      "-I.",
      "-I..",
      "-I../include",
      "-I../include/speex",
      "-I..",
      "-fsanitize=address",
      "-g",
      "-O1",
      "-fvisibility=hidden",
      "-Wall",
      "-c",
      "-fPIC",
      "-DPIC",
      "-g",
      "-funroll-loops",
      "-D__AFL_HAVE_MANUAL_CONTROL=1",
      "-D__AFL_COMPILER=1",
      "-DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION=1",
      "-D__AFL_FUZZ_INIT()=int __afl_sharedmem_fuzzing = 1;extern unsigned int *__afl_fuzz_len;extern unsigned char *__afl_fuzz_ptr;unsigned char __afl_fuzz_alt[1048576];unsigned char *__afl_fuzz_alt_ptr = __afl_fuzz_alt;",
      "-D__AFL_COVERAGE()=int __afl_selective_coverage = 1;void __afl_coverage_discard();void __afl_coverage_skip();void __afl_coverage_on();void __afl_coverage_off();",
      "-D__AFL_COVERAGE_START_OFF()=int __afl_selective_coverage_start_off = 1;",
      "-D__AFL_COVERAGE_ON()=__afl_coverage_on()",
      "-D__AFL_COVERAGE_OFF()=__afl_coverage_off()",
      "-D__AFL_COVERAGE_DISCARD()=__afl_coverage_discard()",
      "-D__AFL_COVERAGE_SKIP()=__afl_coverage_skip()",
      "-D__AFL_FUZZ_TESTCASE_BUF=(__afl_fuzz_ptr ? __afl_fuzz_ptr : __afl_fuzz_alt_ptr)",
      "-D__AFL_FUZZ_TESTCASE_LEN=(__afl_fuzz_ptr ? *__afl_fuzz_len : (*__afl_fuzz_len = read(0, __afl_fuzz_alt_ptr, 1048576)) == 0xffffffff ? 0 : *__afl_fuzz_len)",
      "-D__AFL_LOOP(_A)=({ static volatile char *_B __attribute__((used));  _B = (char*)\"##SIG_AFL_PERSISTENT##\"; __attribute__((visibility(\"default\"))) int _L(unsigned int) __asm__(\"__afl_persistent_loop\"); _L(_A); })",
      "-D__AFL_INIT()=do { static volatile char *_A __attribute__((used));  _A = (char*)\"##SIG_AFL_DEFER_FORKSRV##\"; __attribute__((visibility(\"default\"))) void _I(void) __asm__(\"__afl_manual_init\"); _I(); } while (0)",
      "-Wno-unused-command-line-argument",
      "-o",
      ".libs/exc_5_64_table.o",
      "exc_5_64_table.c"
    ],
    "directory": "/root/dataset_fuzz/speex-Speex-1.2.1/libspeex",
    "file": "/root/dataset_fuzz/speex-Speex-1.2.1/libspeex/exc_5_64_table.c",
    "output": "/root/dataset_fuzz/speex-Speex-1.2.1/libspeex/.libs/exc_5_64_table.o"
  },
  {
    "arguments": [
      "/usr/lib/llvm-13/bin/clang",
      "-Wno-unused-command-line-argument",
      "-fno-experimental-new-pass-manager",
      "-Xclang",
      "-load",
      "-Xclang",
      "/usr/bin/../lib/afl//SanitizerCoveragePCGUARD.so",
      "-DHAVE_CONFIG_H",
      "-I.",
      "-I..",
      "-I../include",
      "-I../include/speex",
      "-I..",
      "-fsanitize=address",
      "-g",
      "-O1",
      "-fvisibility=hidden",
      "-Wall",
      "-c",
      "-g",
      "-funroll-loops",
      "-D__AFL_HAVE_MANUAL_CONTROL=1",
      "-D__AFL_COMPILER=1",
      "-DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION=1",
      "-D__AFL_FUZZ_INIT()=int __afl_sharedmem_fuzzing = 1;extern unsigned int *__afl_fuzz_len;extern unsigned char *__afl_fuzz_ptr;unsigned char __afl_fuzz_alt[1048576];unsigned char *__afl_fuzz_alt_ptr = __afl_fuzz_alt;",
      "-D__AFL_COVERAGE()=int __afl_selective_coverage = 1;void __afl_coverage_discard();void __afl_coverage_skip();void __afl_coverage_on();void __afl_coverage_off();",
      "-D__AFL_COVERAGE_START_OFF()=int __afl_selective_coverage_start_off = 1;",
      "-D__AFL_COVERAGE_ON()=__afl_coverage_on()",
      "-D__AFL_COVERAGE_OFF()=__afl_coverage_off()",
      "-D__AFL_COVERAGE_DISCARD()=__afl_coverage_discard()",
      "-D__AFL_COVERAGE_SKIP()=__afl_coverage_skip()",
      "-D__AFL_FUZZ_TESTCASE_BUF=(__afl_fuzz_ptr ? __afl_fuzz_ptr : __afl_fuzz_alt_ptr)",
      "-D__AFL_FUZZ_TESTCASE_LEN=(__afl_fuzz_ptr ? *__afl_fuzz_len : (*__afl_fuzz_len = read(0, __afl_fuzz_alt_ptr, 1048576)) == 0xffffffff ? 0 : *__afl_fuzz_len)",
      "-D__AFL_LOOP(_A)=({ static volatile char *_B __attribute__((used));  _B = (char*)\"##SIG_AFL_PERSISTENT##\"; __attribute__((visibility(\"default\"))) int _L(unsigned int) __asm__(\"__afl_persistent_loop\"); _L(_A); })",
      "-D__AFL_INIT()=do { static volatile char *_A __attribute__((used));  _A = (char*)\"##SIG_AFL_DEFER_FORKSRV##\"; __attribute__((visibility(\"default\"))) void _I(void) __asm__(\"__afl_manual_init\"); _I(); } while (0)",
      "-Wno-unused-command-line-argument",
      "-o",
      "exc_5_64_table.o",
      "exc_5_64_table.c"
    ],
    "directory": "/root/dataset_fuzz/speex-Speex-1.2.1/libspeex",
    "file": "/root/dataset_fuzz/speex-Speex-1.2.1/libspeex/exc_5_64_table.c",
    "output": "/root/dataset_fuzz/speex-Speex-1.2.1/libspeex/exc_5_64_table.o"
  },
  {
    "arguments": [
      "/usr/lib/llvm-13/bin/clang",
      "-Wno-unused-command-line-argument",
      "-fno-experimental-new-pass-manager",
      "-Xclang",
      "-load",
      "-Xclang",
      "/usr/bin/../lib/afl//SanitizerCoveragePCGUARD.so",
      "-DHAVE_CONFIG_H",
      "-I.",
      "-I..",
      "-I../include",
      "-I../include/speex",
      "-I..",
      "-fsanitize=address",
      "-g",
      "-O1",
      "-fvisibility=hidden",
      "-Wall",
      "-c",
      "-fPIC",
      "-DPIC",
      "-g",
      "-funroll-loops",
      "-D__AFL_HAVE_MANUAL_CONTROL=1",
      "-D__AFL_COMPILER=1",
      "-DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION=1",
      "-D__AFL_FUZZ_INIT()=int __afl_sharedmem_fuzzing = 1;extern unsigned int *__afl_fuzz_len;extern unsigned char *__afl_fuzz_ptr;unsigned char __afl_fuzz_alt[1048576];unsigned char *__afl_fuzz_alt_ptr = __afl_fuzz_alt;",
      "-D__AFL_COVERAGE()=int __afl_selective_coverage = 1;void __afl_coverage_discard();void __afl_coverage_skip();void __afl_coverage_on();void __afl_coverage_off();",
      "-D__AFL_COVERAGE_START_OFF()=int __afl_selective_coverage_start_off = 1;",
      "-D__AFL_COVERAGE_ON()=__afl_coverage_on()",
      "-D__AFL_COVERAGE_OFF()=__afl_coverage_off()",
      "-D__AFL_COVERAGE_DISCARD()=__afl_coverage_discard()",
      "-D__AFL_COVERAGE_SKIP()=__afl_coverage_skip()",
      "-D__AFL_FUZZ_TESTCASE_BUF=(__afl_fuzz_ptr ? __afl_fuzz_ptr : __afl_fuzz_alt_ptr)",
      "-D__AFL_FUZZ_TESTCASE_LEN=(__afl_fuzz_ptr ? *__afl_fuzz_len : (*__afl_fuzz_len = read(0, __afl_fuzz_alt_ptr, 1048576)) == 0xffffffff ? 0 : *__afl_fuzz_len)",
      "-D__AFL_LOOP(_A)=({ static volatile char *_B __attribute__((used));  _B = (char*)\"##SIG_AFL_PERSISTENT##\"; __attribute__((visibility(\"default\"))) int _L(unsigned int) __asm__(\"__afl_persistent_loop\"); _L(_A); })",
      "-D__AFL_INIT()=do { static volatile char *_A __attribute__((used));  _A = (char*)\"##SIG_AFL_DEFER_FORKSRV##\"; __attribute__((visibility(\"default\"))) void _I(void) __asm__(\"__afl_manual_init\"); _I(); } while (0)",
      "-Wno-unused-command-line-argument",
      "-o",
      ".libs/gain_table_lbr.o",
      "gain_table_lbr.c"
    ],
    "directory": "/root/dataset_fuzz/speex-Speex-1.2.1/libspeex",
    "file": "/root/dataset_fuzz/speex-Speex-1.2.1/libspeex/gain_table_lbr.c",
    "output": "/root/dataset_fuzz/speex-Speex-1.2.1/libspeex/.libs/gain_table_lbr.o"
  },
  {
    "arguments": [
      "/usr/lib/llvm-13/bin/clang",
      "-Wno-unused-command-line-argument",
      "-fno-experimental-new-pass-manager",
      "-Xclang",
      "-load",
      "-Xclang",
      "/usr/bin/../lib/afl//SanitizerCoveragePCGUARD.so",
      "-DHAVE_CONFIG_H",
      "-I.",
      "-I..",
      "-I../include",
      "-I../include/speex",
      "-I..",
      "-fsanitize=address",
      "-g",
      "-O1",
      "-fvisibility=hidden",
      "-Wall",
      "-c",
      "-g",
      "-funroll-loops",
      "-D__AFL_HAVE_MANUAL_CONTROL=1",
      "-D__AFL_COMPILER=1",
      "-DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION=1",
      "-D__AFL_FUZZ_INIT()=int __afl_sharedmem_fuzzing = 1;extern unsigned int *__afl_fuzz_len;extern unsigned char *__afl_fuzz_ptr;unsigned char __afl_fuzz_alt[1048576];unsigned char *__afl_fuzz_alt_ptr = __afl_fuzz_alt;",
      "-D__AFL_COVERAGE()=int __afl_selective_coverage = 1;void __afl_coverage_discard();void __afl_coverage_skip();void __afl_coverage_on();void __afl_coverage_off();",
      "-D__AFL_COVERAGE_START_OFF()=int __afl_selective_coverage_start_off = 1;",
      "-D__AFL_COVERAGE_ON()=__afl_coverage_on()",
      "-D__AFL_COVERAGE_OFF()=__afl_coverage_off()",
      "-D__AFL_COVERAGE_DISCARD()=__afl_coverage_discard()",
      "-D__AFL_COVERAGE_SKIP()=__afl_coverage_skip()",
      "-D__AFL_FUZZ_TESTCASE_BUF=(__afl_fuzz_ptr ? __afl_fuzz_ptr : __afl_fuzz_alt_ptr)",
      "-D__AFL_FUZZ_TESTCASE_LEN=(__afl_fuzz_ptr ? *__afl_fuzz_len : (*__afl_fuzz_len = read(0, __afl_fuzz_alt_ptr, 1048576)) == 0xffffffff ? 0 : *__afl_fuzz_len)",
      "-D__AFL_LOOP(_A)=({ static volatile char *_B __attribute__((used));  _B = (char*)\"##SIG_AFL_PERSISTENT##\"; __attribute__((visibility(\"default\"))) int _L(unsigned int) __asm__(\"__afl_persistent_loop\"); _L(_A); })",
      "-D__AFL_INIT()=do { static volatile char *_A __attribute__((used));  _A = (char*)\"##SIG_AFL_DEFER_FORKSRV##\"; __attribute__((visibility(\"default\"))) void _I(void) __asm__(\"__afl_manual_init\"); _I(); } while (0)",
      "-Wno-unused-command-line-argument",
      "-o",
      "gain_table_lbr.o",
      "gain_table_lbr.c"
    ],
    "directory": "/root/dataset_fuzz/speex-Speex-1.2.1/libspeex",
    "file": "/root/dataset_fuzz/speex-Speex-1.2.1/libspeex/gain_table_lbr.c",
    "output": "/root/dataset_fuzz/speex-Speex-1.2.1/libspeex/gain_table_lbr.o"
  },
  {
    "arguments": [
      "/usr/lib/llvm-13/bin/clang",
      "-Wno-unused-command-line-argument",
      "-fno-experimental-new-pass-manager",
      "-Xclang",
      "-load",
      "-Xclang",
      "/usr/bin/../lib/afl//SanitizerCoveragePCGUARD.so",
      "-DHAVE_CONFIG_H",
      "-I.",
      "-I..",
      "-I../include",
      "-I../include/speex",
      "-I..",
      "-fsanitize=address",
      "-g",
      "-O1",
      "-fvisibility=hidden",
      "-Wall",
      "-c",
      "-fPIC",
      "-DPIC",
      "-g",
      "-funroll-loops",
      "-D__AFL_HAVE_MANUAL_CONTROL=1",
      "-D__AFL_COMPILER=1",
      "-DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION=1",
      "-D__AFL_FUZZ_INIT()=int __afl_sharedmem_fuzzing = 1;extern unsigned int *__afl_fuzz_len;extern unsigned char *__afl_fuzz_ptr;unsigned char __afl_fuzz_alt[1048576];unsigned char *__afl_fuzz_alt_ptr = __afl_fuzz_alt;",
      "-D__AFL_COVERAGE()=int __afl_selective_coverage = 1;void __afl_coverage_discard();void __afl_coverage_skip();void __afl_coverage_on();void __afl_coverage_off();",
      "-D__AFL_COVERAGE_START_OFF()=int __afl_selective_coverage_start_off = 1;",
      "-D__AFL_COVERAGE_ON()=__afl_coverage_on()",
      "-D__AFL_COVERAGE_OFF()=__afl_coverage_off()",
      "-D__AFL_COVERAGE_DISCARD()=__afl_coverage_discard()",
      "-D__AFL_COVERAGE_SKIP()=__afl_coverage_skip()",
      "-D__AFL_FUZZ_TESTCASE_BUF=(__afl_fuzz_ptr ? __afl_fuzz_ptr : __afl_fuzz_alt_ptr)",
      "-D__AFL_FUZZ_TESTCASE_LEN=(__afl_fuzz_ptr ? *__afl_fuzz_len : (*__afl_fuzz_len = read(0, __afl_fuzz_alt_ptr, 1048576)) == 0xffffffff ? 0 : *__afl_fuzz_len)",
      "-D__AFL_LOOP(_A)=({ static volatile char *_B __attribute__((used));  _B = (char*)\"##SIG_AFL_PERSISTENT##\"; __attribute__((visibility(\"default\"))) int _L(unsigned int) __asm__(\"__afl_persistent_loop\"); _L(_A); })",
      "-D__AFL_INIT()=do { static volatile char *_A __attribute__((used));  _A = (char*)\"##SIG_AFL_DEFER_FORKSRV##\"; __attribute__((visibility(\"default\"))) void _I(void) __asm__(\"__afl_manual_init\"); _I(); } while (0)",
      "-Wno-unused-command-line-argument",
      "-o",
      ".libs/hexc_10_32_table.o",
      "hexc_10_32_table.c"
    ],
    "directory": "/root/dataset_fuzz/speex-Speex-1.2.1/libspeex",
    "file": "/root/dataset_fuzz/speex-Speex-1.2.1/libspeex/hexc_10_32_table.c",
    "output": "/root/dataset_fuzz/speex-Speex-1.2.1/libspeex/.libs/hexc_10_32_table.o"
  },
  {
    "arguments": [
      "/usr/lib/llvm-13/bin/clang",
      "-Wno-unused-command-line-argument",
      "-fno-experimental-new-pass-manager",
      "-Xclang",
      "-load",
      "-Xclang",
      "/usr/bin/../lib/afl//SanitizerCoveragePCGUARD.so",
      "-DHAVE_CONFIG_H",
      "-I.",
      "-I..",
      "-I../include",
      "-I../include/speex",
      "-I..",
      "-fsanitize=address",
      "-g",
      "-O1",
      "-fvisibility=hidden",
      "-Wall",
      "-c",
      "-g",
      "-funroll-loops",
      "-D__AFL_HAVE_MANUAL_CONTROL=1",
      "-D__AFL_COMPILER=1",
      "-DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION=1",
      "-D__AFL_FUZZ_INIT()=int __afl_sharedmem_fuzzing = 1;extern unsigned int *__afl_fuzz_len;extern unsigned char *__afl_fuzz_ptr;unsigned char __afl_fuzz_alt[1048576];unsigned char *__afl_fuzz_alt_ptr = __afl_fuzz_alt;",
      "-D__AFL_COVERAGE()=int __afl_selective_coverage = 1;void __afl_coverage_discard();void __afl_coverage_skip();void __afl_coverage_on();void __afl_coverage_off();",
      "-D__AFL_COVERAGE_START_OFF()=int __afl_selective_coverage_start_off = 1;",
      "-D__AFL_COVERAGE_ON()=__afl_coverage_on()",
      "-D__AFL_COVERAGE_OFF()=__afl_coverage_off()",
      "-D__AFL_COVERAGE_DISCARD()=__afl_coverage_discard()",
      "-D__AFL_COVERAGE_SKIP()=__afl_coverage_skip()",
      "-D__AFL_FUZZ_TESTCASE_BUF=(__afl_fuzz_ptr ? __afl_fuzz_ptr : __afl_fuzz_alt_ptr)",
      "-D__AFL_FUZZ_TESTCASE_LEN=(__afl_fuzz_ptr ? *__afl_fuzz_len : (*__afl_fuzz_len = read(0, __afl_fuzz_alt_ptr, 1048576)) == 0xffffffff ? 0 : *__afl_fuzz_len)",
      "-D__AFL_LOOP(_A)=({ static volatile char *_B __attribute__((used));  _B = (char*)\"##SIG_AFL_PERSISTENT##\"; __attribute__((visibility(\"default\"))) int _L(unsigned int) __asm__(\"__afl_persistent_loop\"); _L(_A); })",
      "-D__AFL_INIT()=do { static volatile char *_A __attribute__((used));  _A = (char*)\"##SIG_AFL_DEFER_FORKSRV##\"; __attribute__((visibility(\"default\"))) void _I(void) __asm__(\"__afl_manual_init\"); _I(); } while (0)",
      "-Wno-unused-command-line-argument",
      "-o",
      "hexc_10_32_table.o",
      "hexc_10_32_table.c"
    ],
    "directory": "/root/dataset_fuzz/speex-Speex-1.2.1/libspeex",
    "file": "/root/dataset_fuzz/speex-Speex-1.2.1/libspeex/hexc_10_32_table.c",
    "output": "/root/dataset_fuzz/speex-Speex-1.2.1/libspeex/hexc_10_32_table.o"
  },
  {
    "arguments": [
      "/usr/lib/llvm-13/bin/clang",
      "-Wno-unused-command-line-argument",
      "-fno-experimental-new-pass-manager",
      "-Xclang",
      "-load",
      "-Xclang",
      "/usr/bin/../lib/afl//SanitizerCoveragePCGUARD.so",
      "-DHAVE_CONFIG_H",
      "-I.",
      "-I..",
      "-I../include",
      "-I../include/speex",
      "-I..",
      "-fsanitize=address",
      "-g",
      "-O1",
      "-fvisibility=hidden",
      "-Wall",
      "-c",
      "-fPIC",
      "-DPIC",
      "-g",
      "-funroll-loops",
      "-D__AFL_HAVE_MANUAL_CONTROL=1",
      "-D__AFL_COMPILER=1",
      "-DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION=1",
      "-D__AFL_FUZZ_INIT()=int __afl_sharedmem_fuzzing = 1;extern unsigned int *__afl_fuzz_len;extern unsigned char *__afl_fuzz_ptr;unsigned char __afl_fuzz_alt[1048576];unsigned char *__afl_fuzz_alt_ptr = __afl_fuzz_alt;",
      "-D__AFL_COVERAGE()=int __afl_selective_coverage = 1;void __afl_coverage_discard();void __afl_coverage_skip();void __afl_coverage_on();void __afl_coverage_off();",
      "-D__AFL_COVERAGE_START_OFF()=int __afl_selective_coverage_start_off = 1;",
      "-D__AFL_COVERAGE_ON()=__afl_coverage_on()",
      "-D__AFL_COVERAGE_OFF()=__afl_coverage_off()",
      "-D__AFL_COVERAGE_DISCARD()=__afl_coverage_discard()",
      "-D__AFL_COVERAGE_SKIP()=__afl_coverage_skip()",
      "-D__AFL_FUZZ_TESTCASE_BUF=(__afl_fuzz_ptr ? __afl_fuzz_ptr : __afl_fuzz_alt_ptr)",
      "-D__AFL_FUZZ_TESTCASE_LEN=(__afl_fuzz_ptr ? *__afl_fuzz_len : (*__afl_fuzz_len = read(0, __afl_fuzz_alt_ptr, 1048576)) == 0xffffffff ? 0 : *__afl_fuzz_len)",
      "-D__AFL_LOOP(_A)=({ static volatile char *_B __attribute__((used));  _B = (char*)\"##SIG_AFL_PERSISTENT##\"; __attribute__((visibility(\"default\"))) int _L(unsigned int) __asm__(\"__afl_persistent_loop\"); _L(_A); })",
      "-D__AFL_INIT()=do { static volatile char *_A __attribute__((used));  _A = (char*)\"##SIG_AFL_DEFER_FORKSRV##\"; __attribute__((visibility(\"default\"))) void _I(void) __asm__(\"__afl_manual_init\"); _I(); } while (0)",
      "-Wno-unused-command-line-argument",
      "-o",
      ".libs/lpc.o",
      "lpc.c"
    ],
    "directory": "/root/dataset_fuzz/speex-Speex-1.2.1/libspeex",
    "file": "/root/dataset_fuzz/speex-Speex-1.2.1/libspeex/lpc.c",
    "output": "/root/dataset_fuzz/speex-Speex-1.2.1/libspeex/.libs/lpc.o"
  },
  {
    "arguments": [
      "/usr/lib/llvm-13/bin/clang",
      "-Wno-unused-command-line-argument",
      "-fno-experimental-new-pass-manager",
      "-Xclang",
      "-load",
      "-Xclang",
      "/usr/bin/../lib/afl//SanitizerCoveragePCGUARD.so",
      "-DHAVE_CONFIG_H",
      "-I.",
      "-I..",
      "-I../include",
      "-I../include/speex",
      "-I..",
      "-fsanitize=address",
      "-g",
      "-O1",
      "-fvisibility=hidden",
      "-Wall",
      "-c",
      "-g",
      "-funroll-loops",
      "-D__AFL_HAVE_MANUAL_CONTROL=1",
      "-D__AFL_COMPILER=1",
      "-DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION=1",
      "-D__AFL_FUZZ_INIT()=int __afl_sharedmem_fuzzing = 1;extern unsigned int *__afl_fuzz_len;extern unsigned char *__afl_fuzz_ptr;unsigned char __afl_fuzz_alt[1048576];unsigned char *__afl_fuzz_alt_ptr = __afl_fuzz_alt;",
      "-D__AFL_COVERAGE()=int __afl_selective_coverage = 1;void __afl_coverage_discard();void __afl_coverage_skip();void __afl_coverage_on();void __afl_coverage_off();",
      "-D__AFL_COVERAGE_START_OFF()=int __afl_selective_coverage_start_off = 1;",
      "-D__AFL_COVERAGE_ON()=__afl_coverage_on()",
      "-D__AFL_COVERAGE_OFF()=__afl_coverage_off()",
      "-D__AFL_COVERAGE_DISCARD()=__afl_coverage_discard()",
      "-D__AFL_COVERAGE_SKIP()=__afl_coverage_skip()",
      "-D__AFL_FUZZ_TESTCASE_BUF=(__afl_fuzz_ptr ? __afl_fuzz_ptr : __afl_fuzz_alt_ptr)",
      "-D__AFL_FUZZ_TESTCASE_LEN=(__afl_fuzz_ptr ? *__afl_fuzz_len : (*__afl_fuzz_len = read(0, __afl_fuzz_alt_ptr, 1048576)) == 0xffffffff ? 0 : *__afl_fuzz_len)",
      "-D__AFL_LOOP(_A)=({ static volatile char *_B __attribute__((used));  _B = (char*)\"##SIG_AFL_PERSISTENT##\"; __attribute__((visibility(\"default\"))) int _L(unsigned int) __asm__(\"__afl_persistent_loop\"); _L(_A); })",
      "-D__AFL_INIT()=do { static volatile char *_A __attribute__((used));  _A = (char*)\"##SIG_AFL_DEFER_FORKSRV##\"; __attribute__((visibility(\"default\"))) void _I(void) __asm__(\"__afl_manual_init\"); _I(); } while (0)",
      "-Wno-unused-command-line-argument",
      "-o",
      "lpc.o",
      "lpc.c"
    ],
    "directory": "/root/dataset_fuzz/speex-Speex-1.2.1/libspeex",
    "file": "/root/dataset_fuzz/speex-Speex-1.2.1/libspeex/lpc.c",
    "output": "/root/dataset_fuzz/speex-Speex-1.2.1/libspeex/lpc.o"
  },
  {
    "arguments": [
      "/usr/lib/llvm-13/bin/clang",
      "-Wno-unused-command-line-argument",
      "-fno-experimental-new-pass-manager",
      "-Xclang",
      "-load",
      "-Xclang",
      "/usr/bin/../lib/afl//SanitizerCoveragePCGUARD.so",
      "-DHAVE_CONFIG_H",
      "-I.",
      "-I..",
      "-I../include",
      "-I../include/speex",
      "-I..",
      "-fsanitize=address",
      "-g",
      "-O1",
      "-fvisibility=hidden",
      "-Wall",
      "-c",
      "-fPIC",
      "-DPIC",
      "-g",
      "-funroll-loops",
      "-D__AFL_HAVE_MANUAL_CONTROL=1",
      "-D__AFL_COMPILER=1",
      "-DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION=1",
      "-D__AFL_FUZZ_INIT()=int __afl_sharedmem_fuzzing = 1;extern unsigned int *__afl_fuzz_len;extern unsigned char *__afl_fuzz_ptr;unsigned char __afl_fuzz_alt[1048576];unsigned char *__afl_fuzz_alt_ptr = __afl_fuzz_alt;",
      "-D__AFL_COVERAGE()=int __afl_selective_coverage = 1;void __afl_coverage_discard();void __afl_coverage_skip();void __afl_coverage_on();void __afl_coverage_off();",
      "-D__AFL_COVERAGE_START_OFF()=int __afl_selective_coverage_start_off = 1;",
      "-D__AFL_COVERAGE_ON()=__afl_coverage_on()",
      "-D__AFL_COVERAGE_OFF()=__afl_coverage_off()",
      "-D__AFL_COVERAGE_DISCARD()=__afl_coverage_discard()",
      "-D__AFL_COVERAGE_SKIP()=__afl_coverage_skip()",
      "-D__AFL_FUZZ_TESTCASE_BUF=(__afl_fuzz_ptr ? __afl_fuzz_ptr : __afl_fuzz_alt_ptr)",
      "-D__AFL_FUZZ_TESTCASE_LEN=(__afl_fuzz_ptr ? *__afl_fuzz_len : (*__afl_fuzz_len = read(0, __afl_fuzz_alt_ptr, 1048576)) == 0xffffffff ? 0 : *__afl_fuzz_len)",
      "-D__AFL_LOOP(_A)=({ static volatile char *_B __attribute__((used));  _B = (char*)\"##SIG_AFL_PERSISTENT##\"; __attribute__((visibility(\"default\"))) int _L(unsigned int) __asm__(\"__afl_persistent_loop\"); _L(_A); })",
      "-D__AFL_INIT()=do { static volatile char *_A __attribute__((used));  _A = (char*)\"##SIG_AFL_DEFER_FORKSRV##\"; __attribute__((visibility(\"default\"))) void _I(void) __asm__(\"__afl_manual_init\"); _I(); } while (0)",
      "-Wno-unused-command-line-argument",
      "-o",
      ".libs/lsp_tables_nb.o",
      "lsp_tables_nb.c"
    ],
    "directory": "/root/dataset_fuzz/speex-Speex-1.2.1/libspeex",
    "file": "/root/dataset_fuzz/speex-Speex-1.2.1/libspeex/lsp_tables_nb.c",
    "output": "/root/dataset_fuzz/speex-Speex-1.2.1/libspeex/.libs/lsp_tables_nb.o"
  },
  {
    "arguments": [
      "/usr/lib/llvm-13/bin/clang",
      "-Wno-unused-command-line-argument",
      "-fno-experimental-new-pass-manager",
      "-Xclang",
      "-load",
      "-Xclang",
      "/usr/bin/../lib/afl//SanitizerCoveragePCGUARD.so",
      "-DHAVE_CONFIG_H",
      "-I.",
      "-I..",
      "-I../include",
      "-I../include/speex",
      "-I..",
      "-fsanitize=address",
      "-g",
      "-O1",
      "-fvisibility=hidden",
      "-Wall",
      "-c",
      "-g",
      "-funroll-loops",
      "-D__AFL_HAVE_MANUAL_CONTROL=1",
      "-D__AFL_COMPILER=1",
      "-DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION=1",
      "-D__AFL_FUZZ_INIT()=int __afl_sharedmem_fuzzing = 1;extern unsigned int *__afl_fuzz_len;extern unsigned char *__afl_fuzz_ptr;unsigned char __afl_fuzz_alt[1048576];unsigned char *__afl_fuzz_alt_ptr = __afl_fuzz_alt;",
      "-D__AFL_COVERAGE()=int __afl_selective_coverage = 1;void __afl_coverage_discard();void __afl_coverage_skip();void __afl_coverage_on();void __afl_coverage_off();",
      "-D__AFL_COVERAGE_START_OFF()=int __afl_selective_coverage_start_off = 1;",
      "-D__AFL_COVERAGE_ON()=__afl_coverage_on()",
      "-D__AFL_COVERAGE_OFF()=__afl_coverage_off()",
      "-D__AFL_COVERAGE_DISCARD()=__afl_coverage_discard()",
      "-D__AFL_COVERAGE_SKIP()=__afl_coverage_skip()",
      "-D__AFL_FUZZ_TESTCASE_BUF=(__afl_fuzz_ptr ? __afl_fuzz_ptr : __afl_fuzz_alt_ptr)",
      "-D__AFL_FUZZ_TESTCASE_LEN=(__afl_fuzz_ptr ? *__afl_fuzz_len : (*__afl_fuzz_len = read(0, __afl_fuzz_alt_ptr, 1048576)) == 0xffffffff ? 0 : *__afl_fuzz_len)",
      "-D__AFL_LOOP(_A)=({ static volatile char *_B __attribute__((used));  _B = (char*)\"##SIG_AFL_PERSISTENT##\"; __attribute__((visibility(\"default\"))) int _L(unsigned int) __asm__(\"__afl_persistent_loop\"); _L(_A); })",
      "-D__AFL_INIT()=do { static volatile char *_A __attribute__((used));  _A = (char*)\"##SIG_AFL_DEFER_FORKSRV##\"; __attribute__((visibility(\"default\"))) void _I(void) __asm__(\"__afl_manual_init\"); _I(); } while (0)",
      "-Wno-unused-command-line-argument",
      "-o",
      "lsp_tables_nb.o",
      "lsp_tables_nb.c"
    ],
    "directory": "/root/dataset_fuzz/speex-Speex-1.2.1/libspeex",
    "file": "/root/dataset_fuzz/speex-Speex-1.2.1/libspeex/lsp_tables_nb.c",
    "output": "/root/dataset_fuzz/speex-Speex-1.2.1/libspeex/lsp_tables_nb.o"
  },
  {
    "arguments": [
      "/usr/lib/llvm-13/bin/clang",
      "-Wno-unused-command-line-argument",
      "-fno-experimental-new-pass-manager",
      "-Xclang",
      "-load",
      "-Xclang",
      "/usr/bin/../lib/afl//SanitizerCoveragePCGUARD.so",
      "-DHAVE_CONFIG_H",
      "-I.",
      "-I..",
      "-I../include",
      "-I../include/speex",
      "-I..",
      "-fsanitize=address",
      "-g",
      "-O1",
      "-fvisibility=hidden",
      "-Wall",
      "-c",
      "-fPIC",
      "-DPIC",
      "-g",
      "-funroll-loops",
      "-D__AFL_HAVE_MANUAL_CONTROL=1",
      "-D__AFL_COMPILER=1",
      "-DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION=1",
      "-D__AFL_FUZZ_INIT()=int __afl_sharedmem_fuzzing = 1;extern unsigned int *__afl_fuzz_len;extern unsigned char *__afl_fuzz_ptr;unsigned char __afl_fuzz_alt[1048576];unsigned char *__afl_fuzz_alt_ptr = __afl_fuzz_alt;",
      "-D__AFL_COVERAGE()=int __afl_selective_coverage = 1;void __afl_coverage_discard();void __afl_coverage_skip();void __afl_coverage_on();void __afl_coverage_off();",
      "-D__AFL_COVERAGE_START_OFF()=int __afl_selective_coverage_start_off = 1;",
      "-D__AFL_COVERAGE_ON()=__afl_coverage_on()",
      "-D__AFL_COVERAGE_OFF()=__afl_coverage_off()",
      "-D__AFL_COVERAGE_DISCARD()=__afl_coverage_discard()",
      "-D__AFL_COVERAGE_SKIP()=__afl_coverage_skip()",
      "-D__AFL_FUZZ_TESTCASE_BUF=(__afl_fuzz_ptr ? __afl_fuzz_ptr : __afl_fuzz_alt_ptr)",
      "-D__AFL_FUZZ_TESTCASE_LEN=(__afl_fuzz_ptr ? *__afl_fuzz_len : (*__afl_fuzz_len = read(0, __afl_fuzz_alt_ptr, 1048576)) == 0xffffffff ? 0 : *__afl_fuzz_len)",
      "-D__AFL_LOOP(_A)=({ static volatile char *_B __attribute__((used));  _B = (char*)\"##SIG_AFL_PERSISTENT##\"; __attribute__((visibility(\"default\"))) int _L(unsigned int) __asm__(\"__afl_persistent_loop\"); _L(_A); })",
      "-D__AFL_INIT()=do { static volatile char *_A __attribute__((used));  _A = (char*)\"##SIG_AFL_DEFER_FORKSRV##\"; __attribute__((visibility(\"default\"))) void _I(void) __asm__(\"__afl_manual_init\"); _I(); } while (0)",
      "-Wno-unused-command-line-argument",
      "-o",
      ".libs/modes.o",
      "modes.c"
    ],
    "directory": "/root/dataset_fuzz/speex-Speex-1.2.1/libspeex",
    "file": "/root/dataset_fuzz/speex-Speex-1.2.1/libspeex/modes.c",
    "output": "/root/dataset_fuzz/speex-Speex-1.2.1/libspeex/.libs/modes.o"
  },
  {
    "arguments": [
      "/usr/lib/llvm-13/bin/clang",
      "-Wno-unused-command-line-argument",
      "-fno-experimental-new-pass-manager",
      "-Xclang",
      "-load",
      "-Xclang",
      "/usr/bin/../lib/afl//SanitizerCoveragePCGUARD.so",
      "-DHAVE_CONFIG_H",
      "-I.",
      "-I..",
      "-I../include",
      "-I../include/speex",
      "-I..",
      "-fsanitize=address",
      "-g",
      "-O1",
      "-fvisibility=hidden",
      "-Wall",
      "-c",
      "-g",
      "-funroll-loops",
      "-D__AFL_HAVE_MANUAL_CONTROL=1",
      "-D__AFL_COMPILER=1",
      "-DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION=1",
      "-D__AFL_FUZZ_INIT()=int __afl_sharedmem_fuzzing = 1;extern unsigned int *__afl_fuzz_len;extern unsigned char *__afl_fuzz_ptr;unsigned char __afl_fuzz_alt[1048576];unsigned char *__afl_fuzz_alt_ptr = __afl_fuzz_alt;",
      "-D__AFL_COVERAGE()=int __afl_selective_coverage = 1;void __afl_coverage_discard();void __afl_coverage_skip();void __afl_coverage_on();void __afl_coverage_off();",
      "-D__AFL_COVERAGE_START_OFF()=int __afl_selective_coverage_start_off = 1;",
      "-D__AFL_COVERAGE_ON()=__afl_coverage_on()",
      "-D__AFL_COVERAGE_OFF()=__afl_coverage_off()",
      "-D__AFL_COVERAGE_DISCARD()=__afl_coverage_discard()",
      "-D__AFL_COVERAGE_SKIP()=__afl_coverage_skip()",
      "-D__AFL_FUZZ_TESTCASE_BUF=(__afl_fuzz_ptr ? __afl_fuzz_ptr : __afl_fuzz_alt_ptr)",
      "-D__AFL_FUZZ_TESTCASE_LEN=(__afl_fuzz_ptr ? *__afl_fuzz_len : (*__afl_fuzz_len = read(0, __afl_fuzz_alt_ptr, 1048576)) == 0xffffffff ? 0 : *__afl_fuzz_len)",
      "-D__AFL_LOOP(_A)=({ static volatile char *_B __attribute__((used));  _B = (char*)\"##SIG_AFL_PERSISTENT##\"; __attribute__((visibility(\"default\"))) int _L(unsigned int) __asm__(\"__afl_persistent_loop\"); _L(_A); })",
      "-D__AFL_INIT()=do { static volatile char *_A __attribute__((used));  _A = (char*)\"##SIG_AFL_DEFER_FORKSRV##\"; __attribute__((visibility(\"default\"))) void _I(void) __asm__(\"__afl_manual_init\"); _I(); } while (0)",
      "-Wno-unused-command-line-argument",
      "-o",
      "modes.o",
      "modes.c"
    ],
    "directory": "/root/dataset_fuzz/speex-Speex-1.2.1/libspeex",
    "file": "/root/dataset_fuzz/speex-Speex-1.2.1/libspeex/modes.c",
    "output": "/root/dataset_fuzz/speex-Speex-1.2.1/libspeex/modes.o"
  },
  {
    "arguments": [
      "/usr/lib/llvm-13/bin/clang",
      "-Wno-unused-command-line-argument",
      "-fno-experimental-new-pass-manager",
      "-Xclang",
      "-load",
      "-Xclang",
      "/usr/bin/../lib/afl//SanitizerCoveragePCGUARD.so",
      "-DHAVE_CONFIG_H",
      "-I.",
      "-I..",
      "-I../include",
      "-I../include/speex",
      "-I..",
      "-fsanitize=address",
      "-g",
      "-O1",
      "-fvisibility=hidden",
      "-Wall",
      "-c",
      "-fPIC",
      "-DPIC",
      "-g",
      "-funroll-loops",
      "-D__AFL_HAVE_MANUAL_CONTROL=1",
      "-D__AFL_COMPILER=1",
      "-DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION=1",
      "-D__AFL_FUZZ_INIT()=int __afl_sharedmem_fuzzing = 1;extern unsigned int *__afl_fuzz_len;extern unsigned char *__afl_fuzz_ptr;unsigned char __afl_fuzz_alt[1048576];unsigned char *__afl_fuzz_alt_ptr = __afl_fuzz_alt;",
      "-D__AFL_COVERAGE()=int __afl_selective_coverage = 1;void __afl_coverage_discard();void __afl_coverage_skip();void __afl_coverage_on();void __afl_coverage_off();",
      "-D__AFL_COVERAGE_START_OFF()=int __afl_selective_coverage_start_off = 1;",
      "-D__AFL_COVERAGE_ON()=__afl_coverage_on()",
      "-D__AFL_COVERAGE_OFF()=__afl_coverage_off()",
      "-D__AFL_COVERAGE_DISCARD()=__afl_coverage_discard()",
      "-D__AFL_COVERAGE_SKIP()=__afl_coverage_skip()",
      "-D__AFL_FUZZ_TESTCASE_BUF=(__afl_fuzz_ptr ? __afl_fuzz_ptr : __afl_fuzz_alt_ptr)",
      "-D__AFL_FUZZ_TESTCASE_LEN=(__afl_fuzz_ptr ? *__afl_fuzz_len : (*__afl_fuzz_len = read(0, __afl_fuzz_alt_ptr, 1048576)) == 0xffffffff ? 0 : *__afl_fuzz_len)",
      "-D__AFL_LOOP(_A)=({ static volatile char *_B __attribute__((used));  _B = (char*)\"##SIG_AFL_PERSISTENT##\"; __attribute__((visibility(\"default\"))) int _L(unsigned int) __asm__(\"__afl_persistent_loop\"); _L(_A); })",
      "-D__AFL_INIT()=do { static volatile char *_A __attribute__((used));  _A = (char*)\"##SIG_AFL_DEFER_FORKSRV##\"; __attribute__((visibility(\"default\"))) void _I(void) __asm__(\"__afl_manual_init\"); _I(); } while (0)",
      "-Wno-unused-command-line-argument",
      "-o",
      ".libs/modes_wb.o",
      "modes_wb.c"
    ],
    "directory": "/root/dataset_fuzz/speex-Speex-1.2.1/libspeex",
    "file": "/root/dataset_fuzz/speex-Speex-1.2.1/libspeex/modes_wb.c",
    "output": "/root/dataset_fuzz/speex-Speex-1.2.1/libspeex/.libs/modes_wb.o"
  },
  {
    "arguments": [
      "/usr/lib/llvm-13/bin/clang",
      "-Wno-unused-command-line-argument",
      "-fno-experimental-new-pass-manager",
      "-Xclang",
      "-load",
      "-Xclang",
      "/usr/bin/../lib/afl//SanitizerCoveragePCGUARD.so",
      "-DHAVE_CONFIG_H",
      "-I.",
      "-I..",
      "-I../include",
      "-I../include/speex",
      "-I..",
      "-fsanitize=address",
      "-g",
      "-O1",
      "-fvisibility=hidden",
      "-Wall",
      "-c",
      "-g",
      "-funroll-loops",
      "-D__AFL_HAVE_MANUAL_CONTROL=1",
      "-D__AFL_COMPILER=1",
      "-DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION=1",
      "-D__AFL_FUZZ_INIT()=int __afl_sharedmem_fuzzing = 1;extern unsigned int *__afl_fuzz_len;extern unsigned char *__afl_fuzz_ptr;unsigned char __afl_fuzz_alt[1048576];unsigned char *__afl_fuzz_alt_ptr = __afl_fuzz_alt;",
      "-D__AFL_COVERAGE()=int __afl_selective_coverage = 1;void __afl_coverage_discard();void __afl_coverage_skip();void __afl_coverage_on();void __afl_coverage_off();",
      "-D__AFL_COVERAGE_START_OFF()=int __afl_selective_coverage_start_off = 1;",
      "-D__AFL_COVERAGE_ON()=__afl_coverage_on()",
      "-D__AFL_COVERAGE_OFF()=__afl_coverage_off()",
      "-D__AFL_COVERAGE_DISCARD()=__afl_coverage_discard()",
      "-D__AFL_COVERAGE_SKIP()=__afl_coverage_skip()",
      "-D__AFL_FUZZ_TESTCASE_BUF=(__afl_fuzz_ptr ? __afl_fuzz_ptr : __afl_fuzz_alt_ptr)",
      "-D__AFL_FUZZ_TESTCASE_LEN=(__afl_fuzz_ptr ? *__afl_fuzz_len : (*__afl_fuzz_len = read(0, __afl_fuzz_alt_ptr, 1048576)) == 0xffffffff ? 0 : *__afl_fuzz_len)",
      "-D__AFL_LOOP(_A)=({ static volatile char *_B __attribute__((used));  _B = (char*)\"##SIG_AFL_PERSISTENT##\"; __attribute__((visibility(\"default\"))) int _L(unsigned int) __asm__(\"__afl_persistent_loop\"); _L(_A); })",
      "-D__AFL_INIT()=do { static volatile char *_A __attribute__((used));  _A = (char*)\"##SIG_AFL_DEFER_FORKSRV##\"; __attribute__((visibility(\"default\"))) void _I(void) __asm__(\"__afl_manual_init\"); _I(); } while (0)",
      "-Wno-unused-command-line-argument",
      "-o",
      "modes_wb.o",
      "modes_wb.c"
    ],
    "directory": "/root/dataset_fuzz/speex-Speex-1.2.1/libspeex",
    "file": "/root/dataset_fuzz/speex-Speex-1.2.1/libspeex/modes_wb.c",
    "output": "/root/dataset_fuzz/speex-Speex-1.2.1/libspeex/modes_wb.o"
  },
  {
    "arguments": [
      "/usr/lib/llvm-13/bin/clang",
      "-Wno-unused-command-line-argument",
      "-fno-experimental-new-pass-manager",
      "-Xclang",
      "-load",
      "-Xclang",
      "/usr/bin/../lib/afl//SanitizerCoveragePCGUARD.so",
      "-DHAVE_CONFIG_H",
      "-I.",
      "-I..",
      "-I../include",
      "-I../include/speex",
      "-I..",
      "-fsanitize=address",
      "-g",
      "-O1",
      "-fvisibility=hidden",
      "-Wall",
      "-c",
      "-fPIC",
      "-DPIC",
      "-g",
      "-funroll-loops",
      "-D__AFL_HAVE_MANUAL_CONTROL=1",
      "-D__AFL_COMPILER=1",
      "-DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION=1",
      "-D__AFL_FUZZ_INIT()=int __afl_sharedmem_fuzzing = 1;extern unsigned int *__afl_fuzz_len;extern unsigned char *__afl_fuzz_ptr;unsigned char __afl_fuzz_alt[1048576];unsigned char *__afl_fuzz_alt_ptr = __afl_fuzz_alt;",
      "-D__AFL_COVERAGE()=int __afl_selective_coverage = 1;void __afl_coverage_discard();void __afl_coverage_skip();void __afl_coverage_on();void __afl_coverage_off();",
      "-D__AFL_COVERAGE_START_OFF()=int __afl_selective_coverage_start_off = 1;",
      "-D__AFL_COVERAGE_ON()=__afl_coverage_on()",
      "-D__AFL_COVERAGE_OFF()=__afl_coverage_off()",
      "-D__AFL_COVERAGE_DISCARD()=__afl_coverage_discard()",
      "-D__AFL_COVERAGE_SKIP()=__afl_coverage_skip()",
      "-D__AFL_FUZZ_TESTCASE_BUF=(__afl_fuzz_ptr ? __afl_fuzz_ptr : __afl_fuzz_alt_ptr)",
      "-D__AFL_FUZZ_TESTCASE_LEN=(__afl_fuzz_ptr ? *__afl_fuzz_len : (*__afl_fuzz_len = read(0, __afl_fuzz_alt_ptr, 1048576)) == 0xffffffff ? 0 : *__afl_fuzz_len)",
      "-D__AFL_LOOP(_A)=({ static volatile char *_B __attribute__((used));  _B = (char*)\"##SIG_AFL_PERSISTENT##\"; __attribute__((visibility(\"default\"))) int _L(unsigned int) __asm__(\"__afl_persistent_loop\"); _L(_A); })",
      "-D__AFL_INIT()=do { static volatile char *_A __attribute__((used));  _A = (char*)\"##SIG_AFL_DEFER_FORKSRV##\"; __attribute__((visibility(\"default\"))) void _I(void) __asm__(\"__afl_manual_init\"); _I(); } while (0)",
      "-Wno-unused-command-line-argument",
      "-o",
      ".libs/nb_celp.o",
      "nb_celp.c"
    ],
    "directory": "/root/dataset_fuzz/speex-Speex-1.2.1/libspeex",
    "file": "/root/dataset_fuzz/speex-Speex-1.2.1/libspeex/nb_celp.c",
    "output": "/root/dataset_fuzz/speex-Speex-1.2.1/libspeex/.libs/nb_celp.o"
  },
  {
    "arguments": [
      "/usr/lib/llvm-13/bin/clang",
      "-Wno-unused-command-line-argument",
      "-fno-experimental-new-pass-manager",
      "-Xclang",
      "-load",
      "-Xclang",
      "/usr/bin/../lib/afl//SanitizerCoveragePCGUARD.so",
      "-DHAVE_CONFIG_H",
      "-I.",
      "-I..",
      "-I../include",
      "-I../include/speex",
      "-I..",
      "-fsanitize=address",
      "-g",
      "-O1",
      "-fvisibility=hidden",
      "-Wall",
      "-c",
      "-g",
      "-funroll-loops",
      "-D__AFL_HAVE_MANUAL_CONTROL=1",
      "-D__AFL_COMPILER=1",
      "-DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION=1",
      "-D__AFL_FUZZ_INIT()=int __afl_sharedmem_fuzzing = 1;extern unsigned int *__afl_fuzz_len;extern unsigned char *__afl_fuzz_ptr;unsigned char __afl_fuzz_alt[1048576];unsigned char *__afl_fuzz_alt_ptr = __afl_fuzz_alt;",
      "-D__AFL_COVERAGE()=int __afl_selective_coverage = 1;void __afl_coverage_discard();void __afl_coverage_skip();void __afl_coverage_on();void __afl_coverage_off();",
      "-D__AFL_COVERAGE_START_OFF()=int __afl_selective_coverage_start_off = 1;",
      "-D__AFL_COVERAGE_ON()=__afl_coverage_on()",
      "-D__AFL_COVERAGE_OFF()=__afl_coverage_off()",
      "-D__AFL_COVERAGE_DISCARD()=__afl_coverage_discard()",
      "-D__AFL_COVERAGE_SKIP()=__afl_coverage_skip()",
      "-D__AFL_FUZZ_TESTCASE_BUF=(__afl_fuzz_ptr ? __afl_fuzz_ptr : __afl_fuzz_alt_ptr)",
      "-D__AFL_FUZZ_TESTCASE_LEN=(__afl_fuzz_ptr ? *__afl_fuzz_len : (*__afl_fuzz_len = read(0, __afl_fuzz_alt_ptr, 1048576)) == 0xffffffff ? 0 : *__afl_fuzz_len)",
      "-D__AFL_LOOP(_A)=({ static volatile char *_B __attribute__((used));  _B = (char*)\"##SIG_AFL_PERSISTENT##\"; __attribute__((visibility(\"default\"))) int _L(unsigned int) __asm__(\"__afl_persistent_loop\"); _L(_A); })",
      "-D__AFL_INIT()=do { static volatile char *_A __attribute__((used));  _A = (char*)\"##SIG_AFL_DEFER_FORKSRV##\"; __attribute__((visibility(\"default\"))) void _I(void) __asm__(\"__afl_manual_init\"); _I(); } while (0)",
      "-Wno-unused-command-line-argument",
      "-o",
      "nb_celp.o",
      "nb_celp.c"
    ],
    "directory": "/root/dataset_fuzz/speex-Speex-1.2.1/libspeex",
    "file": "/root/dataset_fuzz/speex-Speex-1.2.1/libspeex/nb_celp.c",
    "output": "/root/dataset_fuzz/speex-Speex-1.2.1/libspeex/nb_celp.o"
  },
  {
    "arguments": [
      "/usr/lib/llvm-13/bin/clang",
      "-Wno-unused-command-line-argument",
      "-fno-experimental-new-pass-manager",
      "-Xclang",
      "-load",
      "-Xclang",
      "/usr/bin/../lib/afl//SanitizerCoveragePCGUARD.so",
      "-DHAVE_CONFIG_H",
      "-I.",
      "-I..",
      "-I../include",
      "-I../include/speex",
      "-I..",
      "-fsanitize=address",
      "-g",
      "-O1",
      "-fvisibility=hidden",
      "-Wall",
      "-c",
      "-fPIC",
      "-DPIC",
      "-g",
      "-funroll-loops",
      "-D__AFL_HAVE_MANUAL_CONTROL=1",
      "-D__AFL_COMPILER=1",
      "-DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION=1",
      "-D__AFL_FUZZ_INIT()=int __afl_sharedmem_fuzzing = 1;extern unsigned int *__afl_fuzz_len;extern unsigned char *__afl_fuzz_ptr;unsigned char __afl_fuzz_alt[1048576];unsigned char *__afl_fuzz_alt_ptr = __afl_fuzz_alt;",
      "-D__AFL_COVERAGE()=int __afl_selective_coverage = 1;void __afl_coverage_discard();void __afl_coverage_skip();void __afl_coverage_on();void __afl_coverage_off();",
      "-D__AFL_COVERAGE_START_OFF()=int __afl_selective_coverage_start_off = 1;",
      "-D__AFL_COVERAGE_ON()=__afl_coverage_on()",
      "-D__AFL_COVERAGE_OFF()=__afl_coverage_off()",
      "-D__AFL_COVERAGE_DISCARD()=__afl_coverage_discard()",
      "-D__AFL_COVERAGE_SKIP()=__afl_coverage_skip()",
      "-D__AFL_FUZZ_TESTCASE_BUF=(__afl_fuzz_ptr ? __afl_fuzz_ptr : __afl_fuzz_alt_ptr)",
      "-D__AFL_FUZZ_TESTCASE_LEN=(__afl_fuzz_ptr ? *__afl_fuzz_len : (*__afl_fuzz_len = read(0, __afl_fuzz_alt_ptr, 1048576)) == 0xffffffff ? 0 : *__afl_fuzz_len)",
      "-D__AFL_LOOP(_A)=({ static volatile char *_B __attribute__((used));  _B = (char*)\"##SIG_AFL_PERSISTENT##\"; __attribute__((visibility(\"default\"))) int _L(unsigned int) __asm__(\"__afl_persistent_loop\"); _L(_A); })",
      "-D__AFL_INIT()=do { static volatile char *_A __attribute__((used));  _A = (char*)\"##SIG_AFL_DEFER_FORKSRV##\"; __attribute__((visibility(\"default\"))) void _I(void) __asm__(\"__afl_manual_init\"); _I(); } while (0)",
      "-Wno-unused-command-line-argument",
      "-o",
      ".libs/quant_lsp.o",
      "quant_lsp.c"
    ],
    "directory": "/root/dataset_fuzz/speex-Speex-1.2.1/libspeex",
    "file": "/root/dataset_fuzz/speex-Speex-1.2.1/libspeex/quant_lsp.c",
    "output": "/root/dataset_fuzz/speex-Speex-1.2.1/libspeex/.libs/quant_lsp.o"
  },
  {
    "arguments": [
      "/usr/lib/llvm-13/bin/clang",
      "-Wno-unused-command-line-argument",
      "-fno-experimental-new-pass-manager",
      "-Xclang",
      "-load",
      "-Xclang",
      "/usr/bin/../lib/afl//SanitizerCoveragePCGUARD.so",
      "-DHAVE_CONFIG_H",
      "-I.",
      "-I..",
      "-I../include",
      "-I../include/speex",
      "-I..",
      "-fsanitize=address",
      "-g",
      "-O1",
      "-fvisibility=hidden",
      "-Wall",
      "-c",
      "-g",
      "-funroll-loops",
      "-D__AFL_HAVE_MANUAL_CONTROL=1",
      "-D__AFL_COMPILER=1",
      "-DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION=1",
      "-D__AFL_FUZZ_INIT()=int __afl_sharedmem_fuzzing = 1;extern unsigned int *__afl_fuzz_len;extern unsigned char *__afl_fuzz_ptr;unsigned char __afl_fuzz_alt[1048576];unsigned char *__afl_fuzz_alt_ptr = __afl_fuzz_alt;",
      "-D__AFL_COVERAGE()=int __afl_selective_coverage = 1;void __afl_coverage_discard();void __afl_coverage_skip();void __afl_coverage_on();void __afl_coverage_off();",
      "-D__AFL_COVERAGE_START_OFF()=int __afl_selective_coverage_start_off = 1;",
      "-D__AFL_COVERAGE_ON()=__afl_coverage_on()",
      "-D__AFL_COVERAGE_OFF()=__afl_coverage_off()",
      "-D__AFL_COVERAGE_DISCARD()=__afl_coverage_discard()",
      "-D__AFL_COVERAGE_SKIP()=__afl_coverage_skip()",
      "-D__AFL_FUZZ_TESTCASE_BUF=(__afl_fuzz_ptr ? __afl_fuzz_ptr : __afl_fuzz_alt_ptr)",
      "-D__AFL_FUZZ_TESTCASE_LEN=(__afl_fuzz_ptr ? *__afl_fuzz_len : (*__afl_fuzz_len = read(0, __afl_fuzz_alt_ptr, 1048576)) == 0xffffffff ? 0 : *__afl_fuzz_len)",
      "-D__AFL_LOOP(_A)=({ static volatile char *_B __attribute__((used));  _B = (char*)\"##SIG_AFL_PERSISTENT##\"; __attribute__((visibility(\"default\"))) int _L(unsigned int) __asm__(\"__afl_persistent_loop\"); _L(_A); })",
      "-D__AFL_INIT()=do { static volatile char *_A __attribute__((used));  _A = (char*)\"##SIG_AFL_DEFER_FORKSRV##\"; __attribute__((visibility(\"default\"))) void _I(void) __asm__(\"__afl_manual_init\"); _I(); } while (0)",
      "-Wno-unused-command-line-argument",
      "-o",
      "quant_lsp.o",
      "quant_lsp.c"
    ],
    "directory": "/root/dataset_fuzz/speex-Speex-1.2.1/libspeex",
    "file": "/root/dataset_fuzz/speex-Speex-1.2.1/libspeex/quant_lsp.c",
    "output": "/root/dataset_fuzz/speex-Speex-1.2.1/libspeex/quant_lsp.o"
  },
  {
    "arguments": [
      "/usr/lib/llvm-13/bin/clang",
      "-Wno-unused-command-line-argument",
      "-fno-experimental-new-pass-manager",
      "-Xclang",
      "-load",
      "-Xclang",
      "/usr/bin/../lib/afl//SanitizerCoveragePCGUARD.so",
      "-DHAVE_CONFIG_H",
      "-I.",
      "-I..",
      "-I../include",
      "-I../include/speex",
      "-I..",
      "-fsanitize=address",
      "-g",
      "-O1",
      "-fvisibility=hidden",
      "-Wall",
      "-c",
      "-fPIC",
      "-DPIC",
      "-g",
      "-funroll-loops",
      "-D__AFL_HAVE_MANUAL_CONTROL=1",
      "-D__AFL_COMPILER=1",
      "-DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION=1",
      "-D__AFL_FUZZ_INIT()=int __afl_sharedmem_fuzzing = 1;extern unsigned int *__afl_fuzz_len;extern unsigned char *__afl_fuzz_ptr;unsigned char __afl_fuzz_alt[1048576];unsigned char *__afl_fuzz_alt_ptr = __afl_fuzz_alt;",
      "-D__AFL_COVERAGE()=int __afl_selective_coverage = 1;void __afl_coverage_discard();void __afl_coverage_skip();void __afl_coverage_on();void __afl_coverage_off();",
      "-D__AFL_COVERAGE_START_OFF()=int __afl_selective_coverage_start_off = 1;",
      "-D__AFL_COVERAGE_ON()=__afl_coverage_on()",
      "-D__AFL_COVERAGE_OFF()=__afl_coverage_off()",
      "-D__AFL_COVERAGE_DISCARD()=__afl_coverage_discard()",
      "-D__AFL_COVERAGE_SKIP()=__afl_coverage_skip()",
      "-D__AFL_FUZZ_TESTCASE_BUF=(__afl_fuzz_ptr ? __afl_fuzz_ptr : __afl_fuzz_alt_ptr)",
      "-D__AFL_FUZZ_TESTCASE_LEN=(__afl_fuzz_ptr ? *__afl_fuzz_len : (*__afl_fuzz_len = read(0, __afl_fuzz_alt_ptr, 1048576)) == 0xffffffff ? 0 : *__afl_fuzz_len)",
      "-D__AFL_LOOP(_A)=({ static volatile char *_B __attribute__((used));  _B = (char*)\"##SIG_AFL_PERSISTENT##\"; __attribute__((visibility(\"default\"))) int _L(unsigned int) __asm__(\"__afl_persistent_loop\"); _L(_A); })",
      "-D__AFL_INIT()=do { static volatile char *_A __attribute__((used));  _A = (char*)\"##SIG_AFL_DEFER_FORKSRV##\"; __attribute__((visibility(\"default\"))) void _I(void) __asm__(\"__afl_manual_init\"); _I(); } while (0)",
      "-Wno-unused-command-line-argument",
      "-o",
      ".libs/sb_celp.o",
      "sb_celp.c"
    ],
    "directory": "/root/dataset_fuzz/speex-Speex-1.2.1/libspeex",
    "file": "/root/dataset_fuzz/speex-Speex-1.2.1/libspeex/sb_celp.c",
    "output": "/root/dataset_fuzz/speex-Speex-1.2.1/libspeex/.libs/sb_celp.o"
  },
  {
    "arguments": [
      "/usr/lib/llvm-13/bin/clang",
      "-Wno-unused-command-line-argument",
      "-fno-experimental-new-pass-manager",
      "-Xclang",
      "-load",
      "-Xclang",
      "/usr/bin/../lib/afl//SanitizerCoveragePCGUARD.so",
      "-DHAVE_CONFIG_H",
      "-I.",
      "-I..",
      "-I../include",
      "-I../include/speex",
      "-I..",
      "-fsanitize=address",
      "-g",
      "-O1",
      "-fvisibility=hidden",
      "-Wall",
      "-c",
      "-g",
      "-funroll-loops",
      "-D__AFL_HAVE_MANUAL_CONTROL=1",
      "-D__AFL_COMPILER=1",
      "-DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION=1",
      "-D__AFL_FUZZ_INIT()=int __afl_sharedmem_fuzzing = 1;extern unsigned int *__afl_fuzz_len;extern unsigned char *__afl_fuzz_ptr;unsigned char __afl_fuzz_alt[1048576];unsigned char *__afl_fuzz_alt_ptr = __afl_fuzz_alt;",
      "-D__AFL_COVERAGE()=int __afl_selective_coverage = 1;void __afl_coverage_discard();void __afl_coverage_skip();void __afl_coverage_on();void __afl_coverage_off();",
      "-D__AFL_COVERAGE_START_OFF()=int __afl_selective_coverage_start_off = 1;",
      "-D__AFL_COVERAGE_ON()=__afl_coverage_on()",
      "-D__AFL_COVERAGE_OFF()=__afl_coverage_off()",
      "-D__AFL_COVERAGE_DISCARD()=__afl_coverage_discard()",
      "-D__AFL_COVERAGE_SKIP()=__afl_coverage_skip()",
      "-D__AFL_FUZZ_TESTCASE_BUF=(__afl_fuzz_ptr ? __afl_fuzz_ptr : __afl_fuzz_alt_ptr)",
      "-D__AFL_FUZZ_TESTCASE_LEN=(__afl_fuzz_ptr ? *__afl_fuzz_len : (*__afl_fuzz_len = read(0, __afl_fuzz_alt_ptr, 1048576)) == 0xffffffff ? 0 : *__afl_fuzz_len)",
      "-D__AFL_LOOP(_A)=({ static volatile char *_B __attribute__((used));  _B = (char*)\"##SIG_AFL_PERSISTENT##\"; __attribute__((visibility(\"default\"))) int _L(unsigned int) __asm__(\"__afl_persistent_loop\"); _L(_A); })",
      "-D__AFL_INIT()=do { static volatile char *_A __attribute__((used));  _A = (char*)\"##SIG_AFL_DEFER_FORKSRV##\"; __attribute__((visibility(\"default\"))) void _I(void) __asm__(\"__afl_manual_init\"); _I(); } while (0)",
      "-Wno-unused-command-line-argument",
      "-o",
      "sb_celp.o",
      "sb_celp.c"
    ],
    "directory": "/root/dataset_fuzz/speex-Speex-1.2.1/libspeex",
    "file": "/root/dataset_fuzz/speex-Speex-1.2.1/libspeex/sb_celp.c",
    "output": "/root/dataset_fuzz/speex-Speex-1.2.1/libspeex/sb_celp.o"
  },
  {
    "arguments": [
      "/usr/lib/llvm-13/bin/clang",
      "-Wno-unused-command-line-argument",
      "-fno-experimental-new-pass-manager",
      "-Xclang",
      "-load",
      "-Xclang",
      "/usr/bin/../lib/afl//SanitizerCoveragePCGUARD.so",
      "-DHAVE_CONFIG_H",
      "-I.",
      "-I..",
      "-I../include",
      "-I../include/speex",
      "-I..",
      "-fsanitize=address",
      "-g",
      "-O1",
      "-fvisibility=hidden",
      "-Wall",
      "-c",
      "-fPIC",
      "-DPIC",
      "-g",
      "-funroll-loops",
      "-D__AFL_HAVE_MANUAL_CONTROL=1",
      "-D__AFL_COMPILER=1",
      "-DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION=1",
      "-D__AFL_FUZZ_INIT()=int __afl_sharedmem_fuzzing = 1;extern unsigned int *__afl_fuzz_len;extern unsigned char *__afl_fuzz_ptr;unsigned char __afl_fuzz_alt[1048576];unsigned char *__afl_fuzz_alt_ptr = __afl_fuzz_alt;",
      "-D__AFL_COVERAGE()=int __afl_selective_coverage = 1;void __afl_coverage_discard();void __afl_coverage_skip();void __afl_coverage_on();void __afl_coverage_off();",
      "-D__AFL_COVERAGE_START_OFF()=int __afl_selective_coverage_start_off = 1;",
      "-D__AFL_COVERAGE_ON()=__afl_coverage_on()",
      "-D__AFL_COVERAGE_OFF()=__afl_coverage_off()",
      "-D__AFL_COVERAGE_DISCARD()=__afl_coverage_discard()",
      "-D__AFL_COVERAGE_SKIP()=__afl_coverage_skip()",
      "-D__AFL_FUZZ_TESTCASE_BUF=(__afl_fuzz_ptr ? __afl_fuzz_ptr : __afl_fuzz_alt_ptr)",
      "-D__AFL_FUZZ_TESTCASE_LEN=(__afl_fuzz_ptr ? *__afl_fuzz_len : (*__afl_fuzz_len = read(0, __afl_fuzz_alt_ptr, 1048576)) == 0xffffffff ? 0 : *__afl_fuzz_len)",
      "-D__AFL_LOOP(_A)=({ static volatile char *_B __attribute__((used));  _B = (char*)\"##SIG_AFL_PERSISTENT##\"; __attribute__((visibility(\"default\"))) int _L(unsigned int) __asm__(\"__afl_persistent_loop\"); _L(_A); })",
      "-D__AFL_INIT()=do { static volatile char *_A __attribute__((used));  _A = (char*)\"##SIG_AFL_DEFER_FORKSRV##\"; __attribute__((visibility(\"default\"))) void _I(void) __asm__(\"__afl_manual_init\"); _I(); } while (0)",
      "-Wno-unused-command-line-argument",
      "-o",
      ".libs/speex_callbacks.o",
      "speex_callbacks.c"
    ],
    "directory": "/root/dataset_fuzz/speex-Speex-1.2.1/libspeex",
    "file": "/root/dataset_fuzz/speex-Speex-1.2.1/libspeex/speex_callbacks.c",
    "output": "/root/dataset_fuzz/speex-Speex-1.2.1/libspeex/.libs/speex_callbacks.o"
  },
  {
    "arguments": [
      "/usr/lib/llvm-13/bin/clang",
      "-Wno-unused-command-line-argument",
      "-fno-experimental-new-pass-manager",
      "-Xclang",
      "-load",
      "-Xclang",
      "/usr/bin/../lib/afl//SanitizerCoveragePCGUARD.so",
      "-DHAVE_CONFIG_H",
      "-I.",
      "-I..",
      "-I../include",
      "-I../include/speex",
      "-I..",
      "-fsanitize=address",
      "-g",
      "-O1",
      "-fvisibility=hidden",
      "-Wall",
      "-c",
      "-g",
      "-funroll-loops",
      "-D__AFL_HAVE_MANUAL_CONTROL=1",
      "-D__AFL_COMPILER=1",
      "-DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION=1",
      "-D__AFL_FUZZ_INIT()=int __afl_sharedmem_fuzzing = 1;extern unsigned int *__afl_fuzz_len;extern unsigned char *__afl_fuzz_ptr;unsigned char __afl_fuzz_alt[1048576];unsigned char *__afl_fuzz_alt_ptr = __afl_fuzz_alt;",
      "-D__AFL_COVERAGE()=int __afl_selective_coverage = 1;void __afl_coverage_discard();void __afl_coverage_skip();void __afl_coverage_on();void __afl_coverage_off();",
      "-D__AFL_COVERAGE_START_OFF()=int __afl_selective_coverage_start_off = 1;",
      "-D__AFL_COVERAGE_ON()=__afl_coverage_on()",
      "-D__AFL_COVERAGE_OFF()=__afl_coverage_off()",
      "-D__AFL_COVERAGE_DISCARD()=__afl_coverage_discard()",
      "-D__AFL_COVERAGE_SKIP()=__afl_coverage_skip()",
      "-D__AFL_FUZZ_TESTCASE_BUF=(__afl_fuzz_ptr ? __afl_fuzz_ptr : __afl_fuzz_alt_ptr)",
      "-D__AFL_FUZZ_TESTCASE_LEN=(__afl_fuzz_ptr ? *__afl_fuzz_len : (*__afl_fuzz_len = read(0, __afl_fuzz_alt_ptr, 1048576)) == 0xffffffff ? 0 : *__afl_fuzz_len)",
      "-D__AFL_LOOP(_A)=({ static volatile char *_B __attribute__((used));  _B = (char*)\"##SIG_AFL_PERSISTENT##\"; __attribute__((visibility(\"default\"))) int _L(unsigned int) __asm__(\"__afl_persistent_loop\"); _L(_A); })",
      "-D__AFL_INIT()=do { static volatile char *_A __attribute__((used));  _A = (char*)\"##SIG_AFL_DEFER_FORKSRV##\"; __attribute__((visibility(\"default\"))) void _I(void) __asm__(\"__afl_manual_init\"); _I(); } while (0)",
      "-Wno-unused-command-line-argument",
      "-o",
      "speex_callbacks.o",
      "speex_callbacks.c"
    ],
    "directory": "/root/dataset_fuzz/speex-Speex-1.2.1/libspeex",
    "file": "/root/dataset_fuzz/speex-Speex-1.2.1/libspeex/speex_callbacks.c",
    "output": "/root/dataset_fuzz/speex-Speex-1.2.1/libspeex/speex_callbacks.o"
  },
  {
    "arguments": [
      "/usr/lib/llvm-13/bin/clang",
      "-Wno-unused-command-line-argument",
      "-fno-experimental-new-pass-manager",
      "-Xclang",
      "-load",
      "-Xclang",
      "/usr/bin/../lib/afl//SanitizerCoveragePCGUARD.so",
      "-DHAVE_CONFIG_H",
      "-I.",
      "-I..",
      "-I../include",
      "-I../include/speex",
      "-I..",
      "-fsanitize=address",
      "-g",
      "-O1",
      "-fvisibility=hidden",
      "-Wall",
      "-c",
      "-fPIC",
      "-DPIC",
      "-g",
      "-funroll-loops",
      "-D__AFL_HAVE_MANUAL_CONTROL=1",
      "-D__AFL_COMPILER=1",
      "-DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION=1",
      "-D__AFL_FUZZ_INIT()=int __afl_sharedmem_fuzzing = 1;extern unsigned int *__afl_fuzz_len;extern unsigned char *__afl_fuzz_ptr;unsigned char __afl_fuzz_alt[1048576];unsigned char *__afl_fuzz_alt_ptr = __afl_fuzz_alt;",
      "-D__AFL_COVERAGE()=int __afl_selective_coverage = 1;void __afl_coverage_discard();void __afl_coverage_skip();void __afl_coverage_on();void __afl_coverage_off();",
      "-D__AFL_COVERAGE_START_OFF()=int __afl_selective_coverage_start_off = 1;",
      "-D__AFL_COVERAGE_ON()=__afl_coverage_on()",
      "-D__AFL_COVERAGE_OFF()=__afl_coverage_off()",
      "-D__AFL_COVERAGE_DISCARD()=__afl_coverage_discard()",
      "-D__AFL_COVERAGE_SKIP()=__afl_coverage_skip()",
      "-D__AFL_FUZZ_TESTCASE_BUF=(__afl_fuzz_ptr ? __afl_fuzz_ptr : __afl_fuzz_alt_ptr)",
      "-D__AFL_FUZZ_TESTCASE_LEN=(__afl_fuzz_ptr ? *__afl_fuzz_len : (*__afl_fuzz_len = read(0, __afl_fuzz_alt_ptr, 1048576)) == 0xffffffff ? 0 : *__afl_fuzz_len)",
      "-D__AFL_LOOP(_A)=({ static volatile char *_B __attribute__((used));  _B = (char*)\"##SIG_AFL_PERSISTENT##\"; __attribute__((visibility(\"default\"))) int _L(unsigned int) __asm__(\"__afl_persistent_loop\"); _L(_A); })",
      "-D__AFL_INIT()=do { static volatile char *_A __attribute__((used));  _A = (char*)\"##SIG_AFL_DEFER_FORKSRV##\"; __attribute__((visibility(\"default\"))) void _I(void) __asm__(\"__afl_manual_init\"); _I(); } while (0)",
      "-Wno-unused-command-line-argument",
      "-o",
      ".libs/speex_header.o",
      "speex_header.c"
    ],
    "directory": "/root/dataset_fuzz/speex-Speex-1.2.1/libspeex",
    "file": "/root/dataset_fuzz/speex-Speex-1.2.1/libspeex/speex_header.c",
    "output": "/root/dataset_fuzz/speex-Speex-1.2.1/libspeex/.libs/speex_header.o"
  },
  {
    "arguments": [
      "/usr/lib/llvm-13/bin/clang",
      "-Wno-unused-command-line-argument",
      "-fno-experimental-new-pass-manager",
      "-Xclang",
      "-load",
      "-Xclang",
      "/usr/bin/../lib/afl//SanitizerCoveragePCGUARD.so",
      "-DHAVE_CONFIG_H",
      "-I.",
      "-I..",
      "-I../include",
      "-I../include/speex",
      "-I..",
      "-fsanitize=address",
      "-g",
      "-O1",
      "-fvisibility=hidden",
      "-Wall",
      "-c",
      "-g",
      "-funroll-loops",
      "-D__AFL_HAVE_MANUAL_CONTROL=1",
      "-D__AFL_COMPILER=1",
      "-DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION=1",
      "-D__AFL_FUZZ_INIT()=int __afl_sharedmem_fuzzing = 1;extern unsigned int *__afl_fuzz_len;extern unsigned char *__afl_fuzz_ptr;unsigned char __afl_fuzz_alt[1048576];unsigned char *__afl_fuzz_alt_ptr = __afl_fuzz_alt;",
      "-D__AFL_COVERAGE()=int __afl_selective_coverage = 1;void __afl_coverage_discard();void __afl_coverage_skip();void __afl_coverage_on();void __afl_coverage_off();",
      "-D__AFL_COVERAGE_START_OFF()=int __afl_selective_coverage_start_off = 1;",
      "-D__AFL_COVERAGE_ON()=__afl_coverage_on()",
      "-D__AFL_COVERAGE_OFF()=__afl_coverage_off()",
      "-D__AFL_COVERAGE_DISCARD()=__afl_coverage_discard()",
      "-D__AFL_COVERAGE_SKIP()=__afl_coverage_skip()",
      "-D__AFL_FUZZ_TESTCASE_BUF=(__afl_fuzz_ptr ? __afl_fuzz_ptr : __afl_fuzz_alt_ptr)",
      "-D__AFL_FUZZ_TESTCASE_LEN=(__afl_fuzz_ptr ? *__afl_fuzz_len : (*__afl_fuzz_len = read(0, __afl_fuzz_alt_ptr, 1048576)) == 0xffffffff ? 0 : *__afl_fuzz_len)",
      "-D__AFL_LOOP(_A)=({ static volatile char *_B __attribute__((used));  _B = (char*)\"##SIG_AFL_PERSISTENT##\"; __attribute__((visibility(\"default\"))) int _L(unsigned int) __asm__(\"__afl_persistent_loop\"); _L(_A); })",
      "-D__AFL_INIT()=do { static volatile char *_A __attribute__((used));  _A = (char*)\"##SIG_AFL_DEFER_FORKSRV##\"; __attribute__((visibility(\"default\"))) void _I(void) __asm__(\"__afl_manual_init\"); _I(); } while (0)",
      "-Wno-unused-command-line-argument",
      "-o",
      "speex_header.o",
      "speex_header.c"
    ],
    "directory": "/root/dataset_fuzz/speex-Speex-1.2.1/libspeex",
    "file": "/root/dataset_fuzz/speex-Speex-1.2.1/libspeex/speex_header.c",
    "output": "/root/dataset_fuzz/speex-Speex-1.2.1/libspeex/speex_header.o"
  },
  {
    "arguments": [
      "/usr/lib/llvm-13/bin/clang",
      "-Wno-unused-command-line-argument",
      "-fno-experimental-new-pass-manager",
      "-Xclang",
      "-load",
      "-Xclang",
      "/usr/bin/../lib/afl//SanitizerCoveragePCGUARD.so",
      "-DHAVE_CONFIG_H",
      "-I.",
      "-I..",
      "-I../include",
      "-I../include/speex",
      "-I..",
      "-fsanitize=address",
      "-g",
      "-O1",
      "-fvisibility=hidden",
      "-Wall",
      "-c",
      "-fPIC",
      "-DPIC",
      "-g",
      "-funroll-loops",
      "-D__AFL_HAVE_MANUAL_CONTROL=1",
      "-D__AFL_COMPILER=1",
      "-DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION=1",
      "-D__AFL_FUZZ_INIT()=int __afl_sharedmem_fuzzing = 1;extern unsigned int *__afl_fuzz_len;extern unsigned char *__afl_fuzz_ptr;unsigned char __afl_fuzz_alt[1048576];unsigned char *__afl_fuzz_alt_ptr = __afl_fuzz_alt;",
      "-D__AFL_COVERAGE()=int __afl_selective_coverage = 1;void __afl_coverage_discard();void __afl_coverage_skip();void __afl_coverage_on();void __afl_coverage_off();",
      "-D__AFL_COVERAGE_START_OFF()=int __afl_selective_coverage_start_off = 1;",
      "-D__AFL_COVERAGE_ON()=__afl_coverage_on()",
      "-D__AFL_COVERAGE_OFF()=__afl_coverage_off()",
      "-D__AFL_COVERAGE_DISCARD()=__afl_coverage_discard()",
      "-D__AFL_COVERAGE_SKIP()=__afl_coverage_skip()",
      "-D__AFL_FUZZ_TESTCASE_BUF=(__afl_fuzz_ptr ? __afl_fuzz_ptr : __afl_fuzz_alt_ptr)",
      "-D__AFL_FUZZ_TESTCASE_LEN=(__afl_fuzz_ptr ? *__afl_fuzz_len : (*__afl_fuzz_len = read(0, __afl_fuzz_alt_ptr, 1048576)) == 0xffffffff ? 0 : *__afl_fuzz_len)",
      "-D__AFL_LOOP(_A)=({ static volatile char *_B __attribute__((used));  _B = (char*)\"##SIG_AFL_PERSISTENT##\"; __attribute__((visibility(\"default\"))) int _L(unsigned int) __asm__(\"__afl_persistent_loop\"); _L(_A); })",
      "-D__AFL_INIT()=do { static volatile char *_A __attribute__((used));  _A = (char*)\"##SIG_AFL_DEFER_FORKSRV##\"; __attribute__((visibility(\"default\"))) void _I(void) __asm__(\"__afl_manual_init\"); _I(); } while (0)",
      "-Wno-unused-command-line-argument",
      "-o",
      ".libs/window.o",
      "window.c"
    ],
    "directory": "/root/dataset_fuzz/speex-Speex-1.2.1/libspeex",
    "file": "/root/dataset_fuzz/speex-Speex-1.2.1/libspeex/window.c",
    "output": "/root/dataset_fuzz/speex-Speex-1.2.1/libspeex/.libs/window.o"
  },
  {
    "arguments": [
      "/usr/lib/llvm-13/bin/clang",
      "-Wno-unused-command-line-argument",
      "-fno-experimental-new-pass-manager",
      "-Xclang",
      "-load",
      "-Xclang",
      "/usr/bin/../lib/afl//SanitizerCoveragePCGUARD.so",
      "-DHAVE_CONFIG_H",
      "-I.",
      "-I..",
      "-I../include",
      "-I../include/speex",
      "-I..",
      "-fsanitize=address",
      "-g",
      "-O1",
      "-fvisibility=hidden",
      "-Wall",
      "-c",
      "-g",
      "-funroll-loops",
      "-D__AFL_HAVE_MANUAL_CONTROL=1",
      "-D__AFL_COMPILER=1",
      "-DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION=1",
      "-D__AFL_FUZZ_INIT()=int __afl_sharedmem_fuzzing = 1;extern unsigned int *__afl_fuzz_len;extern unsigned char *__afl_fuzz_ptr;unsigned char __afl_fuzz_alt[1048576];unsigned char *__afl_fuzz_alt_ptr = __afl_fuzz_alt;",
      "-D__AFL_COVERAGE()=int __afl_selective_coverage = 1;void __afl_coverage_discard();void __afl_coverage_skip();void __afl_coverage_on();void __afl_coverage_off();",
      "-D__AFL_COVERAGE_START_OFF()=int __afl_selective_coverage_start_off = 1;",
      "-D__AFL_COVERAGE_ON()=__afl_coverage_on()",
      "-D__AFL_COVERAGE_OFF()=__afl_coverage_off()",
      "-D__AFL_COVERAGE_DISCARD()=__afl_coverage_discard()",
      "-D__AFL_COVERAGE_SKIP()=__afl_coverage_skip()",
      "-D__AFL_FUZZ_TESTCASE_BUF=(__afl_fuzz_ptr ? __afl_fuzz_ptr : __afl_fuzz_alt_ptr)",
      "-D__AFL_FUZZ_TESTCASE_LEN=(__afl_fuzz_ptr ? *__afl_fuzz_len : (*__afl_fuzz_len = read(0, __afl_fuzz_alt_ptr, 1048576)) == 0xffffffff ? 0 : *__afl_fuzz_len)",
      "-D__AFL_LOOP(_A)=({ static volatile char *_B __attribute__((used));  _B = (char*)\"##SIG_AFL_PERSISTENT##\"; __attribute__((visibility(\"default\"))) int _L(unsigned int) __asm__(\"__afl_persistent_loop\"); _L(_A); })",
      "-D__AFL_INIT()=do { static volatile char *_A __attribute__((used));  _A = (char*)\"##SIG_AFL_DEFER_FORKSRV##\"; __attribute__((visibility(\"default\"))) void _I(void) __asm__(\"__afl_manual_init\"); _I(); } while (0)",
      "-Wno-unused-command-line-argument",
      "-o",
      "window.o",
      "window.c"
    ],
    "directory": "/root/dataset_fuzz/speex-Speex-1.2.1/libspeex",
    "file": "/root/dataset_fuzz/speex-Speex-1.2.1/libspeex/window.c",
    "output": "/root/dataset_fuzz/speex-Speex-1.2.1/libspeex/window.o"
  },
  {
    "arguments": [
      "/usr/lib/llvm-13/bin/clang",
      "-Wno-unused-command-line-argument",
      "-fno-experimental-new-pass-manager",
      "-Xclang",
      "-load",
      "-Xclang",
      "/usr/bin/../lib/afl//SanitizerCoveragePCGUARD.so",
      "-DHAVE_CONFIG_H",
      "-I.",
      "-I..",
      "-I../include",
      "-I../include/speex",
      "-I..",
      "-fsanitize=address",
      "-g",
      "-O1",
      "-fvisibility=hidden",
      "-Wall",
      "-c",
      "-g",
      "-funroll-loops",
      "-D__AFL_HAVE_MANUAL_CONTROL=1",
      "-D__AFL_COMPILER=1",
      "-DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION=1",
      "-D__AFL_FUZZ_INIT()=int __afl_sharedmem_fuzzing = 1;extern unsigned int *__afl_fuzz_len;extern unsigned char *__afl_fuzz_ptr;unsigned char __afl_fuzz_alt[1048576];unsigned char *__afl_fuzz_alt_ptr = __afl_fuzz_alt;",
      "-D__AFL_COVERAGE()=int __afl_selective_coverage = 1;void __afl_coverage_discard();void __afl_coverage_skip();void __afl_coverage_on();void __afl_coverage_off();",
      "-D__AFL_COVERAGE_START_OFF()=int __afl_selective_coverage_start_off = 1;",
      "-D__AFL_COVERAGE_ON()=__afl_coverage_on()",
      "-D__AFL_COVERAGE_OFF()=__afl_coverage_off()",
      "-D__AFL_COVERAGE_DISCARD()=__afl_coverage_discard()",
      "-D__AFL_COVERAGE_SKIP()=__afl_coverage_skip()",
      "-D__AFL_FUZZ_TESTCASE_BUF=(__afl_fuzz_ptr ? __afl_fuzz_ptr : __afl_fuzz_alt_ptr)",
      "-D__AFL_FUZZ_TESTCASE_LEN=(__afl_fuzz_ptr ? *__afl_fuzz_len : (*__afl_fuzz_len = read(0, __afl_fuzz_alt_ptr, 1048576)) == 0xffffffff ? 0 : *__afl_fuzz_len)",
      "-D__AFL_LOOP(_A)=({ static volatile char *_B __attribute__((used));  _B = (char*)\"##SIG_AFL_PERSISTENT##\"; __attribute__((visibility(\"default\"))) int _L(unsigned int) __asm__(\"__afl_persistent_loop\"); _L(_A); })",
      "-D__AFL_INIT()=do { static volatile char *_A __attribute__((used));  _A = (char*)\"##SIG_AFL_DEFER_FORKSRV##\"; __attribute__((visibility(\"default\"))) void _I(void) __asm__(\"__afl_manual_init\"); _I(); } while (0)",
      "-Wno-unused-command-line-argument",
      "-o",
      "testenc_wb.o",
      "testenc_wb.c"
    ],
    "directory": "/root/dataset_fuzz/speex-Speex-1.2.1/libspeex",
    "file": "/root/dataset_fuzz/speex-Speex-1.2.1/libspeex/testenc_wb.c",
    "output": "/root/dataset_fuzz/speex-Speex-1.2.1/libspeex/testenc_wb.o"
  },
  {
    "arguments": [
      "/usr/lib/llvm-13/bin/clang",
      "-Wno-unused-command-line-argument",
      "-fno-experimental-new-pass-manager",
      "-Xclang",
      "-load",
      "-Xclang",
      "/usr/bin/../lib/afl//SanitizerCoveragePCGUARD.so",
      "-DHAVE_CONFIG_H",
      "-I.",
      "-I..",
      "-I../include",
      "-I../include/speex",
      "-I..",
      "-fsanitize=address",
      "-g",
      "-O1",
      "-fvisibility=hidden",
      "-Wall",
      "-c",
      "-g",
      "-funroll-loops",
      "-D__AFL_HAVE_MANUAL_CONTROL=1",
      "-D__AFL_COMPILER=1",
      "-DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION=1",
      "-D__AFL_FUZZ_INIT()=int __afl_sharedmem_fuzzing = 1;extern unsigned int *__afl_fuzz_len;extern unsigned char *__afl_fuzz_ptr;unsigned char __afl_fuzz_alt[1048576];unsigned char *__afl_fuzz_alt_ptr = __afl_fuzz_alt;",
      "-D__AFL_COVERAGE()=int __afl_selective_coverage = 1;void __afl_coverage_discard();void __afl_coverage_skip();void __afl_coverage_on();void __afl_coverage_off();",
      "-D__AFL_COVERAGE_START_OFF()=int __afl_selective_coverage_start_off = 1;",
      "-D__AFL_COVERAGE_ON()=__afl_coverage_on()",
      "-D__AFL_COVERAGE_OFF()=__afl_coverage_off()",
      "-D__AFL_COVERAGE_DISCARD()=__afl_coverage_discard()",
      "-D__AFL_COVERAGE_SKIP()=__afl_coverage_skip()",
      "-D__AFL_FUZZ_TESTCASE_BUF=(__afl_fuzz_ptr ? __afl_fuzz_ptr : __afl_fuzz_alt_ptr)",
      "-D__AFL_FUZZ_TESTCASE_LEN=(__afl_fuzz_ptr ? *__afl_fuzz_len : (*__afl_fuzz_len = read(0, __afl_fuzz_alt_ptr, 1048576)) == 0xffffffff ? 0 : *__afl_fuzz_len)",
      "-D__AFL_LOOP(_A)=({ static volatile char *_B __attribute__((used));  _B = (char*)\"##SIG_AFL_PERSISTENT##\"; __attribute__((visibility(\"default\"))) int _L(unsigned int) __asm__(\"__afl_persistent_loop\"); _L(_A); })",
      "-D__AFL_INIT()=do { static volatile char *_A __attribute__((used));  _A = (char*)\"##SIG_AFL_DEFER_FORKSRV##\"; __attribute__((visibility(\"default\"))) void _I(void) __asm__(\"__afl_manual_init\"); _I(); } while (0)",
      "-Wno-unused-command-line-argument",
      "-o",
      "testenc_uwb.o",
      "testenc_uwb.c"
    ],
    "directory": "/root/dataset_fuzz/speex-Speex-1.2.1/libspeex",
    "file": "/root/dataset_fuzz/speex-Speex-1.2.1/libspeex/testenc_uwb.c",
    "output": "/root/dataset_fuzz/speex-Speex-1.2.1/libspeex/testenc_uwb.o"
  },
  {
    "arguments": [
      "/usr/lib/llvm-13/bin/clang",
      "-Wno-unused-command-line-argument",
      "-fno-experimental-new-pass-manager",
      "-Xclang",
      "-load",
      "-Xclang",
      "/usr/bin/../lib/afl//SanitizerCoveragePCGUARD.so",
      "-DHAVE_CONFIG_H",
      "-I.",
      "-I..",
      "-I../include",
      "-I../include/speex",
      "-I..",
      "-fsanitize=address",
      "-g",
      "-O1",
      "-fvisibility=hidden",
      "-Wall",
      "-c",
      "-g",
      "-funroll-loops",
      "-D__AFL_HAVE_MANUAL_CONTROL=1",
      "-D__AFL_COMPILER=1",
      "-DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION=1",
      "-D__AFL_FUZZ_INIT()=int __afl_sharedmem_fuzzing = 1;extern unsigned int *__afl_fuzz_len;extern unsigned char *__afl_fuzz_ptr;unsigned char __afl_fuzz_alt[1048576];unsigned char *__afl_fuzz_alt_ptr = __afl_fuzz_alt;",
      "-D__AFL_COVERAGE()=int __afl_selective_coverage = 1;void __afl_coverage_discard();void __afl_coverage_skip();void __afl_coverage_on();void __afl_coverage_off();",
      "-D__AFL_COVERAGE_START_OFF()=int __afl_selective_coverage_start_off = 1;",
      "-D__AFL_COVERAGE_ON()=__afl_coverage_on()",
      "-D__AFL_COVERAGE_OFF()=__afl_coverage_off()",
      "-D__AFL_COVERAGE_DISCARD()=__afl_coverage_discard()",
      "-D__AFL_COVERAGE_SKIP()=__afl_coverage_skip()",
      "-D__AFL_FUZZ_TESTCASE_BUF=(__afl_fuzz_ptr ? __afl_fuzz_ptr : __afl_fuzz_alt_ptr)",
      "-D__AFL_FUZZ_TESTCASE_LEN=(__afl_fuzz_ptr ? *__afl_fuzz_len : (*__afl_fuzz_len = read(0, __afl_fuzz_alt_ptr, 1048576)) == 0xffffffff ? 0 : *__afl_fuzz_len)",
      "-D__AFL_LOOP(_A)=({ static volatile char *_B __attribute__((used));  _B = (char*)\"##SIG_AFL_PERSISTENT##\"; __attribute__((visibility(\"default\"))) int _L(unsigned int) __asm__(\"__afl_persistent_loop\"); _L(_A); })",
      "-D__AFL_INIT()=do { static volatile char *_A __attribute__((used));  _A = (char*)\"##SIG_AFL_DEFER_FORKSRV##\"; __attribute__((visibility(\"default\"))) void _I(void) __asm__(\"__afl_manual_init\"); _I(); } while (0)",
      "-Wno-unused-command-line-argument",
      "-o",
      "speexenc.o",
      "speexenc.c"
    ],
    "directory": "/root/dataset_fuzz/speex-Speex-1.2.1/src",
    "file": "/root/dataset_fuzz/speex-Speex-1.2.1/src/speexenc.c",
    "output": "/root/dataset_fuzz/speex-Speex-1.2.1/src/speexenc.o"
  },
  {
    "arguments": [
      "/usr/lib/llvm-13/bin/clang",
      "-Wno-unused-command-line-argument",
      "-fno-experimental-new-pass-manager",
      "-Xclang",
      "-load",
      "-Xclang",
      "/usr/bin/../lib/afl//SanitizerCoveragePCGUARD.so",
      "-DHAVE_CONFIG_H",
      "-I.",
      "-I..",
      "-I../include",
      "-I../include/speex",
      "-I..",
      "-fsanitize=address",
      "-g",
      "-O1",
      "-fvisibility=hidden",
      "-Wall",
      "-c",
      "-g",
      "-funroll-loops",
      "-D__AFL_HAVE_MANUAL_CONTROL=1",
      "-D__AFL_COMPILER=1",
      "-DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION=1",
      "-D__AFL_FUZZ_INIT()=int __afl_sharedmem_fuzzing = 1;extern unsigned int *__afl_fuzz_len;extern unsigned char *__afl_fuzz_ptr;unsigned char __afl_fuzz_alt[1048576];unsigned char *__afl_fuzz_alt_ptr = __afl_fuzz_alt;",
      "-D__AFL_COVERAGE()=int __afl_selective_coverage = 1;void __afl_coverage_discard();void __afl_coverage_skip();void __afl_coverage_on();void __afl_coverage_off();",
      "-D__AFL_COVERAGE_START_OFF()=int __afl_selective_coverage_start_off = 1;",
      "-D__AFL_COVERAGE_ON()=__afl_coverage_on()",
      "-D__AFL_COVERAGE_OFF()=__afl_coverage_off()",
      "-D__AFL_COVERAGE_DISCARD()=__afl_coverage_discard()",
      "-D__AFL_COVERAGE_SKIP()=__afl_coverage_skip()",
      "-D__AFL_FUZZ_TESTCASE_BUF=(__afl_fuzz_ptr ? __afl_fuzz_ptr : __afl_fuzz_alt_ptr)",
      "-D__AFL_FUZZ_TESTCASE_LEN=(__afl_fuzz_ptr ? *__afl_fuzz_len : (*__afl_fuzz_len = read(0, __afl_fuzz_alt_ptr, 1048576)) == 0xffffffff ? 0 : *__afl_fuzz_len)",
      "-D__AFL_LOOP(_A)=({ static volatile char *_B __attribute__((used));  _B = (char*)\"##SIG_AFL_PERSISTENT##\"; __attribute__((visibility(\"default\"))) int _L(unsigned int) __asm__(\"__afl_persistent_loop\"); _L(_A); })",
      "-D__AFL_INIT()=do { static volatile char *_A __attribute__((used));  _A = (char*)\"##SIG_AFL_DEFER_FORKSRV##\"; __attribute__((visibility(\"default\"))) void _I(void) __asm__(\"__afl_manual_init\"); _I(); } while (0)",
      "-Wno-unused-command-line-argument",
      "-o",
      "wav_io.o",
      "wav_io.c"
    ],
    "directory": "/root/dataset_fuzz/speex-Speex-1.2.1/src",
    "file": "/root/dataset_fuzz/speex-Speex-1.2.1/src/wav_io.c",
    "output": "/root/dataset_fuzz/speex-Speex-1.2.1/src/wav_io.o"
  },
  {
    "arguments": [
      "/usr/lib/llvm-13/bin/clang",
      "-Wno-unused-command-line-argument",
      "-fno-experimental-new-pass-manager",
      "-Xclang",
      "-load",
      "-Xclang",
      "/usr/bin/../lib/afl//SanitizerCoveragePCGUARD.so",
      "-DHAVE_CONFIG_H",
      "-I.",
      "-I..",
      "-I../include",
      "-I../include/speex",
      "-I..",
      "-fsanitize=address",
      "-g",
      "-O1",
      "-fvisibility=hidden",
      "-Wall",
      "-c",
      "-g",
      "-funroll-loops",
      "-D__AFL_HAVE_MANUAL_CONTROL=1",
      "-D__AFL_COMPILER=1",
      "-DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION=1",
      "-D__AFL_FUZZ_INIT()=int __afl_sharedmem_fuzzing = 1;extern unsigned int *__afl_fuzz_len;extern unsigned char *__afl_fuzz_ptr;unsigned char __afl_fuzz_alt[1048576];unsigned char *__afl_fuzz_alt_ptr = __afl_fuzz_alt;",
      "-D__AFL_COVERAGE()=int __afl_selective_coverage = 1;void __afl_coverage_discard();void __afl_coverage_skip();void __afl_coverage_on();void __afl_coverage_off();",
      "-D__AFL_COVERAGE_START_OFF()=int __afl_selective_coverage_start_off = 1;",
      "-D__AFL_COVERAGE_ON()=__afl_coverage_on()",
      "-D__AFL_COVERAGE_OFF()=__afl_coverage_off()",
      "-D__AFL_COVERAGE_DISCARD()=__afl_coverage_discard()",
      "-D__AFL_COVERAGE_SKIP()=__afl_coverage_skip()",
      "-D__AFL_FUZZ_TESTCASE_BUF=(__afl_fuzz_ptr ? __afl_fuzz_ptr : __afl_fuzz_alt_ptr)",
      "-D__AFL_FUZZ_TESTCASE_LEN=(__afl_fuzz_ptr ? *__afl_fuzz_len : (*__afl_fuzz_len = read(0, __afl_fuzz_alt_ptr, 1048576)) == 0xffffffff ? 0 : *__afl_fuzz_len)",
      "-D__AFL_LOOP(_A)=({ static volatile char *_B __attribute__((used));  _B = (char*)\"##SIG_AFL_PERSISTENT##\"; __attribute__((visibility(\"default\"))) int _L(unsigned int) __asm__(\"__afl_persistent_loop\"); _L(_A); })",
      "-D__AFL_INIT()=do { static volatile char *_A __attribute__((used));  _A = (char*)\"##SIG_AFL_DEFER_FORKSRV##\"; __attribute__((visibility(\"default\"))) void _I(void) __asm__(\"__afl_manual_init\"); _I(); } while (0)",
      "-Wno-unused-command-line-argument",
      "-o",
      "skeleton.o",
      "skeleton.c"
    ],
    "directory": "/root/dataset_fuzz/speex-Speex-1.2.1/src",
    "file": "/root/dataset_fuzz/speex-Speex-1.2.1/src/skeleton.c",
    "output": "/root/dataset_fuzz/speex-Speex-1.2.1/src/skeleton.o"
  },
  {
    "arguments": [
      "/usr/lib/llvm-13/bin/clang",
      "-Wno-unused-command-line-argument",
      "-fno-experimental-new-pass-manager",
      "-Xclang",
      "-load",
      "-Xclang",
      "/usr/bin/../lib/afl//SanitizerCoveragePCGUARD.so",
      "-DHAVE_CONFIG_H",
      "-I.",
      "-I..",
      "-I../include",
      "-I../include/speex",
      "-I..",
      "-fsanitize=address",
      "-g",
      "-O1",
      "-fvisibility=hidden",
      "-Wall",
      "-c",
      "-g",
      "-funroll-loops",
      "-D__AFL_HAVE_MANUAL_CONTROL=1",
      "-D__AFL_COMPILER=1",
      "-DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION=1",
      "-D__AFL_FUZZ_INIT()=int __afl_sharedmem_fuzzing = 1;extern unsigned int *__afl_fuzz_len;extern unsigned char *__afl_fuzz_ptr;unsigned char __afl_fuzz_alt[1048576];unsigned char *__afl_fuzz_alt_ptr = __afl_fuzz_alt;",
      "-D__AFL_COVERAGE()=int __afl_selective_coverage = 1;void __afl_coverage_discard();void __afl_coverage_skip();void __afl_coverage_on();void __afl_coverage_off();",
      "-D__AFL_COVERAGE_START_OFF()=int __afl_selective_coverage_start_off = 1;",
      "-D__AFL_COVERAGE_ON()=__afl_coverage_on()",
      "-D__AFL_COVERAGE_OFF()=__afl_coverage_off()",
      "-D__AFL_COVERAGE_DISCARD()=__afl_coverage_discard()",
      "-D__AFL_COVERAGE_SKIP()=__afl_coverage_skip()",
      "-D__AFL_FUZZ_TESTCASE_BUF=(__afl_fuzz_ptr ? __afl_fuzz_ptr : __afl_fuzz_alt_ptr)",
      "-D__AFL_FUZZ_TESTCASE_LEN=(__afl_fuzz_ptr ? *__afl_fuzz_len : (*__afl_fuzz_len = read(0, __afl_fuzz_alt_ptr, 1048576)) == 0xffffffff ? 0 : *__afl_fuzz_len)",
      "-D__AFL_LOOP(_A)=({ static volatile char *_B __attribute__((used));  _B = (char*)\"##SIG_AFL_PERSISTENT##\"; __attribute__((visibility(\"default\"))) int _L(unsigned int) __asm__(\"__afl_persistent_loop\"); _L(_A); })",
      "-D__AFL_INIT()=do { static volatile char *_A __attribute__((used));  _A = (char*)\"##SIG_AFL_DEFER_FORKSRV##\"; __attribute__((visibility(\"default\"))) void _I(void) __asm__(\"__afl_manual_init\"); _I(); } while (0)",
      "-Wno-unused-command-line-argument",
      "-o",
      "speexdec.o",
      "speexdec.c"
    ],
    "directory": "/root/dataset_fuzz/speex-Speex-1.2.1/src",
    "file": "/root/dataset_fuzz/speex-Speex-1.2.1/src/speexdec.c",
    "output": "/root/dataset_fuzz/speex-Speex-1.2.1/src/speexdec.o"
  }
]

# Makefile.in generated by automake 1.17 from Makefile.am.
# src/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994-2024 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.






am__is_gnu_make = { \
  if test -z '$(MAKELEVEL)'; then \
    false; \
  elif test -n '$(MAKE_HOST)'; then \
    true; \
  elif test -n '$(MAKE_VERSION)' && test -n '$(CURDIR)'; then \
    true; \
  else \
    false; \
  fi; \
}
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
am__rm_f = rm -f $(am__rm_f_notfound)
am__rm_rf = rm -rf $(am__rm_f_notfound)
pkgdatadir = $(datadir)/elfutils
pkgincludedir = $(includedir)/elfutils
pkglibdir = $(libdir)/elfutils
pkglibexecdir = $(libexecdir)/elfutils
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = x86_64-pc-linux-gnu
host_triplet = x86_64-pc-linux-gnu
am__append_1 = -DSYMBOL_VERSIONING
bin_PROGRAMS = readelf$(EXEEXT) nm$(EXEEXT) size$(EXEEXT) \
	strip$(EXEEXT) elflint$(EXEEXT) findtextrel$(EXEEXT) \
	addr2line$(EXEEXT) elfcmp$(EXEEXT) objdump$(EXEEXT) \
	ranlib$(EXEEXT) strings$(EXEEXT) ar$(EXEEXT) unstrip$(EXEEXT) \
	stack$(EXEEXT) elfcompress$(EXEEXT) elfclassify$(EXEEXT) \
	srcfiles$(EXEEXT) $(am__EXEEXT_1)
#am__append_2 = stacktrace
subdir = src
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/ax_cxx_compile_stdcxx.m4 \
	$(top_srcdir)/m4/biarch.m4 $(top_srcdir)/m4/build-to-host.m4 \
	$(top_srcdir)/m4/gettext.m4 $(top_srcdir)/m4/host-cpu-c-abi.m4 \
	$(top_srcdir)/m4/iconv.m4 $(top_srcdir)/m4/intlmacosx.m4 \
	$(top_srcdir)/m4/lib-ld.m4 $(top_srcdir)/m4/lib-link.m4 \
	$(top_srcdir)/m4/lib-prefix.m4 $(top_srcdir)/m4/nls.m4 \
	$(top_srcdir)/m4/po.m4 $(top_srcdir)/m4/progtest.m4 \
	$(top_srcdir)/m4/zip.m4 $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
DIST_COMMON = $(srcdir)/Makefile.am $(am__DIST_COMMON)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
#am__EXEEXT_1 = stacktrace$(EXEEXT)
am__installdirs = "$(DESTDIR)$(bindir)" "$(DESTDIR)$(bindir)"
PROGRAMS = $(bin_PROGRAMS)
LIBRARIES = $(noinst_LIBRARIES)
AM_V_AR = $(am__v_AR_$(V))
am__v_AR_ = $(am__v_AR_$(AM_DEFAULT_VERBOSITY))
am__v_AR_0 = @echo "  AR      " $@;
am__v_AR_1 = 
libar_a_AR = $(AR) $(ARFLAGS)
libar_a_RANLIB = $(RANLIB)
libar_a_LIBADD =
am_libar_a_OBJECTS = arlib.$(OBJEXT) arlib2.$(OBJEXT) \
	arlib-argp.$(OBJEXT)
libar_a_OBJECTS = $(am_libar_a_OBJECTS)
addr2line_SOURCES = addr2line.c
addr2line_OBJECTS = addr2line.$(OBJEXT)
am__DEPENDENCIES_1 =
am__DEPENDENCIES_2 = ../libelf/libelf.so
#am__DEPENDENCIES_2 = ../libelf/libelf.a \
#	$(am__DEPENDENCIES_1)
am__DEPENDENCIES_3 = ../libdw/libdw.so
#am__DEPENDENCIES_3 = ../libdw/libdw.a \
#	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_2)
addr2line_DEPENDENCIES = $(am__DEPENDENCIES_3) $(am__DEPENDENCIES_2) \
	$(libeu) $(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
ar_SOURCES = ar.c
ar_OBJECTS = ar.$(OBJEXT)
ar_DEPENDENCIES = libar.a $(am__DEPENDENCIES_2) $(libeu) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
elfclassify_SOURCES = elfclassify.c
elfclassify_OBJECTS = elfclassify.$(OBJEXT)
elfclassify_DEPENDENCIES = $(am__DEPENDENCIES_2) $(am__DEPENDENCIES_3) \
	$(libeu) $(am__DEPENDENCIES_1)
elfcmp_SOURCES = elfcmp.c
elfcmp_OBJECTS = elfcmp.$(OBJEXT)
elfcmp_DEPENDENCIES = $(libebl) $(am__DEPENDENCIES_3) \
	$(am__DEPENDENCIES_2) $(libeu) $(am__DEPENDENCIES_1)
elfcompress_SOURCES = elfcompress.c
elfcompress_OBJECTS = elfcompress.$(OBJEXT)
elfcompress_DEPENDENCIES = $(libebl) $(am__DEPENDENCIES_2) \
	$(am__DEPENDENCIES_3) $(libeu) $(am__DEPENDENCIES_1)
elflint_SOURCES = elflint.c
elflint_OBJECTS = elflint.$(OBJEXT)
elflint_DEPENDENCIES = $(libebl) $(am__DEPENDENCIES_3) \
	$(am__DEPENDENCIES_2) $(libeu) $(am__DEPENDENCIES_1)
findtextrel_SOURCES = findtextrel.c
findtextrel_OBJECTS = findtextrel.$(OBJEXT)
findtextrel_DEPENDENCIES = $(am__DEPENDENCIES_3) $(am__DEPENDENCIES_2) \
	$(libeu) $(am__DEPENDENCIES_1)
nm_SOURCES = nm.c
nm_OBJECTS = nm.$(OBJEXT)
nm_DEPENDENCIES = $(am__DEPENDENCIES_3) $(libebl) \
	$(am__DEPENDENCIES_2) $(libeu) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
objdump_SOURCES = objdump.c
objdump_OBJECTS = objdump.$(OBJEXT)
objdump_DEPENDENCIES = $(libasm) $(libebl) $(am__DEPENDENCIES_3) \
	$(am__DEPENDENCIES_2) $(libeu) $(am__DEPENDENCIES_1)
ranlib_SOURCES = ranlib.c
ranlib_OBJECTS = ranlib.$(OBJEXT)
ranlib_DEPENDENCIES = libar.a $(am__DEPENDENCIES_2) $(libeu) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
readelf_SOURCES = readelf.c
readelf_OBJECTS = readelf.$(OBJEXT)
readelf_DEPENDENCIES = $(am__DEPENDENCIES_3) $(libebl) \
	$(am__DEPENDENCIES_2) $(libeu) $(am__DEPENDENCIES_1)
size_SOURCES = size.c
size_OBJECTS = size.$(OBJEXT)
size_DEPENDENCIES = $(am__DEPENDENCIES_2) $(libeu) \
	$(am__DEPENDENCIES_1)
am_srcfiles_OBJECTS = srcfiles.$(OBJEXT)
srcfiles_OBJECTS = $(am_srcfiles_OBJECTS)
#am__DEPENDENCIES_4 = ../debuginfod/libdebuginfod.so
##am__DEPENDENCIES_4 = ../debuginfod/libdebuginfod.a \
##	$(am__DEPENDENCIES_1) \
##	$(am__DEPENDENCIES_1) \
##	$(am__DEPENDENCIES_1)
srcfiles_DEPENDENCIES = $(am__DEPENDENCIES_3) $(am__DEPENDENCIES_2) \
	$(libeu) $(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_4)
stack_SOURCES = stack.c
stack_OBJECTS = stack.$(OBJEXT)
stack_DEPENDENCIES = $(libebl) $(am__DEPENDENCIES_2) \
	$(am__DEPENDENCIES_3) $(libeu) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
stacktrace_SOURCES = stacktrace.c
stacktrace_OBJECTS = stacktrace.$(OBJEXT)
#stacktrace_DEPENDENCIES = $(libebl) \
#	$(am__DEPENDENCIES_2) \
#	$(am__DEPENDENCIES_3) $(libeu) \
#	$(am__DEPENDENCIES_1)
strings_SOURCES = strings.c
strings_OBJECTS = strings.$(OBJEXT)
strings_DEPENDENCIES = $(am__DEPENDENCIES_2) $(libeu) \
	$(am__DEPENDENCIES_1)
strip_SOURCES = strip.c
strip_OBJECTS = strip.$(OBJEXT)
strip_DEPENDENCIES = $(libebl) $(am__DEPENDENCIES_2) \
	$(am__DEPENDENCIES_3) $(libeu) $(am__DEPENDENCIES_1)
unstrip_SOURCES = unstrip.c
unstrip_OBJECTS = unstrip.$(OBJEXT)
unstrip_DEPENDENCIES = $(libebl) $(am__DEPENDENCIES_2) \
	$(am__DEPENDENCIES_3) $(libeu) $(am__DEPENDENCIES_1)
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__uninstall_files_from_dir = { \
  { test ! -d "$$dir" && test ! -f "$$dir" && test ! -r "$$dir"; } \
  || { echo " ( cd '$$dir' && rm -f" $$files ")"; \
       $(am__cd) "$$dir" && echo $$files | $(am__xargs_n) 40 $(am__rm_f); }; \
  }
SCRIPTS = $(bin_SCRIPTS)
AM_V_P = $(am__v_P_$(V))
am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_$(V))
am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_$(V))
am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))
am__v_at_0 = @
am__v_at_1 = 
depcomp = $(SHELL) $(top_srcdir)/config/depcomp
am__maybe_remake_depfiles = depfiles
am__depfiles_remade = ./$(DEPDIR)/addr2line.Po ./$(DEPDIR)/ar.Po \
	./$(DEPDIR)/arlib-argp.Po ./$(DEPDIR)/arlib.Po \
	./$(DEPDIR)/arlib2.Po ./$(DEPDIR)/elfclassify.Po \
	./$(DEPDIR)/elfcmp.Po ./$(DEPDIR)/elfcompress.Po \
	./$(DEPDIR)/elflint.Po ./$(DEPDIR)/findtextrel.Po \
	./$(DEPDIR)/nm.Po ./$(DEPDIR)/objdump.Po ./$(DEPDIR)/ranlib.Po \
	./$(DEPDIR)/readelf.Po ./$(DEPDIR)/size.Po \
	./$(DEPDIR)/srcfiles.Po ./$(DEPDIR)/stack.Po \
	./$(DEPDIR)/stacktrace.Po ./$(DEPDIR)/strings.Po \
	./$(DEPDIR)/strip.Po ./$(DEPDIR)/unstrip.Po
am__mv = mv -f
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
AM_V_CC = $(am__v_CC_$(V))
am__v_CC_ = $(am__v_CC_$(AM_DEFAULT_VERBOSITY))
am__v_CC_0 = @echo "  CC      " $@;
am__v_CC_1 = 
CCLD = $(CC)
LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CCLD = $(am__v_CCLD_$(V))
am__v_CCLD_ = $(am__v_CCLD_$(AM_DEFAULT_VERBOSITY))
am__v_CCLD_0 = @echo "  CCLD    " $@;
am__v_CCLD_1 = 
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
AM_V_CXX = $(am__v_CXX_$(V))
am__v_CXX_ = $(am__v_CXX_$(AM_DEFAULT_VERBOSITY))
am__v_CXX_0 = @echo "  CXX     " $@;
am__v_CXX_1 = 
CXXLD = $(CXX)
CXXLINK = $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) \
	-o $@
AM_V_CXXLD = $(am__v_CXXLD_$(V))
am__v_CXXLD_ = $(am__v_CXXLD_$(AM_DEFAULT_VERBOSITY))
am__v_CXXLD_0 = @echo "  CXXLD   " $@;
am__v_CXXLD_1 = 
SOURCES = $(libar_a_SOURCES) addr2line.c ar.c elfclassify.c elfcmp.c \
	elfcompress.c elflint.c findtextrel.c nm.c objdump.c ranlib.c \
	readelf.c size.c $(srcfiles_SOURCES) stack.c stacktrace.c \
	strings.c strip.c unstrip.c
DIST_SOURCES = $(libar_a_SOURCES) addr2line.c ar.c elfclassify.c \
	elfcmp.c elfcompress.c elflint.c findtextrel.c nm.c objdump.c \
	ranlib.c readelf.c size.c $(srcfiles_SOURCES) stack.c \
	stacktrace.c strings.c strip.c unstrip.c
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
am__DIST_COMMON = $(srcdir)/Makefile.in $(top_srcdir)/config/depcomp \
	$(top_srcdir)/config/eu.am ChangeLog
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} '/root/dataset_fuzz/elfutils-0.193/config/missing' aclocal-1.17
AMTAR = $${TAR-tar}
AM_DEFAULT_VERBOSITY = 0
AR = ar
AUTOCONF = ${SHELL} '/root/dataset_fuzz/elfutils-0.193/config/missing' autoconf
AUTOHEADER = ${SHELL} '/root/dataset_fuzz/elfutils-0.193/config/missing' autoheader
AUTOMAKE = ${SHELL} '/root/dataset_fuzz/elfutils-0.193/config/missing' automake-1.17
AWK = gawk
BZ2_LIB = -lbz2 
CC = afl-clang-fast
CCDEPMODE = depmode=gcc3
CC_BIARCH = afl-clang-fast -m32
CFLAGS = -D_FORTIFY_SOURCE=3 -fsanitize=address -g -O1 -fno-omit-frame-pointer -fno-addrsig
CPP = afl-clang-fast -E
CPPFLAGS = 
CSCOPE = cscope
CTAGS = ctags
CXX = afl-clang-fast++ -std=c++11
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -D_FORTIFY_SOURCE=3 -fsanitize=address -g -O1 -fno-omit-frame-pointer
CYGPATH_W = echo
DEBUGINFOD_IMA_CERT_PATH = 
DEBUGINFOD_URLS = 
DEBUGPRED = 0
DEFS = -D_GNU_SOURCE -DHAVE_CONFIG_H -DLOCALEDIR='"${localedir}"' \
	$(YYDEBUG) -DDEBUGPRED=0 -DSRCDIR=\"$(shell cd \
	$(srcdir);pwd)\" -DOBJDIR=\"$(shell pwd)\"
DEPDIR = .deps
ECHO_C = 
ECHO_N = -n
ECHO_T = 
ETAGS = etags
EXEEXT = 
GCOV = 
GENHTML = 
GETTEXT_MACRO_VERSION = 0.22
GMSGFMT = /usr/bin/msgfmt
GMSGFMT_015 = /usr/bin/msgfmt
HAVE_BISON = yes
HAVE_BUNZIP2 = yes
HAVE_CXX11 = yes
HAVE_FLEX = yes
HAVE_GAWK = yes
HAVE_VALGRIND = 
HAVE_ZSTD = no
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
INTLLIBS = 
INTL_MACOSX_LIBS = 
LCOV = 
LDFLAGS = -fsanitize=address
LEX = flex
LEXLIB = 
LEX_OUTPUT_ROOT = lex.yy
LIBDEBUGINFOD_SONAME = libdebuginfod.so.1
LIBICONV = -liconv
LIBINTL = 
LIBLZMA = liblzma
LIBOBJS = 
LIBS = -lbz2 
LIBZSTD = libzstd
LTLIBICONV = -liconv
LTLIBINTL = 
LTLIBOBJS = 
MAINT = 
MAKEINFO = ${SHELL} '/root/dataset_fuzz/elfutils-0.193/config/missing' makeinfo
MKDIR_P = /usr/bin/mkdir -p
MSGFMT = /usr/bin/msgfmt
MSGMERGE = /usr/bin/msgmerge
MSGMERGE_FOR_MSGFMT_OPTION = --for-msgfmt
NM = nm
NO_UNDEFINED = -Wl,--no-undefined
OBJEXT = o
PACKAGE = elfutils
PACKAGE_BUGREPORT = https://sourceware.org/bugzilla
PACKAGE_NAME = elfutils
PACKAGE_STRING = elfutils 0.193
PACKAGE_TARNAME = elfutils
PACKAGE_URL = http://elfutils.org/
PACKAGE_VERSION = 0.193
PATH_SEPARATOR = :
PKG_CONFIG = /usr/bin/pkg-config
PKG_CONFIG_LIBDIR = 
PKG_CONFIG_PATH = 
POSUB = po
RANLIB = ranlib
READELF = readelf
SED = /usr/bin/sed
SET_MAKE = 
SHELL = /bin/bash
STRIP = 
USE_NLS = yes
VERSION = 0.193
XGETTEXT = /usr/bin/xgettext
XGETTEXT_015 = /usr/bin/xgettext
XGETTEXT_EXTRA_OPTIONS = 
YACC = bison -y
YFLAGS = 
ZSTD_COMPRESS_CFLAGS = 
ZSTD_COMPRESS_LIBS = -lzstd
abs_builddir = /root/dataset_fuzz/elfutils-0.193/src
abs_srcdir = /root/dataset_fuzz/elfutils-0.193/src
abs_top_builddir = /root/dataset_fuzz/elfutils-0.193
abs_top_srcdir = /root/dataset_fuzz/elfutils-0.193
ac_ct_AR = ar
ac_ct_CC = afl-clang-fast
ac_ct_CXX = 
am__include = include
am__leading_dot = .
am__quote = 
am__rm_f_notfound = 
am__tar = $${TAR-tar} chof - "$$tardir"
am__untar = $${TAR-tar} xf -
am__xargs_n = xargs -n
argp_LDADD = 
bindir = ${exec_prefix}/bin
build = x86_64-pc-linux-gnu
build_alias = 
build_cpu = x86_64
build_os = linux-gnu
build_vendor = pc
builddir = .
crypto_LIBS = 
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dso_LDFLAGS = -shared -Wl,-z,defs -Wl,-z,relro
dvidir = ${docdir}
eu_version = 193
exec_prefix = ${prefix}
fpic_CFLAGS = -fPIC
fpie_CFLAGS = -fPIE
fts_LIBS = 
host = x86_64-pc-linux-gnu
host_alias = 
host_cpu = x86_64
host_os = linux-gnu
host_vendor = pc
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /root/dataset_fuzz/elfutils-0.193/config/install-sh
jsonc_CFLAGS = 
jsonc_LIBS = 
libarchive_CFLAGS = 
libarchive_LIBS = 
libcurl_CFLAGS = -I/usr/include/x86_64-linux-gnu
libcurl_LIBS = -lcurl
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
libmicrohttpd_CFLAGS = 
libmicrohttpd_LIBS = 
localedir = ${datarootdir}/locale
localedir_c = "/usr/local/share/locale"
localedir_c_make = \"$(localedir)\"
localstatedir = ${prefix}/var
lzma_LIBS = -llzma 
mandir = ${datarootdir}/man
mkdir_p = $(MKDIR_P)
obstack_LIBS = 
oldincludedir = /usr/include
oldlibmicrohttpd_CFLAGS = 
oldlibmicrohttpd_LIBS = 
pdfdir = ${docdir}
prefix = /usr/local
program_transform_name = s&^&eu-&
psdir = ${docdir}
rpm_LIBS = 
runstatedir = ${localstatedir}/run
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
sqlite3_CFLAGS = 
sqlite3_LIBS = 
srcdir = .
sysconfdir = ${prefix}/etc
target_alias = 
top_build_prefix = ../
top_builddir = ..
top_srcdir = ..
zip_LIBS = -lzstd -llzma  -lbz2 
zstd_LIBS = -lzstd -llzma  -lbz2 
AM_CPPFLAGS = -iquote . -I$(srcdir) -I$(top_srcdir)/lib -I.. \
	-I$(srcdir)/../libelf -I$(srcdir)/../libebl \
	-I$(srcdir)/../libdw -I$(srcdir)/../libdwelf \
	-I$(srcdir)/../libdwfl -I$(srcdir)/../libdwfl_stacktrace \
	-I$(srcdir)/../libasm -I../debuginfod

# Drop the 'u' flag that automake adds by default. It is incompatible
# with deterministic archives.
ARFLAGS = cr
STACK_USAGE_WARNING = 

# Warn about stack usage of more than 256K = 262144 bytes.
#STACK_USAGE_WARNING = -Wstack-usage=262144
STACK_USAGE_NO_ERROR = 
#STACK_USAGE_NO_ERROR = -Wno-error=stack-usage=
LOGICAL_OP_WARNING = 
#LOGICAL_OP_WARNING = -Wlogical-op
DUPLICATED_COND_WARNING = 
#DUPLICATED_COND_WARNING = -Wduplicated-cond
#NULL_DEREFERENCE_WARNING = 
NULL_DEREFERENCE_WARNING = -Wnull-dereference
IMPLICIT_FALLTHROUGH_WARNING = -Wimplicit-fallthrough

# Use strict fallthrough. Only __attribute__((fallthrough)) will prevent the
# warning
#IMPLICIT_FALLTHROUGH_WARNING = -Wimplicit-fallthrough=5
#IMPLICIT_FALLTHROUGH_WARNING = 
TRAMPOLINES_WARNING = 
#TRAMPOLINES_WARNING = -Wtrampolines
NO_PACKED_NOT_ALIGNED_WARNING = 
#NO_PACKED_NOT_ALIGNED_WARNING = -Wno-packed-not-aligned
USE_AFTER_FREE3_WARNING = 
#USE_AFTER_FREE3_WARNING = -Wuse-after-free=3
AM_CFLAGS = -Wall -Wshadow -Wformat=2 \
	    -Wold-style-definition -Wstrict-prototypes $(TRAMPOLINES_WARNING) \
	    $(LOGICAL_OP_WARNING) $(DUPLICATED_COND_WARNING) \
	    $(NULL_DEREFERENCE_WARNING) $(IMPLICIT_FALLTHROUGH_WARNING) \
	    $(USE_AFTER_FREE3_WARNING) \
	    $(if $($(*F)_no_Werror),,-Werror) \
	    $(if $($(*F)_no_Wunused),,-Wunused -Wextra) \
	    $(if $($(*F)_no_Wstack_usage),,$(STACK_USAGE_WARNING)) \
	    $(if $($(*F)_no_Wpacked_not_aligned),$(NO_PACKED_NOT_ALIGNED_WARNING),) \
	    $($(*F)_CFLAGS)

AM_CXXFLAGS = -std=c++11 -Wall -Wshadow \
	   $(TRAMPOLINES_WARNING) \
	   $(LOGICAL_OP_WARNING) $(DUPLICATED_COND_WARNING) \
	   $(NULL_DEREFERENCE_WARNING) $(IMPLICIT_FALLTHROUGH_WARNING) \
	   $(if $($(*F)_no_Werror),,-Werror) \
	   $(if $($(*F)_no_Wunused),,-Wunused -Wextra) \
	   $(if $($(*F)_no_Wstack_usage),,$(STACK_USAGE_WARNING)) \
	   $(if $($(*F)_no_Wpacked_not_aligned),$(NO_PACKED_NOT_ALIGNED_WARNING),) \
	   $($(*F)_CXXFLAGS)

COMPILE.os = $(filter-out -fprofile-arcs -ftest-coverage, $(COMPILE))
DEFS.os = -DPIC -DSHARED $(am__append_1)
COVERAGE_OUTPUT_DIRECTORY = coverage
COVERAGE_OUTPUT_FILE = $(PACKAGE_NAME).lcov
textrel_msg = echo "WARNING: TEXTREL found in '$@'"
#textrel_found = $(textrel_msg)
textrel_found = $(textrel_msg); exit 1
textrel_check = if $(READELF) -d $@ | grep -F -q TEXTREL; then $(textrel_found); fi
DEFAULT_INCLUDES = 
AM_LDFLAGS = -Wl,-rpath-link,../libelf:../libdw $(STACK_USAGE_NO_ERROR)
noinst_LIBRARIES = libar.a
libar_a_SOURCES = arlib.c arlib2.c arlib-argp.c
bin_SCRIPTS = make-debug-archive
EXTRA_DIST = arlib.h debugpred.h make-debug-archive.in
EXTRA_libar_a_DEPENDENCIES = libar.manifest
MOSTLYCLEANFILES = *.gconv
CLEANFILES = $(bin_SCRIPTS) $(EXTRA_libar_a_DEPENDENCIES)
libasm = ../libasm/libasm.so
#libasm = ../libasm/libasm.a
libdw = ../libdw/libdw.so
#libdw = ../libdw/libdw.a -lz $(zip_LIBS) $(libelf) -ldl -lpthread
libelf = ../libelf/libelf.so
#libelf = ../libelf/libelf.a -lz $(zstd_LIBS)
libdebuginfod = 
#libdebuginfod = ../debuginfod/libdebuginfod.so
#libdebuginfod = 
##libdebuginfod = ../debuginfod/libdebuginfod.a -lpthread $(libcurl_LIBS) $(crypto_LIBS) $(jsonc_LIBS)
libebl = ../libebl/libebl.a ../backends/libebl_backends.a ../libcpu/libcpu.a
libeu = ../lib/libeu.a
demanglelib = -lstdc++

# Bad, bad stack usage...
readelf_no_Wstack_usage = yes
nm_no_Wstack_usage = yes
size_no_Wstack_usage = yes
strip_no_Wstack_usage = yes
elflint_no_Wstack_usage = yes
elfcmp_no_Wstack_usage = yes
objdump_no_Wstack_usage = yes
ranlib_no_Wstack_usage = yes
ar_no_Wstack_usage = yes
unstrip_no_Wstack_usage = yes
readelf_LDADD = $(libdw) $(libebl) $(libelf) $(libeu) $(argp_LDADD)
nm_LDADD = $(libdw) $(libebl) $(libelf) $(libeu) $(argp_LDADD) $(obstack_LIBS) \
	   $(demanglelib)

size_LDADD = $(libelf) $(libeu) $(argp_LDADD)
strip_LDADD = $(libebl) $(libelf) $(libdw) $(libeu) $(argp_LDADD)
elflint_LDADD = $(libebl) $(libdw) $(libelf) $(libeu) $(argp_LDADD)
findtextrel_LDADD = $(libdw) $(libelf) $(libeu) $(argp_LDADD)
addr2line_LDADD = $(libdw) $(libelf) $(libeu) $(argp_LDADD) $(demanglelib)
elfcmp_LDADD = $(libebl) $(libdw) $(libelf) $(libeu) $(argp_LDADD)
objdump_LDADD = $(libasm) $(libebl) $(libdw) $(libelf) $(libeu) $(argp_LDADD)
ranlib_LDADD = libar.a $(libelf) $(libeu) $(argp_LDADD) $(obstack_LIBS)
strings_LDADD = $(libelf) $(libeu) $(argp_LDADD)
ar_LDADD = libar.a $(libelf) $(libeu) $(argp_LDADD) $(obstack_LIBS)
unstrip_LDADD = $(libebl) $(libelf) $(libdw) $(libeu) $(argp_LDADD)
stack_LDADD = $(libebl) $(libelf) $(libdw) $(libeu) $(argp_LDADD) $(demanglelib)
#stacktrace_LDADD = $(libebl) $(libelf) $(libdw) $(libeu) $(argp_LDADD)
elfcompress_LDADD = $(libebl) $(libelf) $(libdw) $(libeu) $(argp_LDADD)
elfclassify_LDADD = $(libelf) $(libdw) $(libeu) $(argp_LDADD)
srcfiles_SOURCES = srcfiles.cxx
srcfiles_LDADD = $(libdw) $(libelf) $(libeu)  $(argp_LDADD) $(libarchive_LIBS) $(libdebuginfod)
all: all-am

.SUFFIXES:
.SUFFIXES: .c .cxx .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am $(top_srcdir)/config/eu.am $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnits src/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --gnits src/Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__maybe_remake_depfiles)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__maybe_remake_depfiles);; \
	esac;
$(top_srcdir)/config/eu.am $(am__empty):

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(bindir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(bindir)" || exit 1; \
	fi; \
	for p in $$list; do echo "$$p $$p"; done | \
	sed 's/$(EXEEXT)$$//' | \
	while read p p1; do if test -f $$p \
	  ; then echo "$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n;h' \
	    -e 's|.*|.|' \
	    -e 'p;x;s,.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/' | \
	sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1 } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) files[d] = files[d] " " $$1; \
	    else { print "f", $$3 "/" $$4, $$1; } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	    if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	    test -z "$$files" || { \
	      echo " $(INSTALL_PROGRAM_ENV) $(INSTALL_PROGRAM) $$files '$(DESTDIR)$(bindir)$$dir'"; \
	      $(INSTALL_PROGRAM_ENV) $(INSTALL_PROGRAM) $$files "$(DESTDIR)$(bindir)$$dir" || exit $$?; \
	    } \
	; done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	files=`for p in $$list; do echo "$$p"; done | \
	  sed -e 'h;s,^.*/,,;s/$(EXEEXT)$$//;$(transform)' \
	      -e 's/$$/$(EXEEXT)/' \
	`; \
	test -n "$$list" || exit 0; \
	echo " ( cd '$(DESTDIR)$(bindir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(bindir)" && $(am__rm_f) $$files

clean-binPROGRAMS:
	-$(am__rm_f) $(bin_PROGRAMS)

clean-noinstLIBRARIES:
	-$(am__rm_f) $(noinst_LIBRARIES)

libar.a: $(libar_a_OBJECTS) $(libar_a_DEPENDENCIES) $(EXTRA_libar_a_DEPENDENCIES) 
	$(AM_V_at)-rm -f libar.a
	$(AM_V_AR)$(libar_a_AR) libar.a $(libar_a_OBJECTS) $(libar_a_LIBADD)
	$(AM_V_at)$(libar_a_RANLIB) libar.a

addr2line$(EXEEXT): $(addr2line_OBJECTS) $(addr2line_DEPENDENCIES) $(EXTRA_addr2line_DEPENDENCIES) 
	@rm -f addr2line$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(addr2line_OBJECTS) $(addr2line_LDADD) $(LIBS)

ar$(EXEEXT): $(ar_OBJECTS) $(ar_DEPENDENCIES) $(EXTRA_ar_DEPENDENCIES) 
	@rm -f ar$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(ar_OBJECTS) $(ar_LDADD) $(LIBS)

elfclassify$(EXEEXT): $(elfclassify_OBJECTS) $(elfclassify_DEPENDENCIES) $(EXTRA_elfclassify_DEPENDENCIES) 
	@rm -f elfclassify$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(elfclassify_OBJECTS) $(elfclassify_LDADD) $(LIBS)

elfcmp$(EXEEXT): $(elfcmp_OBJECTS) $(elfcmp_DEPENDENCIES) $(EXTRA_elfcmp_DEPENDENCIES) 
	@rm -f elfcmp$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(elfcmp_OBJECTS) $(elfcmp_LDADD) $(LIBS)

elfcompress$(EXEEXT): $(elfcompress_OBJECTS) $(elfcompress_DEPENDENCIES) $(EXTRA_elfcompress_DEPENDENCIES) 
	@rm -f elfcompress$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(elfcompress_OBJECTS) $(elfcompress_LDADD) $(LIBS)

elflint$(EXEEXT): $(elflint_OBJECTS) $(elflint_DEPENDENCIES) $(EXTRA_elflint_DEPENDENCIES) 
	@rm -f elflint$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(elflint_OBJECTS) $(elflint_LDADD) $(LIBS)

findtextrel$(EXEEXT): $(findtextrel_OBJECTS) $(findtextrel_DEPENDENCIES) $(EXTRA_findtextrel_DEPENDENCIES) 
	@rm -f findtextrel$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(findtextrel_OBJECTS) $(findtextrel_LDADD) $(LIBS)

nm$(EXEEXT): $(nm_OBJECTS) $(nm_DEPENDENCIES) $(EXTRA_nm_DEPENDENCIES) 
	@rm -f nm$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(nm_OBJECTS) $(nm_LDADD) $(LIBS)

objdump$(EXEEXT): $(objdump_OBJECTS) $(objdump_DEPENDENCIES) $(EXTRA_objdump_DEPENDENCIES) 
	@rm -f objdump$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(objdump_OBJECTS) $(objdump_LDADD) $(LIBS)

ranlib$(EXEEXT): $(ranlib_OBJECTS) $(ranlib_DEPENDENCIES) $(EXTRA_ranlib_DEPENDENCIES) 
	@rm -f ranlib$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(ranlib_OBJECTS) $(ranlib_LDADD) $(LIBS)

readelf$(EXEEXT): $(readelf_OBJECTS) $(readelf_DEPENDENCIES) $(EXTRA_readelf_DEPENDENCIES) 
	@rm -f readelf$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(readelf_OBJECTS) $(readelf_LDADD) $(LIBS)

size$(EXEEXT): $(size_OBJECTS) $(size_DEPENDENCIES) $(EXTRA_size_DEPENDENCIES) 
	@rm -f size$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(size_OBJECTS) $(size_LDADD) $(LIBS)

srcfiles$(EXEEXT): $(srcfiles_OBJECTS) $(srcfiles_DEPENDENCIES) $(EXTRA_srcfiles_DEPENDENCIES) 
	@rm -f srcfiles$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(srcfiles_OBJECTS) $(srcfiles_LDADD) $(LIBS)

stack$(EXEEXT): $(stack_OBJECTS) $(stack_DEPENDENCIES) $(EXTRA_stack_DEPENDENCIES) 
	@rm -f stack$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(stack_OBJECTS) $(stack_LDADD) $(LIBS)

stacktrace$(EXEEXT): $(stacktrace_OBJECTS) $(stacktrace_DEPENDENCIES) $(EXTRA_stacktrace_DEPENDENCIES) 
	@rm -f stacktrace$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(stacktrace_OBJECTS) $(stacktrace_LDADD) $(LIBS)

strings$(EXEEXT): $(strings_OBJECTS) $(strings_DEPENDENCIES) $(EXTRA_strings_DEPENDENCIES) 
	@rm -f strings$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(strings_OBJECTS) $(strings_LDADD) $(LIBS)

strip$(EXEEXT): $(strip_OBJECTS) $(strip_DEPENDENCIES) $(EXTRA_strip_DEPENDENCIES) 
	@rm -f strip$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(strip_OBJECTS) $(strip_LDADD) $(LIBS)

unstrip$(EXEEXT): $(unstrip_OBJECTS) $(unstrip_DEPENDENCIES) $(EXTRA_unstrip_DEPENDENCIES) 
	@rm -f unstrip$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(unstrip_OBJECTS) $(unstrip_LDADD) $(LIBS)
install-binSCRIPTS: $(bin_SCRIPTS)
	@$(NORMAL_INSTALL)
	@list='$(bin_SCRIPTS)'; test -n "$(bindir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(bindir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(bindir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  if test -f "$$d$$p"; then echo "$$d$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n' \
	    -e 'h;s|.*|.|' \
	    -e 'p;x;s,.*/,,;$(transform)' | sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1; } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) { files[d] = files[d] " " $$1; \
	      if (++n[d] == $(am__install_max)) { \
		print "f", d, files[d]; n[d] = 0; files[d] = "" } } \
	    else { print "f", d "/" $$4, $$1 } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	     if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	     test -z "$$files" || { \
	       echo " $(INSTALL_SCRIPT) $$files '$(DESTDIR)$(bindir)$$dir'"; \
	       $(INSTALL_SCRIPT) $$files "$(DESTDIR)$(bindir)$$dir" || exit $$?; \
	     } \
	; done

uninstall-binSCRIPTS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_SCRIPTS)'; test -n "$(bindir)" || exit 0; \
	files=`for p in $$list; do echo "$$p"; done | \
	       sed -e 's,.*/,,;$(transform)'`; \
	dir='$(DESTDIR)$(bindir)'; $(am__uninstall_files_from_dir)

installcheck-binSCRIPTS: $(bin_SCRIPTS)
	bad=0; pid=$$$$; list="$(bin_SCRIPTS)"; for p in $$list; do \
	  case ' $(AM_INSTALLCHECK_STD_OPTIONS_EXEMPT) ' in \
	   *" $$p "* | *" $(srcdir)/$$p "*) continue;; \
	  esac; \
	  f=`echo "$$p" | sed 's,^.*/,,;$(transform)'`; \
	  for opt in --help --version; do \
	    if "$(DESTDIR)$(bindir)/$$f" $$opt >c$${pid}_.out \
	         2>c$${pid}_.err </dev/null \
		 && test -n "`cat c$${pid}_.out`" \
		 && test -z "`cat c$${pid}_.err`"; then :; \
	    else echo "$$f does not support $$opt" 1>&2; bad=1; fi; \
	  done; \
	done; rm -f c$${pid}_.???; exit $$bad

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/addr2line.Po # am--include-marker
include ./$(DEPDIR)/ar.Po # am--include-marker
include ./$(DEPDIR)/arlib-argp.Po # am--include-marker
include ./$(DEPDIR)/arlib.Po # am--include-marker
include ./$(DEPDIR)/arlib2.Po # am--include-marker
include ./$(DEPDIR)/elfclassify.Po # am--include-marker
include ./$(DEPDIR)/elfcmp.Po # am--include-marker
include ./$(DEPDIR)/elfcompress.Po # am--include-marker
include ./$(DEPDIR)/elflint.Po # am--include-marker
include ./$(DEPDIR)/findtextrel.Po # am--include-marker
include ./$(DEPDIR)/nm.Po # am--include-marker
include ./$(DEPDIR)/objdump.Po # am--include-marker
include ./$(DEPDIR)/ranlib.Po # am--include-marker
include ./$(DEPDIR)/readelf.Po # am--include-marker
include ./$(DEPDIR)/size.Po # am--include-marker
include ./$(DEPDIR)/srcfiles.Po # am--include-marker
include ./$(DEPDIR)/stack.Po # am--include-marker
include ./$(DEPDIR)/stacktrace.Po # am--include-marker
include ./$(DEPDIR)/strings.Po # am--include-marker
include ./$(DEPDIR)/strip.Po # am--include-marker
include ./$(DEPDIR)/unstrip.Po # am--include-marker

$(am__depfiles_remade):
	@$(MKDIR_P) $(@D)
	@: >>$@

am--depfiles: $(am__depfiles_remade)

.c.o:
	$(AM_V_CC)$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	$(AM_V_CC)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(COMPILE) -c -o $@ $<

.c.obj:
	$(AM_V_CC)$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	$(AM_V_CC)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(COMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cxx.o:
	$(AM_V_CXX)$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	$(AM_V_CXX)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXXCOMPILE) -c -o $@ $<

.cxx.obj:
	$(AM_V_CXX)$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	$(AM_V_CXX)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-am
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-am

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscopelist: cscopelist-am

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags
distdir: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) distdir-am

distdir-am: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(PROGRAMS) $(LIBRARIES) $(SCRIPTS)
installdirs:
	for dir in "$(DESTDIR)$(bindir)" "$(DESTDIR)$(bindir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:
	-$(am__rm_f) $(MOSTLYCLEANFILES)

clean-generic:
	-$(am__rm_f) $(CLEANFILES)

distclean-generic:
	-$(am__rm_f) $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || $(am__rm_f) $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-binPROGRAMS clean-generic clean-local \
	clean-noinstLIBRARIES mostlyclean-am

distclean: distclean-am
	-rm -f ./$(DEPDIR)/addr2line.Po
	-rm -f ./$(DEPDIR)/ar.Po
	-rm -f ./$(DEPDIR)/arlib-argp.Po
	-rm -f ./$(DEPDIR)/arlib.Po
	-rm -f ./$(DEPDIR)/arlib2.Po
	-rm -f ./$(DEPDIR)/elfclassify.Po
	-rm -f ./$(DEPDIR)/elfcmp.Po
	-rm -f ./$(DEPDIR)/elfcompress.Po
	-rm -f ./$(DEPDIR)/elflint.Po
	-rm -f ./$(DEPDIR)/findtextrel.Po
	-rm -f ./$(DEPDIR)/nm.Po
	-rm -f ./$(DEPDIR)/objdump.Po
	-rm -f ./$(DEPDIR)/ranlib.Po
	-rm -f ./$(DEPDIR)/readelf.Po
	-rm -f ./$(DEPDIR)/size.Po
	-rm -f ./$(DEPDIR)/srcfiles.Po
	-rm -f ./$(DEPDIR)/stack.Po
	-rm -f ./$(DEPDIR)/stacktrace.Po
	-rm -f ./$(DEPDIR)/strings.Po
	-rm -f ./$(DEPDIR)/strip.Po
	-rm -f ./$(DEPDIR)/unstrip.Po
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am: install-binPROGRAMS install-binSCRIPTS

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am: installcheck-binPROGRAMS installcheck-binSCRIPTS

maintainer-clean: maintainer-clean-am
	-rm -f ./$(DEPDIR)/addr2line.Po
	-rm -f ./$(DEPDIR)/ar.Po
	-rm -f ./$(DEPDIR)/arlib-argp.Po
	-rm -f ./$(DEPDIR)/arlib.Po
	-rm -f ./$(DEPDIR)/arlib2.Po
	-rm -f ./$(DEPDIR)/elfclassify.Po
	-rm -f ./$(DEPDIR)/elfcmp.Po
	-rm -f ./$(DEPDIR)/elfcompress.Po
	-rm -f ./$(DEPDIR)/elflint.Po
	-rm -f ./$(DEPDIR)/findtextrel.Po
	-rm -f ./$(DEPDIR)/nm.Po
	-rm -f ./$(DEPDIR)/objdump.Po
	-rm -f ./$(DEPDIR)/ranlib.Po
	-rm -f ./$(DEPDIR)/readelf.Po
	-rm -f ./$(DEPDIR)/size.Po
	-rm -f ./$(DEPDIR)/srcfiles.Po
	-rm -f ./$(DEPDIR)/stack.Po
	-rm -f ./$(DEPDIR)/stacktrace.Po
	-rm -f ./$(DEPDIR)/strings.Po
	-rm -f ./$(DEPDIR)/strip.Po
	-rm -f ./$(DEPDIR)/unstrip.Po
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-binPROGRAMS uninstall-binSCRIPTS

.MAKE: install-am install-strip

.PHONY: CTAGS GTAGS TAGS all all-am am--depfiles check check-am clean \
	clean-binPROGRAMS clean-generic clean-local \
	clean-noinstLIBRARIES cscopelist-am ctags ctags-am distclean \
	distclean-compile distclean-generic distclean-tags distdir dvi \
	dvi-am html html-am info info-am install install-am \
	install-binPROGRAMS install-binSCRIPTS install-data \
	install-data-am install-dvi install-dvi-am install-exec \
	install-exec-am install-html install-html-am install-info \
	install-info-am install-man install-pdf install-pdf-am \
	install-ps install-ps-am install-strip installcheck \
	installcheck-am installcheck-binPROGRAMS \
	installcheck-binSCRIPTS installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic pdf pdf-am ps ps-am tags tags-am uninstall \
	uninstall-am uninstall-binPROGRAMS uninstall-binSCRIPTS

.PRECIOUS: Makefile


%.os: %.c %.o
	$(AM_V_CC)if $(COMPILE.os) -c -o $@ $(fpic_CFLAGS) $(DEFS.os) -MT $@ -MD -MP \
	  -MF "$(DEPDIR)/$*.Tpo" `test -f '$<' || echo '$(srcdir)/'`$<; \
	then cat "$(DEPDIR)/$*.Tpo" >> "$(DEPDIR)/$*.Po"; \
	     rm -f "$(DEPDIR)/$*.Tpo"; \
	else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; \
	fi
#	$(AM_V_CC)$(COMPILE.os) -c -o $@ $(fpic_CFLAGS) $(DEFS.os) $<

.PHONY: clean-coverage coverage

clean-local: clean-coverage
clean-coverage:
	-rm -rf $(COVERAGE_OUTPUT_DIRECTORY)
	-rm -f $(COVERAGE_OUTPUT_FILE) *.gcno *.gcda

print-%:
	@echo $*=$($*)

libar.manifest: $(libar_a_OBJECTS)
	$(AM_V_GEN)echo $^ > $@

installcheck-binPROGRAMS: $(bin_PROGRAMS)
	bad=0; pid=$$$$; list="$(bin_PROGRAMS)"; for p in $$list; do \
	  case ' $(AM_INSTALLCHECK_STD_OPTIONS_EXEMPT) ' in \
	   *" $$p "* | *" $(srcdir)/$$p "*) continue;; \
	  esac; \
	  f=`echo "$$p" | \
	     sed 's,^.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/'`; \
	  for opt in --help --version; do \
	    if LD_LIBRARY_PATH=$(DESTDIR)$(libdir) \
	       $(DESTDIR)$(bindir)/$$f $$opt > c$${pid}_.out 2> c$${pid}_.err \
		 && test -n "`cat c$${pid}_.out`" \
		 && test -z "`cat c$${pid}_.err`"; then :; \
	    else echo "$$f does not support $$opt" 1>&2; bad=1; fi; \
	  done; \
	done; rm -f c$${pid}_.???; exit $$bad

make-debug-archive: $(srcdir)/make-debug-archive.in
	$(AM_V_GEN)UNSTRIP=$(bindir)/`echo unstrip | sed '$(transform)'`; \
	AR=$(bindir)/`echo ar | sed '$(transform)'`; \
	sed -e "s,[@]UNSTRIP[@],$$UNSTRIP,g" -e "s,[@]AR[@],$$AR,g" \
	    -e "s%[@]PACKAGE_NAME[@]%$(PACKAGE_NAME)%g" \
	    -e "s%[@]PACKAGE_VERSION[@]%$(PACKAGE_VERSION)%g" \
	    $(srcdir)/make-debug-archive.in > $@.new
	$(AM_V_at)chmod +x $@.new
	$(AM_V_at)mv -f $@.new $@

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:

# Tell GNU make to disable its built-in pattern rules.
%:: %,v
%:: RCS/%,v
%:: RCS/%
%:: s.%
%:: SCCS/s.%
